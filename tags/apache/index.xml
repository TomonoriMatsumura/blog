<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>apache on Mainroad</title><link>https://tomonorimatsumura.github.io/blog/tags/apache/</link><description>Recent content in apache on Mainroad</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 31 Dec 2012 05:24:12 +0000</lastBuildDate><atom:link href="https://tomonorimatsumura.github.io/blog/tags/apache/index.xml" rel="self" type="application/rss+xml"/><item><title>CentOS6.3でApache上でRedmineを実行する</title><link>https://tomonorimatsumura.github.io/blog/p459/</link><pubDate>Mon, 31 Dec 2012 05:24:12 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p459/</guid><description>こちらのサイトを参考にした。
Passengerのインストール Phusion Passengerをインストールする
gem install passenger --no-rdoc --no-ri PassengerのApache用モジュールのインストールと設定 service httpd start # Apacheを機動させておく passenger-install-apache2-module 『/etc/httpd/conf.d/passenger.conf』を作成し「passenger-install-apache2-module –snippet」で表示される設定を書き込む。
# Passengerの基本設定。 # passenger-install-apache2-module --snippet を実行して表示される設定を使用。 # 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。 # LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17 PassengerRuby /usr/local/bin/ruby Apacheの起動および自動起動の設定 /etc/init.d/httpd start chkconfig httpd on Apache上のPassengerでRedmineを実行するための設定 サブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。
ln -s /var/lib/redmine/public /var/www/html/redmine 『/etc/httpd/conf.d/passenger.conf』に以下の設定を追加。
RackBaseURI /redmine またRedmineインストールディレクトリの権限の設定も行う事。
chown -R apache:apache /var/lib/redmine 設定後、Apacheを再起動。
/etc/init.d/httpd configtest /etc/init.d/httpd graceful 参考サイト Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</description></item><item><title>CentOS6にJenkinsをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p201/</link><pubDate>Fri, 30 Nov 2012 15:59:15 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p201/</guid><description>Javaをインストールする Javaがインストールされていない場合はインストールする。
rpm -qa java-1.7.0-openjdk yum -y install java-1.7.0-openjdk Jenkinsをインストールする 基本的には公式ページを参考にする。
http://pkg.jenkins-ci.org/redhat/
sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key yum install jenkins Jenkinsを起動する Jenkinsはポート8080がディフォルト。
httpd -k start /sbin/service jenkins start ブラウザからhttp://localhost:8080/へアクセス。
JenkinsとApacheを連携させる まずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。
cd /etc/httpd/conf.d vi mod_proxy.conf # 書き込み内容 ProxyPass /jenkins http://localhost:8080/jenkins ProxyPassReverse /jenkins http://localhost:8080/jenkins ProxyRequests Off Jenkinsの設定ファイルを書き換える
vi /etc/sysconfig/jenkins JENKINS_ARGS=&amp;quot;--prefix=/jenkins&amp;quot; #最終行を書き換え ApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる
httpd -k stop httpd -k start /sbin/service jenkins start 参考サイト RedHat Linux RPM packages for Jenkins Apache のリバースプロキシの設定方法 | WebOS Goodies jenkinsとapacheの連携 – Dev3TechHack</description></item><item><title>CentOS6.3にRedmine環境を構築する</title><link>https://tomonorimatsumura.github.io/blog/p190/</link><pubDate>Mon, 26 Nov 2012 17:13:25 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p190/</guid><description>Tracがどうも使いにくいのでRedmineに移行してみる実験をする。
CentOSパッケージの追加インストール まずはEPELが導入されているか確かめる。導入されてなければインストールする。
yumで追加インストール
# 開発パッケージを導入。こちらは使わないものもいくらか入る yum groupinstall &amp;amp;quot;Development Tools&amp;amp;quot; # 通信関係を入れたりアップデートする yum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel # MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！ yum install mysql-server mysql-devel # Apacheをアップデートする（一応やっておく） yum install httpd httpd-devel # ImageMagickをインストールアップデートする（多分入ってない） yum install ImageMagick ImageMagick-devel SELinuxを無効にする エディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。
vi /etc/sysconfig/selinux SELINUX=disabled reboot iptablesでHTTPを許可する CentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。
vi /etc/sysconfig/iptables # Firewall configuration written by system-config-firewall # Manual customization of this file is not recommended. *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT -A INPUT -p icmp -j ACCEPT -A INPUT -i lo -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT -A INPUT -j REJECT --reject-with icmp-host-prohibited -A FORWARD -j REJECT --reject-with icmp-host-prohibited COMMIT # iptablesを再起動する service iptables restart Ruby 1.</description></item></channel></rss>