<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mainroad</title><link>https://tomonorimatsumura.github.io/blog/</link><description>Recent content on Mainroad</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Tue, 26 Sep 2017 17:00:20 +0000</lastBuildDate><atom:link href="https://tomonorimatsumura.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Jenkinsでジョブの設定を一気に書き換える</title><link>https://tomonorimatsumura.github.io/blog/p1331/</link><pubDate>Tue, 26 Sep 2017 17:00:20 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1331/</guid><description>書き換え find /var/lib/jenkins/jobs -type f -name config.xml -print0 | xargs -0 sed -i &amp;quot;s/git clone-b jenkins-test/git clone -b topic/g&amp;quot; ドライラン(iオプションを無くす) find /var/lib/jenkins/jobs -type f -name config.xml -print0 | xargs -0 sed &amp;quot;s/git clone-b jenkins-test/git clone -b topic/g&amp;quot; 参考サイト 備忘録: [unix] スペースを含むファイル名をfindとxargsで使う方法</description></item><item><title>CentOS7でJenkinsをバックアップ、リストアする</title><link>https://tomonorimatsumura.github.io/blog/p1320/</link><pubDate>Thu, 14 Sep 2017 13:29:22 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1320/</guid><description>Jenkinsバックアップデータを作成する # Jenkins稼働サーバで systemctl stop jenkins git clone https://github.com/sue445/jenkins-backup-script.git bash jenkins-backup.sh /path/to/jenkins archives.tar.gz Jenkinsをリストアする # Jenkinsを停止する systemctl stop jenkins # 稼働中のJenkinsのデータを消去する rm -rf /var/cache/jenkins/* rm -rf /path/to/jenkins/jobs/ rm -rf /path/to/jenkins/plugins/ rm -rf /path/to/jenkins/users/ rm -rf /path/to/jenkins/secrets/ # バックアップデータをリストアする tar xfvz archives.tar.gz cd jenkins-backup/ mv -f * /path/to/jenkins chown -R jenkins:jenkins /path/to/jenkins # Jenkinsを再起動する systemctl start jenkins 参考サイト バックアップ Jenkinsのバックアップ方法 – Qiita GitHub – sue445/jenkins-backup-script: archive jenkins setting and plugins リストア cpコマンド で確認なしに上書き（Linux） – 創屋ぷれす Redmineチケット Jenkinsのバックアップとリストアについて調べる</description></item><item><title>CentOS7へJenkinsをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1317/</link><pubDate>Thu, 14 Sep 2017 12:51:12 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1317/</guid><description>Jenkinsをインストールする # Javaをインストールする yum install java # yumリポジトリにjenkinsのリポジトリを追加する wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key # Jenkinsをインストールする yum install jenkins # Jenkinsを起動する systemctl start jenkins # Jenkinsが利用するポートを解放する firewall-cmd --zone=public --permanent --add-port=8080/tcp firewall-cmd --reload # システムのロケールを変更する localectl set-locale LANG=ja_JP.utf8 source /etc/locale.conf 参考サイト CentOS7へのJenkinsのインストール手順 – Qiita [CentOS]CentOS7でのロケール(locale)の確認及び変更 | Zero Configuration Jenkinsの文字コードを確認・設定する方法 – Qiita</description></item><item><title>CentOS7でRedmineをバックアップ、リストアする</title><link>https://tomonorimatsumura.github.io/blog/p1312/</link><pubDate>Thu, 14 Sep 2017 12:30:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1312/</guid><description>Redmineをバックアップをする # 作業用ディレクトリへcdする cd /tmp # Gitリポジトリをアーカイブする tar cfv git.tar /var/git/ # Redmineメディアファイルをアーカイブする tar cfv files.tar /var/lib/redmine/files/ # PostgeSQLデータベースをダンプする pg_dump -h localhost -U redmine redmine &amp;amp;gt; redmine.psql # アーカイブデータ、データベースダンプデータをアーカイブする tar cfv redmine.bk.tar * # アーカイブスデータを公開ディレクトリへ移動させる mv redmine.bk.tar /var/www/html/ Redmineをリストアする # 作業用ディレクトリへcdする cd /tmp # Redmineバックアップアーカイブスデータを取得する curl -O http://example.com/redmine.bk.tar # アーカイブスデータを解凍する tar xfv redmine.bk.tar # Gitリポジトリを配置する cd /tmp/redmine mv git /var/ # メディアファイルを配置する cd /tmp/redmine/ mv files/ /var/lib/redmine/ # PostgreSQLデータベースをリストアする systemctl stop postgresql.</description></item><item><title>HP Compaq 8100 Elite Small に nVIDIA GeForce GT520 1GB LowProfile を装着し CentOS7をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1309/</link><pubDate>Mon, 03 Jul 2017 15:09:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1309/</guid><description>CentOS7を設定する # フォントを大きくする setfont sun12x22 # インターネットへ接続する nmtui # GNOME デスクトップをインストールする yum groupinstall &amp;quot;GNOME Desktop&amp;quot; # nVIDIAグラフィックカードドライバーのインストールrpmをインストールする rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm echo $(nvidia-detect) yum install kmod-nvidia.x86_64 # ターゲットユニットを設定する systemctl get-default systemctl set-default graphical.target # 再起動する reboot 参考サイト Please Help with NVIDIA Driver installation on Centos 7 – CentOS</description></item><item><title>Ansibleで環境変数を取得する</title><link>https://tomonorimatsumura.github.io/blog/p1295/</link><pubDate>Thu, 04 May 2017 08:09:27 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1295/</guid><description>Ansibleでデバグを行う際に環境変数を調べる必要が出てきた。
環境変数を取得する コマンド
ansible -m setup hostname # VPSに最初に接続する例 # インベントリーファイルを指定してparamikoを利用する export ANSIBLE_HOST_KEY_CHECKING=False; ansible -u root -k -i /path/to/inventory_file -m setup &amp;quot;160.xx.xxx.xxx,&amp;quot; --ask-vault-pass -c paramiko &amp;amp;gt; setup_envs 実行結果
localhost | SUCCESS =&amp;amp;gt; { &amp;quot;ansible_facts&amp;quot;: { &amp;quot;ansible_all_ipv4_addresses&amp;quot;: [ &amp;quot;172.17.0.1&amp;quot;, &amp;quot;160.16.242.225&amp;quot; ], &amp;quot;ansible_all_ipv6_addresses&amp;quot;: [ &amp;quot;2001:e42:102:1823:160:16:242:225&amp;quot;, &amp;quot;fe80::9ea3:baff:fe02:27a5&amp;quot; ], &amp;quot;ansible_apparmor&amp;quot;: { &amp;quot;status&amp;quot;: &amp;quot;disabled&amp;quot; }, &amp;quot;ansible_architecture&amp;quot;: &amp;quot;x86_64&amp;quot;, &amp;quot;ansible_bios_date&amp;quot;: &amp;quot;01/01/2011&amp;quot;, &amp;quot;ansible_bios_version&amp;quot;: &amp;quot;Bochs&amp;quot;, &amp;quot;ansible_cmdline&amp;quot;: { &amp;quot;BOOT_IMAGE&amp;quot;: &amp;quot;/vmlinuz-3.10.0-514.6.1.el7.x86_64&amp;quot;, &amp;quot;LANG&amp;quot;: &amp;quot;C&amp;quot;, &amp;quot;biosdevname&amp;quot;: &amp;quot;0&amp;quot;, &amp;quot;console&amp;quot;: &amp;quot;ttyS0,115200n8r&amp;quot;, &amp;quot;consoleblank&amp;quot;: &amp;quot;0&amp;quot;, &amp;quot;elevator&amp;quot;: &amp;quot;noop&amp;quot;, &amp;quot;net.</description></item><item><title>Historyコマンドからコマンド利用頻度を調べる</title><link>https://tomonorimatsumura.github.io/blog/p1293/</link><pubDate>Sat, 22 Apr 2017 14:43:51 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1293/</guid><description>history | awk &amp;quot;{print $2}&amp;quot; | sort | uniq -c | sort -n -r -k1</description></item><item><title>さくらのVPSにFreeBSD 9.3をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1250/</link><pubDate>Sun, 19 Mar 2017 09:11:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1250/</guid><description>ISOイメージをVPSへアップロードする クライアントマシーン（CentOS7）にlsftpをインストールする。
yum install lftp FreeBSDのアーカイブスから取得出来る。
lftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/ #接続後ISOイメージをダウンロード cd release/ISO-IMAGES/9.3 get FreeBSD-9.3-RELEASE-amd64-dvd1.iso さくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。
FreeBSDをインストールする インストーラーを起動する さくらのVPSコントロールパネルよりウェブコンソールを立ち上げてしばらく待つとインストーラーのウェルカム画面が表示される。
キーボードを選択する 『Japanse 106』を選択する
ホストを設定する さくらのVPSコントロールパネルより『ネットワーク情報』→『標準ホスト名』を入力する
オプションを設定する 必要なものにチェックを入れる。『doc』と『games』は必要ないと思われる。
ディスクパーティションを行う 難しい設定は良く分からないのでシステムに任せる。
Checksum Valificationが処理される
Archive Extractionが処理される
rootパスワードを設定する
NICの設定を行う IPv4のみ設定する。IPv6は特に設定しなくてもシステム的に問題ないと思われる。またDHCPは設定しないようにする。
DHCPは設定しない
ウェブコンソールを参照しながら入力する
IP Adress: 『ネットワーク情報』→『IPv4』→『アドレス』 Subnet Mask: 『ネットワーク情報』→『IPv4』→『ネットマスク』 Default Router: 『ネットワーク情報』→『IPv4』→『ゲートウェイ』
IPv6は設定しない
リゾルバーを設定する。
ウェブコンソールを参照しながら入力する
Search: 何も入力しない IPv4 DNS #1: 『ネットワーク情報』→『IPv4』→『プライマリDNS』 IPv4 DNS #2: 『ネットワーク情報』→『IPv4』→『セカンダリDNS』</description></item><item><title>Lenovo G580にCentOS7をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1239/</link><pubDate>Sun, 05 Mar 2017 16:20:48 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1239/</guid><description>Bootメディアを作成する SDカードを利用する。CentOSのサイトより Everything ISO イメージをダウンロードしSDカードへコピーする。SDカードはNTFS形式でフォーマットしないと4GB以上のデータがSDカードにコピー出来ないので注意する。
G580はDVDドライブからしかブート出来無い。
# mkfsをインストールする yum install epel-release yum install ntfsprogs # SDカードをNTFS形式でフォーマットする mkfs -t ntfs -F /dev/sdb Bootメディアを起動する G580を立ち上げてすぐに「F12」を押す。「Boot Menu」からブートメディアを選択する。
Minimal イメージからインストールする場合の手順 Bootメディアより一通りインストール手順を踏んだ後デスクトップ環境を構築する。
# ネットワークへ接続する nmtui # もしくは nmcli device # 有効なNICを調べる nmcli connection up enp3s0 # 再起動時にNICが自動でネットワークへ接続するように設定を変更する vi /etc/sysconfig/network-scripts/ifcfg-enp3s0 ONBOOT=&amp;quot;yes&amp;quot; # yesへ変更する # システムをアップデートする yum update # デスクトップ環境をインストールする yum groupinstall &amp;quot;GNOME Desktop&amp;quot; # 常にグラフィカルモードにて起動するように設定を変更する systemctl get-default systemctl set-default graphical.target # デスクトップを立ち上げる startx マウスパッドの設定を行う デスクトップから『アプリケーション』→『システムツール』→『設定』→『マウスとタッチパッド』を開き必要項目を設定する。</description></item><item><title>Gitリポジトリをcloneしてpushするまでの流れ</title><link>https://tomonorimatsumura.github.io/blog/p1231/</link><pubDate>Fri, 24 Feb 2017 13:48:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1231/</guid><description>クライアント側の設定をする クライアント側では最低限「user.name」および「user.email」を設定しておく。
# 現在の設定を確認する git config --list # ユーザー名、メールアドレスを適宜設定する git config --global user.name &amp;quot;John Doe&amp;quot; git config --global user.email johndoe@example.com リポジトリをCloneする SSHで接続する場合。
git clone ssh://{{ user }}@{{ yourdomain }}:{{ port }}/var/git/{{ git-repo }} リポジトリに編集をPushする # 変更したファイルをステージングする git add -A # ファイルの状態を確認する git status # 変更をコミットする git commit -m &amp;quot;ファイルを変更した旨のコメント&amp;quot; # リモートブランチへpushする git push origin master 参考サイト Git – Git の設定 Git – 変更内容のリポジトリへの記録</description></item><item><title>sedで文字列を置換する</title><link>https://tomonorimatsumura.github.io/blog/p1227/</link><pubDate>Tue, 14 Feb 2017 11:14:12 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1227/</guid><description>基本コマンド sed &amp;quot;s/pattern/replacement&amp;quot; オプション コマンド例 #カレントディレクトリのファイルに対して置換を実行しファイルを上書きする find . -type f | xargs sed -i &amp;quot;s/pattern/replacement/g&amp;quot; #カレントディレクトリのファイルに対して特定のファイルを除き置換を実行しファイルを上書きする find . -type f ! -path &amp;quot;exclude&amp;quot; | xargs sed -i &amp;quot;s/pattern/replacement/g&amp;quot; #カレントディレクトリのファイルに対して1行目に文字列を挿入する find . -type f | xargs sed -i -e &amp;quot;1i\insert&amp;quot; 参考サイト sedを使って複数ファイルの文字列を一気に置換する – うめすこんぶ sed コマンド | コマンドの使い方(Linux) | hydroculのメモ sedで特定の行に文字列を挿入する | mkacky</description></item><item><title>Seleniumでコマンドラインでページソースを取得する</title><link>https://tomonorimatsumura.github.io/blog/p1223/</link><pubDate>Tue, 14 Feb 2017 10:48:26 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1223/</guid><description>Selenium、Pythonの設定方法は『CentOS7にSeleniuimをインストールする』を参考にする。
スクリプトの書き方 import sys import os import codecs from pyvirtualdisplay import Display from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities display = Display(visible=0, size=(1024, 768)) display.start() args = sys.argv url = args[1] save_dir = args[2] file_name = args[3] firefox_capabilities = DesiredCapabilities.FIREFOX firefox_capabilities[&amp;quot;marionette&amp;quot;] = True firefox_capabilities[&amp;quot;binary&amp;quot;] = &amp;quot;/usr/bin/firefox&amp;quot; driver = webdriver.Firefox(capabilities=firefox_capabilities) driver.get(url) html = driver.page_source completeName = os.path.join(save_dir, file_name) file_object = codecs.open(completeName, &amp;quot;w&amp;quot;, &amp;quot;utf-8&amp;quot;) file_object.write(html) file_object.close() print driver.title driver.close() スクリプトを実行する # python script_file url file_dir file_name python get_page_title_by_cli.</description></item><item><title>Seleniumでコマンドラインでページタイトルを取得する</title><link>https://tomonorimatsumura.github.io/blog/p1216/</link><pubDate>Tue, 14 Feb 2017 10:11:31 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1216/</guid><description>Selenium、Pythonの設定方法は『CentOS7にSeleniuimをインストールする』を参考にする
スクリプトの書き方 import sys from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from pyvirtualdisplay import Display display = Display(visible=0, size=(1024, 768)) display.start() args = sys.argv url = args[1] firefox_capabilities = DesiredCapabilities.FIREFOX firefox_capabilities[&amp;quot;marionette&amp;quot;] = True firefox_capabilities[&amp;quot;binary&amp;quot;] = &amp;quot;/usr/bin/firefox&amp;quot; driver = webdriver.Firefox(capabilities=firefox_capabilities) driver.get(url) print driver.title print url driver.close() スクリプトを実行する python get_page_title_by_cli.py http://yahoo.co.jp # 実行結果 Yahoo! JAPAN http://yahoo.co.jp</description></item><item><title>CentOS7でSeleniumをDockerコンテナで利用する</title><link>https://tomonorimatsumura.github.io/blog/p1206/</link><pubDate>Sat, 28 Jan 2017 13:33:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1206/</guid><description>DockerをインストールしFirefoxコンテナを立ち上げる yum install docker systemctl start docker sytemctl enable docker docker run -d -p 4444:4444 selenium/standalone-firefox:latest Python Seleniumをインストールする yum install epel-release yum install python-pip pip install --upgrade pip pip install selenium DockerコンテナのIPアドレスを取得する 接続先のDockerコンテナのIPアドレスを指定しないとコンテナに接続出来ない。テストスクリプトにIPアドレスを記述するために取得する。
docker ps | awk &amp;quot;NR&amp;amp;gt;1&amp;amp;&amp;amp;$0=$1&amp;quot; | xargs -n 1 docker inspect -f &amp;quot;{{.Name}} {{.NetworkSettings.IPAddress }}&amp;quot; テストスクリプト例 from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities firefox_capabilities = DesiredCapabilities.FIREFOX driver = webdriver.Remote( command_executor=&amp;quot;http://127.17.0.2:4444/wd/hub&amp;quot;, desired_capabilities=firefox_capabilities) driver.get(&amp;quot;http://yahoo.co.jp&amp;quot;) print driver.title driver.close() 参考サイト CentOS7 で Docker を使ってみる – CUBE SUGAR CONTAINER 稼働中のdockerコンテナのIPアドレス一覧を取得する – くんすとの備忘録 2.</description></item><item><title>CentOS7にSeleniuimをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1201/</link><pubDate>Sun, 18 Dec 2016 14:52:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1201/</guid><description>Pipをインストールする yum install epel-release yum install python-pip pip install --upgrade pip Xvfbをインストールする ブラウザを立ち上げずにSeleniumを操作するのに必要なライブラリをインストールする
yum -y install xorg-x11-server-Xvfb pip install pyvirtualdisplay SeleniumとFirefoxをインストールする SeleniumからFirefoxを操作するにはGeckodriverをインストールする。他のブラウザを利用する時でも何らかのドライバをインストールする必要がありそうだ。
curl -O -L https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz tar fzxv geckodriver-v0.11.1-linux64.tar.gz mv geckodriver /usr/local/bin/ pip install selenium yum install firefox テストスクリプト例 CLI環境でスクリプトを実行する場合は必ずVirtualDisplayを経由させる。geckodriverがエラーで立ち上がらない。
from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from pyvirtualdisplay import Display display = Display(visible=0, size=(1024, 768)) display.start() firefox_capabilities = DesiredCapabilities.FIREFOX firefox_capabilities[&amp;quot;marionette&amp;quot;] = True firefox_capabilities[&amp;quot;binary&amp;quot;] = &amp;quot;/usr/bin/firefox&amp;quot; driver = webdriver.</description></item><item><title>CentOS7でUSBHDD（NTFS）をマウントする</title><link>https://tomonorimatsumura.github.io/blog/p1197/</link><pubDate>Mon, 22 Aug 2016 09:43:47 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1197/</guid><description>想定環境 さくらのVPS 2GB CentOS7 dmesg
fdisk -l
yum install epel-release
yum -y –enablerepo=epel install dkms fuse-ntfs-3g
mkidr /mnt/d
mount /dev/sdc1 /mnt/d
参考サイト CentOS7でUSBディスク（NTFS）をマウントする – Open Source Software Forum
Linux CentOS 外付けHDDのフォーマットとマウント
CentOS 5.6 でNTFSのUSB HDDをマウントする – 常水商会::よしなしごと::旧本店</description></item><item><title>CentOS7にVirtualBox + vagrantをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1174/</link><pubDate>Sun, 06 Mar 2016 11:34:43 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1174/</guid><description>VirtualBoxをインストールする こちらのサイトを参考にした。
yum istall dkms cd /etc/yum.repos.d/ sudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo yum update yum list | grep VirtualBox yum install VirtualBox-xxxx Vagrantをインストールする インストールしておく。
# Vagrantをインストールする rpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm # Guest Additions を自動インストールする vagrant plugin install vagrant-vbguest BIOSの設定を変更する PCを立ち上げてF10でBIOSの設定画面を表示させ仮想化技術を有効にする
Vagrantfileの設定を変更する 開発用途では使用しないUSB2.0を無効にする。またエラーメッセージを広いやすくするためにメッセージを表示する設定にする
vagrant pull &amp;amp;lt;box-image&amp;amp;gt; vagrant init &amp;amp;lt;box-name&amp;amp;gt; vi Vagrantfile -*- mode: ruby -*- # vi: set ft=ruby : # All Vagrant configuration is done below. The &amp;quot;2&amp;quot; in Vagrant.configure # configures the configuration version (we support older styles for # backwards compatibility).</description></item><item><title>さくらのVPSにVirtualBox + vagrantをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1168/</link><pubDate>Sun, 06 Mar 2016 11:32:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1168/</guid><description>Docker、Vagrant等仮想化技術が非常に大切だと感じるこの頃｡｡｡
想定環境 さくらのVPS 2GB CentOS7 VirtualBoxをインストールする こちらのサイトを参考にした。
yum istall dkms cd /etc/yum.repos.d/ sudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo yum update yum list | grep VirtualBox yum install VirtualBox-xxxx Vagrantをインストールする 公式サイトよりrmpをダウンロードしインストーるする
rpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm</description></item><item><title>CentOS7でDockerを使いRedmineを立ち上げる</title><link>https://tomonorimatsumura.github.io/blog/p1165/</link><pubDate>Tue, 02 Feb 2016 17:25:23 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1165/</guid><description>Docker Imageを取得する</description></item><item><title>CentOS7でAnsibleを利用する</title><link>https://tomonorimatsumura.github.io/blog/p1156/</link><pubDate>Wed, 27 Jan 2016 08:15:14 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1156/</guid><description>Ansibleを管理ホストへインストールする Ansibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。
yum install epel-release yum install ansible Ansibleを設定する vi /etc/ansible/ansible.cfg ################################# [defaults] host_key_checking=false 対象ホストへSSH接続する もし接続エラーが出る場合は「-vvv」オプションを追加して接続したり「rm -rf /root/.ansible/tmp/*」などでキャッシュをクリアしたりする。
# 対象ホストを設定する vi /etc/ansible/hosts # This is the default ansible &amp;quot;hosts&amp;quot; file. # # It should live in /etc/ansible/hosts # # - Comments begin with the &amp;quot;#&amp;quot; character # - Blank lines are ignored # - Groups of hosts are delimited by [header] elements # - You can enter hostnames or ip addresses # - A hostname/ip can be a member of multiple groups example.</description></item><item><title>CentOS7へRuby2.3とRails4をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1134/</link><pubDate>Mon, 18 Jan 2016 14:22:30 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1134/</guid><description>Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。
Rubyをインストールする CentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかはspecファイルを確認する。Rubyのビルドに必要なパッケージも確認出来る。
Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib
BuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel
# EPELをインストールする rpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm rpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7 # 必要なパッケージをインストールする yum --enablerepo=epel -y install gdbm-devel libdb4-devel libffi-devel libyaml libyaml-devel ncurses-devel openssl-devel readline-devel tcl-devel # Rubyをインストールする #RPMを作成する mkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS} cd /root/rpmbuild/SOURCES curl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz cd /root/rpmbuild/SPECS curl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec rpmbuild -bb /root/rpmbuild/SPECS/ruby.spec # Rubyをインストールする rpm -Uvh /root/rpmbuild/RPMS/ruby-2.</description></item><item><title>CentOS7へownCloudをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1122/</link><pubDate>Tue, 12 Jan 2016 06:48:12 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1122/</guid><description>リポジトリを追加する RPMForge、EPEL、Remiをリポジトリへ追加する
# RPMForge rpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm rpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt # EPEL rpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm rpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7 # remi rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm rpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi PHPをインストールする # gd-lastをインストール yum -y --enablerepo=remi install gd-last # MariaDBをインストールする yum -y install mariadb* yum -y --enablerepo=remi-php56 install php \ php-cli \ php-common \ php-gd \ php-ldap \ php-mbstring \ php-pdo \ php-process \ php-xml \ php-mysqlnd # memcached(分散型メモリキャッシュシステム)をPHPで使えるようにする yum install memcached-devel yum -y install php-pecl-memcache PHPを設定する # php.</description></item><item><title>CentOS7へNVIDIAグラフィックスドライバをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1117/</link><pubDate>Sat, 02 Jan 2016 11:47:00 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1117/</guid><description>CentOS7をアップデートするとグラフィックスドライバをカーネルに対して再構築しないといけないので手順をまとめておく
NVIDIAグラフィックスドライバーを入手する NVIDIAのサイトよりダウンロードしておく
ドライバをインストール、カーネルを再構築する yum update reboot # 最新バージョンのカーネルを選択し起動させる # もしGNOMEが立ち上がらない場合はCtl + Alt + F2でログインする systemctl disable gdm reboot # グラフィックスドライバをインストールする bash NVIDIA-Linux-x86_64-352.30.run # ユーザーアカウントのダウンロードディレクトリなどにファイルがある場合 # CentOSのターミナルから日本語が読み込めないし打ち込めない場合 bash `find /home/tomonori -name &amp;quot;NVIDIA*&amp;quot;` # シンボリックリンクを作成する前にサービスを起動する systemctl enable gdm.service # エラーが出たらオプションを-「f」に変更 ln -s &amp;quot;/usr/lib/systemd/system/gdm.service&amp;quot; &amp;quot;/etc/systemd/system/display-manager.service&amp;quot; reboot 参考サイト NVIDIA GeForce Driver Installation on CentOS 7 Linux 64-bit</description></item><item><title>CentOS7で動画を閲覧する</title><link>https://tomonorimatsumura.github.io/blog/p1113/</link><pubDate>Sat, 02 Jan 2016 10:08:19 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1113/</guid><description>VLC media playerのインストール準備 yum install epel-release yum localinstall --nogpgcheck http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm yum clean all yum update VLC media playerをインストールする yum install vlc 参考サイト Install VLC Media Player on CentOS 7 / RHEL 7 / Fedora 20</description></item><item><title>Dockerでコンテナの名前を調べる</title><link>https://tomonorimatsumura.github.io/blog/p1106/</link><pubDate>Sat, 19 Dec 2015 19:05:22 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1106/</guid><description>Dockerにコンテナ名だけ表示するコマンドがないのでawkを使う
docker ps | awk &amp;quot;NR == 2 {print $NF}&amp;quot; # NR == 2は2行目、$NFは最後の列</description></item><item><title>Gitリポジトリを移設する</title><link>https://tomonorimatsumura.github.io/blog/p1101/</link><pubDate>Wed, 16 Dec 2015 10:00:23 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1101/</guid><description>移設側でリポジトリのリストを作成する ls /var/git -l | grep ^d | awk &amp;quot;{print $9}&amp;quot; &amp;amp;gt; git.list.txt 移設先で共有ベアリポジトリを作成する # 「git.list.txt」を取得しておく cd /var/git while read line; do mkdir $line; cd $line; git init --bare --shared; cd /var/git; done &amp;amp;lt; git.list.txt 移設元から移設先へリポジトリをpushする cd /var/git while read line; do if [ -d ${line} ]; then cd ${line}; git push --mirror ssh://git@{git-server}:{port}/var/git/${line}; fi; cd /var/git; done &amp;amp;lt; git.list.txt 参考サイト Git – サーバーのセットアップ</description></item><item><title>CentOS7でWindows Zipアーカイブを解凍する</title><link>https://tomonorimatsumura.github.io/blog/p1096/</link><pubDate>Tue, 01 Dec 2015 16:15:05 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1096/</guid><description>Windowsで作成したzipアーカイブは通常のCentOS7だと解凍出来ないのでPerlを使う
Archive::Zipをインストールする CPAN経由だとパスが通らないのでyumを使う
yum install perl-Archive-Zip zipアーカイブを解凍する アーカイブを解凍するためのPerlスクリプトを作成する
vi unzip-sjis.pl ################################## #!/usr/bin/perl use strict; use warnings; use Archive::Zip; use Encode; if (@ARGV != 1) { die &amp;quot;usage: $0 ZIPFILE\n&amp;quot;; } my $zipfile = shift; if (! -e $zipfile) { die &amp;quot;$zipfile don&amp;quot;t exist\n&amp;quot;; } my $zip=Archive::Zip-&amp;amp;gt;new($zipfile); my @items = $zip-&amp;amp;gt;memberNames(); my $utf8name; foreach (@items) { my $utf8name = $_; Encode::from_to($utf8name, &amp;quot;cp932&amp;quot;, &amp;quot;utf-8&amp;quot;); print &amp;quot;extract : $utf8name\n&amp;quot;; $zip-&amp;amp;gt;extractMember($_, $utf8name); } ##################### # ファイルを解凍する .</description></item><item><title>CentOS7でmod_encodingを利用する</title><link>https://tomonorimatsumura.github.io/blog/p1093/</link><pubDate>Tue, 01 Dec 2015 14:37:59 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1093/</guid><description>想定される環境
OS: CentOS7
Apache: 2.4系
mod_encodingをインストールする # httpd-develインストール yum -y install httpd-devel # mod_encodingをダウンロード wget http://webdav.todo.gr.jp/download/mod_encoding-20021209.tar.gz # Apache2版mod_encodingダウンロード wget http://webdav.todo.gr.jp/download/experimental/mod_encoding.c.apache2.20040616 # Apache2版mod_encodingに差し替え tar zxvf mod_encoding-20021209.tar.gz /bin/mv mod_encoding.c.apache2.20040616 mod_encoding-20021209/mod_encoding.c # iconv-hookライブラリインストール cd mod_encoding-20021209/lib ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install # ※Namazuの検索文字列の文字化け対処 cd .. # mod_encodingパッチダウンロード wget http://www.aconus.com/~oyaji/faq/mod_encoding.c-apache2.2-20060520.patch　# mod_encodingパッチ施工 patch -p0 &amp;amp;lt; mod_encoding.c-apache2.2-20060520.patch # Makefile作成 # Apache2.4はapxsのパスが「/usr/bin/apxs」なので注意! ./configure --with-apxs=/usr/bin/apxs --with-iconv-hook # Makefile編集 vi Makefile ############################## LIBS = -liconv_hook ↓ LIBS = -L/usr/local/lib -liconv_hook install-exec-local: $(APXS) -i mod_encoding.</description></item><item><title>Linuxでtarで解凍圧縮する</title><link>https://tomonorimatsumura.github.io/blog/p1088/</link><pubDate>Tue, 17 Nov 2015 16:14:59 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1088/</guid><description>圧縮する # tar (指定したファイル郡を一つのアーカイブファイルにまとめる) tar cfv files.tar files/ # tar + gzip tar cfvz files.tar.gz files/ 解凍する # tar (tarアーカイブを展開) tar xfv files.tar # tar + gzip tar xfvz files.tar.gz</description></item><item><title>CentOS7でSSHを秘密鍵公開鍵を使って設定する</title><link>https://tomonorimatsumura.github.io/blog/p1084/</link><pubDate>Tue, 17 Nov 2015 13:59:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1084/</guid><description>キーペアを作成する 接続元の端末でキーペアを作成する。作成した公開鍵を接続サーバの接続アカウントに置く。SSH接続時は .sshディレクトリ のアクセス権限は700、公開鍵、秘密鍵は600にしておかないとエラーになる。
# 接続元端末で ssh-keygen -t rsa # 接続先で mkdir ~/.ssh vi ~/.ssh/authorized_keys # 公開鍵を書き込む chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys ログイン設定をする パスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する
vi /etc/ssh/sshd_config # 以下の行のコメントを外して保存 PubkeyAuthentication yes PasswordAuthentication no PermitRootLogin no # SSH のサービスを再起動 systemctl restart sshd.service SSHの接続ポートを変更する ディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。
vi /etc/ssh/sshd_config Port XXXXX # 0～65535の間で設定 # Firewallの設定を行う firewall-cmd --permanent --add-port=XXXXX/tcp firewall-cmd --reload # SSHの設定を反映する systemctl restart sshd.service 参考サイト</description></item><item><title>awkでSSHアクセス履歴を調べる</title><link>https://tomonorimatsumura.github.io/blog/p1080/</link><pubDate>Tue, 17 Nov 2015 13:18:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1080/</guid><description>SSHのアクセスログを定期的に調べる必要がある。
ログインが成功したアクセスを調べる # アクセスが成功したログインを全て表示する grep &amp;quot;Accepted&amp;quot; /var/log/secure* # もしくは grep &amp;quot;Accepted&amp;quot; /var/log/secure* | awk &amp;quot;{split($1, arr, &amp;quot;:&amp;quot;); print arr[2] $2 &amp;quot; &amp;quot; $3 &amp;quot; &amp;quot; $9 &amp;quot; &amp;quot; $11}&amp;quot; # 順にホワイトリストを当ててみて不正アクセスが無いか確認する # 188.251.* はauのテザリング端末 # 221.1.36.239は自宅のインターネットプロバイダ # 133.xxx.xxx.xxxは契約しているVPSサーバ grep &amp;quot;Accepted&amp;quot; /var/log/secure* | awk &amp;quot;{print $9 &amp;quot; &amp;quot; $11}&amp;quot; | awk &amp;quot;{sub(&amp;quot;/182.251.*/&amp;quot;, &amp;quot;&amp;quot;); print $0;}&amp;quot; | awk &amp;quot;{sub(&amp;quot;222.1.36.239&amp;quot;, &amp;quot;&amp;quot;); print $0;}&amp;quot; | awk &amp;quot;{sub(&amp;quot;133.xxx.xxx.xxx&amp;quot;, &amp;quot;&amp;quot;); print $0;}&amp;quot; ログインが失敗したアクセスを調べる grep -E &amp;quot;Failed|Invalid&amp;quot; /var/log/secure* 参考サイト アクセスログ解析（ssh編） | tkd55 blog</description></item><item><title>CentOS7でmod_userdirを使用する</title><link>https://tomonorimatsumura.github.io/blog/p1075/</link><pubDate>Mon, 16 Nov 2015 15:38:58 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1075/</guid><description>mod_userdirの設定をする vi /etc/httpd/conf.d/userdir.conf # # UserDir: The name of the directory that is appended onto a user&amp;quot;s home # directory if a ~user request is received. # # The path to the end user account &amp;quot;public_html&amp;quot; directory must be # accessible to the webserver userid. This usually means that ~userid # must have permissions of 711, ~userid/public_html must have permissions # of 755, and documents contained therein must be world-readable. # Otherwise, the client will only receive a &amp;quot;403 Forbidden&amp;quot; message.</description></item><item><title>CentOS7でrarコマンドを使用する</title><link>https://tomonorimatsumura.github.io/blog/p1072/</link><pubDate>Tue, 10 Nov 2015 15:13:13 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1072/</guid><description>現在のところ使えないのでCentOS6で対応する</description></item><item><title>CentOS7にFTPサーバを構築する</title><link>https://tomonorimatsumura.github.io/blog/p1067/</link><pubDate>Sun, 08 Nov 2015 10:41:11 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1067/</guid><description>vsftpdを導入する # vsftpdをyumでインストールする yum install vsftpd # サービスの自動設定を行う systemctl start vsftpd systemctl enable vsftpd systemctl status vsftpd.service # 確認 systemctl is-enabled vsftpd.service # 確認 # アクセス制限の設定を行う # パケットフィルタリングの設定を行う firewall-cmd --permanent --add-service=ftp firewall-cmd --reload vsftpdの動作設定を行う chrootを設定するのみ chroot_local_user=YES allow_writeable_chroot=YES 詳細設定 # 匿名ログイン禁止 anonymous_enable=NO # アスキーモードでの転送を許可 ascii_upload_enable=YES ascii_download_enable=YES # chroot有効 chroot_local_user=YES chroot_list_enable=YES # chroot リストファイル指定 chroot_list_file=/etc/vsftpd/chroot_list # ディレクトリごと一括での転送有効 ls_recurse_enable=YES # IPv4をリスンする listen=YES # IPv6 はリスンしない listen_ipv6=NO # 最終行へ追記 # ルートディレクトリ指定 (指定しない場合はホームディレクトリがルートディレクトリとなる) local_root=public_html # ローカルタイムを使う use_localtime=YES # seccomp filter をオフにする ( ログインに失敗する場合はオフにする ) seccomp_sandbox=NO # ユーザ個別設定ファイルの配置設定 user_config_dir=/etc/vsftpd/vsftpd_user_conf # 通常だとユーザーのホームディレクトリ以外にはchroot設定は行えない # ホームディレクトリ以外でもchroot設定が有効になるようにする allow_writeable_chroot=YES # ユーザーのchrootディレクトリを設定する mkdir /etc/vsftpd/vsftpd_user_conf vi /etc/vsftpd/vsftpd_user_conf/ftp-user local_root=/var/ftp chowm -R ftp-user:ftp-user /var/ftp # とりあえず作成する vi /etc/vsftpd/chroot_list ftp-user 参考サイト [CentOS 7 : Vsftpd : インストール ： Server World](http://CentOS 7 : Vsftpd : インストール ： Server World) [Linux] chroot_list と user_list による権限管理｜vsftpd -スグラボ- vsftpdでchrootの設定を行うには。 – 春木屋 vsftpdを設定した – Qiita [CentOS][vsftpd]ログインユーザ毎に個別の設定ファイルを適用する | ごった煮 – tips about programming and building a serve Ubuntu日本語フォーラム / vsftpdでアップロードを可能にしつつchrootをする方法について</description></item><item><title>CentOS7へFilezillaをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1065/</link><pubDate>Sun, 08 Nov 2015 04:03:13 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1065/</guid><description>FileZillaをインストールする yum -y install epel-release yum -y install filezilla 参考サイト How to Install FileZilla on CentOS 7 – e Learning</description></item><item><title>CentOS6でPDFにパスワードを掛ける</title><link>https://tomonorimatsumura.github.io/blog/p1060/</link><pubDate>Sat, 07 Nov 2015 13:14:21 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1060/</guid><description>壮年団の文書作成、配布等で名簿を扱う関係でPDFにパスワードを掛けたい場面が出て来た。
pdftkをインストールする yum install pdftk パスワードを設定する # 保護、暗号化（権限パスワード） # 機能制限を設定したり変更したりするときに、権限パスワードを求めるようになる。 # test.pdfを暗号化してtest.pw.pdfにする。パスワードは123456。 pdftk test.pdf output test.pw.pdf owner_pw 123456 # 文書を開くパスワード # さらに、ドキュメントを開くときにパスワードを求めるようにする例 pdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789 # 印刷するときにパスワード # ドキュメントを開いた後、印刷するときにパスワードを求める例。 pdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789 allow printing 参考サイト パスワード付きのPDFを作成する at softelメモ</description></item><item><title>さくらのVPSにインストールしたCentOS7でVNCを利用する</title><link>https://tomonorimatsumura.github.io/blog/p1038/</link><pubDate>Thu, 29 Oct 2015 17:09:54 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1038/</guid><description>1. 必要なパッケージのインストール yum install tigervnc-server yum groupinstall &amp;quot;GNOME Desktop&amp;quot; yum install vnc VNCサーバの設定 cp /lib/systemd/system/vncserver@.service \ /etc/systemd/system/vncserver@:1.service vi /etc/systemd/system/vncserver@:1.service #&amp;amp;lt;USER&amp;amp;gt;をVNC USERに書き換える ExecStart=/sbin/runuser -l vncuser -c &amp;quot;/usr/bin/vncserver %i&amp;quot; PIDFile=/home/vncuser/.vnc/%H%i.pid # systemdに設定ファイルを再度読込みをさせる。 systemctl daemon-reload VNCユーザの設定 ログインユーザーをVNCユーザーに切り替えてパスワードを変更する
su vncuser vncpasswd &amp;amp;lt;enter&amp;amp;gt; Password: ****** &amp;amp;lt;enter&amp;amp;gt; Verify: ***** &amp;amp;lt;enter&amp;amp;gt; ファイアウォールの設定 firewall-cmd --permanent --add-service vnc-server systemctl restart firewalld.service VNCサービスの起動 systemctl start vncserver@:1.service # VNCサービスの自動起動設定を行う systemctl enable vncserver@:1.service クライアントからVNCを使う F8でフルスクリーンモードの切り替え設定が可能になる
vncviewer yourhost:1 参考サイト [CentOS]CentOS7最小限のインストールからのGnomeデスクトップ環境構築 | Zero Configuration</description></item><item><title>CentOS7でGnome Terminalにショートカットキーを設定する</title><link>https://tomonorimatsumura.github.io/blog/p1030/</link><pubDate>Thu, 29 Oct 2015 13:39:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1030/</guid><description>ショートカットキーを設定する [アプリケーション]–[システムツール]–[設定]–[キーボード]–[ショートカット]–**[独自のショートカット]を選択。[＋]**ボタンを押して
名前：「端末」 コマンド：「gnome-terminal」 と入力して、ショートカットキーを設定する。
参考サイト 「Goblous.com」 – 情報メモサイト</description></item><item><title>CentOS7のディスクイメージを作成する</title><link>https://tomonorimatsumura.github.io/blog/p1027/</link><pubDate>Sat, 03 Oct 2015 12:43:59 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1027/</guid><description>CentOSのHPよりダウンロード、ImgBurnで作成。
参考サイト ImgBurnの簡単な使い方･設定の解説</description></item><item><title>CentOS7にPHP5.6をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1022/</link><pubDate>Tue, 15 Sep 2015 16:57:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1022/</guid><description>CentOS7にyumでPHPをインストールしようとしたがバージョンが5.4と古かったのでremiで5.6をインストールする。
remiリポジトリをインストール、設定する # remiリポジトリの公開鍵を取り込む rpm --import https://raw.githubusercontent.com/remicollet/remirepo/master/remi-release/RPM-GPG-KEY-remi # yum-config-manager コマンドのインストールと remiリポジトリの追加 yum install yum-utils http://remi.kazukioishi.net/enterprise/remi-release-7.rpm # remi-php56 リポジトリを有効化 yum-config-manager --enable remi-php56 # remiの設定を変更 / PHPのアップデートには常にremiを使うようにする # yumプラグインのインストール yum install yum-plugin-priorities /etc/yum.repos.d/remi.repo [remi] name=Remi&amp;quot;s RPM repository for Enterprise Linux 7 - $basearch #baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/ mirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror enabled=0 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi priority=100 ## ↑この行を追加 ## # PHP と拡張モジュールなどをインストール #### php-mysqlnd / PDOを扱うのに必要 #### php-mbstring / utf-8 のセキュリティを確保するのに必要 #### php-intl / Unicode に関する処理などに必要 #### php-gmp / 桁の大きい整数を扱う場合に必要 # 古いPHPをアンインストールしておく yum remove php* yum --enablerepo=remi,epel install php56-php php56-php-mbstring php56-php-pdo php56-php-mysqlnd php56-php-intl php56-php-gmp # シンボリックリンクを変更する ln -s /opt/remi/php56/root/etc/php.</description></item><item><title>CentOS7にffmpegをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1018/</link><pubDate>Tue, 11 Aug 2015 04:47:03 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1018/</guid><description>壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS7にて動画編集が出来ないかどうか画策してみる。
事前準備 yum groupinstall &amp;quot;Development Tools&amp;quot; &amp;quot;Development Libraries&amp;quot; yasmをインストールする x264のビルドに必要になる
cd /usr/local/src wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz tar zvxf yasm-1.3.0.tar.gz cd yasm-1.3.0 ./configure make make install x264をインストールする ffmpeg のビルドに必要になる。
cd /usr/local/src git clone git://git.videolan.org/x264 cd x264 ./configure --enable-shared make make install fdk-aacをインストールする fdk-aac を使うなら入れる必要がある。ソースをfdk-aacのサイトからダウンロード
cd /usr/local/src tar xzf fdk-aac-0.1.3.tar.gz cd fdk-aac-0.1.3 ./configure make make install ffmpegをインストールする cd /usr/local/src git clone git://source.ffmpeg.org/ffmpeg.git ffmpeg cd ffmpeg # 時間がかなりかかる（30分程度？） ./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264 make make install # ショートカット作成 ln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg 設定ファイルを変更する vi /etc/ld.</description></item><item><title>Windows7にVirtualBoxをインストールしCentOS7をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1003/</link><pubDate>Tue, 11 Aug 2015 03:47:53 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1003/</guid><description>ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。
Windows7にVirtualBoxをインストールする※注意 VirtualBoxの公式サイトより最新のものをダウンロードしインストールする。既にVirtualBoxがインストールされている場合は必ず最新バージョンのVirtualBoxを利用する。
CentOS7を取得する ゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトよりEverything ISOをダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。
VirtualBoxにCentOS7をインストールする 『ソフトウェアの選択(S)』を選択し、左の ベース環境 から 『GNOME Desktop』 を選択
『ネットワークとホスト名(N)』を選択し、ネットワーク接続を『オン』にする。
VirtualBox上でネットワークの設定を行う Wi-fiを使わない場合はNATで良い。
『VirtualBox』→『設定』→『ネットワーク』の順に開き、『アダプター 1』の割り当ての項目を『ブリッジアダプター』に設定する。
また『名前』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。
iPhone6をUSB接続でつないだ場合→『Apple Mobile Device Ethernet』 dynabookのwi-fiで接続する場合→『Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC』 VirtualBox Guest AdditionsをCentOS7にインストールする 初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『VirtualBox Guest Additions』をインストールする。
ゲストOSであるCentOS7上で
# あらかじめVirtualBox Guest Additionのインストールに # 必要なライブラリやヘッダファイルをインストールする yum install epel-release yum install dkms yum groupinstall &amp;quot;Development Tools&amp;quot; yum install kernel-devel yum update
ゲストOSが立ち上がってる状態で
『VirtualBox』→『デバイス』→『Guest AdditionsのCDイメージを挿入』をクリック。あとは自動的に「VirtualBox Guest Addtions」がインストールされる。</description></item><item><title>Poderosaで『unknown terminal type.』エラーが出た時の対応</title><link>https://tomonorimatsumura.github.io/blog/p999/</link><pubDate>Tue, 23 Jun 2015 17:21:35 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p999/</guid><description>Windows7のPoderosaからCentOS7へSSH接続し、MariaDBへログインしようとしたら以下のメッセージが表示された。
&amp;quot;kterm&amp;quot;: unknown terminal type.``` ### CentOS7の環境変数を変更する ```:bash # 一時的に環境変数を書き換える export TERM=linux # 設定ファイルに書き込む echo &amp;quot;export TERM=linux&amp;quot; &amp;amp;gt;&amp;amp;gt; ~/.bash_profile 参考サイト Resolving “‘unknown’: unknown terminal type.” error – Tech Titbits</description></item><item><title>Windows7にGitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p990/</link><pubDate>Fri, 29 May 2015 13:38:28 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p990/</guid><description>壮年団の写真及び動画整理の関係で、コマンドプロンプトのプログラミングコードを書く必要が出てきた。Windows機からGitが直接使えた方が作業が楽なのでWindows7にGitをインストールした。
Git for Windowsをインストールする Git for Windowsをダウンロードしインストールする。
『Run Git from the Windows Command Prompt』を選ぶと良い。『Run Git and included Unix tools from the Windows Command Prompt』は環境変数を汚染する可能性があるので使わないほうが無難。
この画面は『Checkout Windows-style, commit Unix line endings』を選んだが、まだ運用してみないとどう出るのか分からない。
SSHの設定を行う Git for Windowsは『/user/.ssh』に鍵ファイルを探しに行くので、このフォルダに鍵ファイルを設置する。
参考サイト Git for Windows 私家版 Git For Windowsのインストール手順 | OPC Diary</description></item><item><title>RedmineとGitの連携についてのメモ</title><link>https://tomonorimatsumura.github.io/blog/p985/</link><pubDate>Thu, 28 May 2015 13:06:32 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p985/</guid><description> コミットメッセージにチケット番号を付与する時は半角スペースで区切る。 コミットメッセージに作業時間を記録することが出来る EclipseでGitのコミットの取り消しが出来る場合がある。 参考サイト バージョン管理システムとの連携 — Redmine.JP Redmine 1.1 新機能紹介: コミットメッセージによる作業時間の記録 | Redmine.JP Blog</description></item><item><title>CentOS6.6にffmpegをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p979/</link><pubDate>Mon, 27 Apr 2015 12:21:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p979/</guid><description>壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS6.6にて動画編集が出来ないかどうか画策してみる。
事前準備 yum groupinstall &amp;quot;Development Tools&amp;quot; &amp;quot;Development Libraries&amp;quot; yasmをインストールする x264のビルドに必要になる
cd /usr/local/src wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz tar zvxf yasm-1.3.0.tar.gz cd yasm-1.3.0 ./configure make make install x264をインストールする ffmpeg のビルドに必要になる。
cd /usr/local/src git clone git://git.videolan.org/x264 cd x264 ./configure --enable-shared make make install fdk-aacをインストールする fdk-aac を使うなら入れる必要がある。ソースをfdk-aacのサイトからダウンロード
cd /usr/local/src tar xzf fdk-aac-0.1.3.tar.gz cd fdk-aac-0.1.3 ./configure make make install ffmpegをインストールする cd /usr/local/src git clone git://source.ffmpeg.org/ffmpeg.git ffmpeg cd ffmpeg # 時間がかなりかかる ./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264 make make install # ショートカット作成 ln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg 設定ファイルを変更する vi /etc/ld.</description></item><item><title>ImageMagicで画像ファイルをPDF化する</title><link>https://tomonorimatsumura.github.io/blog/p977/</link><pubDate>Mon, 27 Apr 2015 09:37:08 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p977/</guid><description>画像ファイルをPDF化する機会があったのでImageMagicを使い、レンタルサーバで処理させてみた。
ImageMagciをインストールする yum install ImageMagick ImageMagick-devel 画像データをPDF化する # ファイルを作成日の古い順にPDF化する convert `ls -tr` target.pdf 参考サイト 複数のjpegを一つのpdfへ変換した時のメモ – プログラムとかののblog</description></item><item><title>iPhoneのデータを抜き出す</title><link>https://tomonorimatsumura.github.io/blog/p974/</link><pubDate>Sun, 22 Mar 2015 09:25:22 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p974/</guid><description>iFunbox</description></item><item><title>iPadにWindowsから写真を同期させる</title><link>https://tomonorimatsumura.github.io/blog/p970/</link><pubDate>Sun, 04 Jan 2015 04:17:44 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p970/</guid><description>iTunesから行う
ViewNX2にてファイル名、サイズを変更、Exif情報を削除
Exif情報を削除してからiTunes経由で転送する。Exif情報を削除しないとiPadのアルバム内で写真の順番がめちゃめちゃになる。</description></item><item><title>CentOSで外付けHDDにカレントディレクトリを移動する</title><link>https://tomonorimatsumura.github.io/blog/p965/</link><pubDate>Wed, 17 Dec 2014 20:05:38 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p965/</guid><description>コマンド cd /media 参考サイト DVD-ROMのイメージ(ISO)ファイルをマウントしてデータを参照 | Linuxサーバ管理 | OSS Fan</description></item><item><title>awkでファイル名とファイルサイズを表示する</title><link>https://tomonorimatsumura.github.io/blog/p961/</link><pubDate>Mon, 15 Dec 2014 11:01:13 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p961/</guid><description>ローカルPCからサーバPCにアップロードした複数のファイルがデータ欠損無くアップロードされたか調べる必要があった。
awkコマンド スペースや文字列を入れる際は『””』で文字列を挿入できる。
ls -l | awk &amp;quot;{print $5 &amp;quot; &amp;quot; $10}&amp;quot; # 表示結果 3428352 2012-03-31_092749.m2ts 603678720 2012-03-31_092950.m2ts 110862336 2012-03-31_093642.m2ts 501264384 2012-03-31_094907.m2ts 76351488 2012-03-31_095537.m2ts 72603648 2012-03-31_121637.m2ts 240248832 2012-03-31_122300.m2ts 47290368 2012-03-31_123804.m2ts 28962816 2012-03-31_123949.m2ts 283367424 2012-03-31_124153.m2ts 758593536 2012-03-31_124918.m2ts 41908224 2012-03-31_125810.m2ts 46276608 2012-03-31_130644.m2ts 233484288 2012-03-31_131012.m2ts 45594624 2012-03-31_132639.m2ts 427788288 2012-03-31_133014.m2ts 53962752 2012-03-31_140503.m2ts 183214080 2012-03-31_140755.m2ts 240199680 2012-03-31_142430.m2ts 85438464 2012-03-31_142707.m2ts 39942144 2012-03-31_143018.m2ts 222339072 2012-03-31_143047.m2ts 508059648 2012-03-31_143417.m2ts 11550720 2012-03-31_144018.m2ts 58619904 2012-03-31_144110.m2ts 63449088 2012-03-31_144544.m2ts 20779008 2012-03-31_144638.m2ts 28760064 2012-03-31_144839.m2ts 140064768 2012-03-31_144903.</description></item><item><title>CentOS6.5でディスプレーの解像度を変更する</title><link>https://tomonorimatsumura.github.io/blog/p954/</link><pubDate>Sun, 17 Aug 2014 16:00:23 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p954/</guid><description>ドライバの不具合なのか良く分からないが、たまにディスプレーの解像度が正しく設定出来なくなるので手動で変更する。
ディスプレーの状態を確認する # xrandr Screen 0: minimum 320 x 200, current 2560 x 800, maximum 8192 x 8192 DVI-I-1 disconnected (normal left inverted right x axis y axis) HDMI-1 connected 1280x800+0+0 (normal left inverted right x axis y axis) 510mm x 287mm 1920x1080 60.0 + 50.0 1920x1080i 25.0 30.0 1680x1050 59.9 1280x1024 75.0 60.0 1440x900 59.9 1360x768 59.8 1280x800 59.9* 1152x864 75.0 1280x720 50.0 60.0 1440x576i 25.0 1024x768 75.1 70.1 60.</description></item><item><title>さくらのVPSにVirtualBox + vagrantをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p951/</link><pubDate>Wed, 02 Jul 2014 07:39:34 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p951/</guid><description>前からやってみたかったので、本腰入れてやってみる。
VirtualBoxをインストールする このサイトを参考にする。
http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80
参考サイト CentOS 上で Vagrant を導入するまでのメモ（CUI） – Qiita</description></item><item><title>LibreOfficeを日本語化する</title><link>https://tomonorimatsumura.github.io/blog/p943/</link><pubDate>Wed, 07 May 2014 10:28:34 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p943/</guid><description>CentOS6.5でLibreOfficeをアンイストールし再インストールしたらメニューが英語表記になってしまった。これを日本語に戻す。
LibreOfficeを日本語化する yum install libreoffice-langpack-ja 参考サイト 備忘録: 【Linux CentOS 6.3】LibreOfficeを日本語化する</description></item><item><title>CentOS6.5にLibreOffice Baseをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p941/</link><pubDate>Mon, 05 May 2014 07:51:53 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p941/</guid><description>CentOS6.5には最初からLibreOfficeが入っている。ただ、データベース管理が出来るBaseが入ってないので、追加でインストールする。
LibreOffice Baseをインストールする yum install libreoffice-base</description></item><item><title>CentOS6.5にVMWare Playerをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p938/</link><pubDate>Thu, 01 May 2014 15:21:43 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p938/</guid><description>今までインストール手順をまとめてなかったのでまとめておく
VMWare Playerをダウンロードする yumコマンドで簡単にインストール出きるのかと思ったがそうでもないらしい。インストールパッケージをVMWare Playerのサイトからダウンロードする必要がある。
VMWare Playerをインストールする ダウンロードしたファイルをrootで実行する。
su root bash VMware-Player-6.0.2-1744117.i386.bundle 参考サイト Ubuntu 12.04 に VMware Player Linux 版 バージョン 5.0.0 のインストール</description></item><item><title>PHPを再インストールする</title><link>https://tomonorimatsumura.github.io/blog/p930/</link><pubDate>Fri, 21 Mar 2014 13:17:39 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p930/</guid><description>PHPをインストールしたりアンインストールしたりしていると、ApacheとPHPの連携が外れてしまう場合がある。その場合はApache、PHPをインストールしなおす
yum remove httpd httpd-devel mod_ssl libxml2-devel php* yum clean all rm -rf *google* 参考サイト php – Apache Cannot load modules/libphp5.so into server: when I installed php5-gd – Stack Overflow Why do I get these message while using yum? – Ask Fedora: Community Knowledge Base and Support Forum</description></item><item><title>Redmine2.4をCentOS6.4にインストールする</title><link>https://tomonorimatsumura.github.io/blog/p914/</link><pubDate>Wed, 01 Jan 2014 17:42:18 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p914/</guid><description>Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。
SELinuxを無効にする vi /etc/sysconfig/selinux SELINUX=disabled reboot iptablesでHTTPを許可する vi /etc/sysconfig/iptables # Firewall configuration written by system-config-firewall # Manual customization of this file is not recommended. *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT -A INPUT -p icmp -j ACCEPT -A INPUT -i lo -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT # Redmineの動作確認用に3000番を開けておく -A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT -A INPUT -j REJECT --reject-with icmp-host-prohibited -A FORWARD -j REJECT --reject-with icmp-host-prohibited COMMIT # iptablesを再起動する service iptables restart CentOSパッケージの追加インストール yumで追加インストール</description></item><item><title>Virtual BoxにインストールしたCentOS6.4でネットワークを設定する</title><link>https://tomonorimatsumura.github.io/blog/p907/</link><pubDate>Wed, 11 Dec 2013 03:23:04 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p907/</guid><description>Virtual Box上でCentOS環境を複数作成してテストスクリプトを試す必要が出てきた。その場合のネットワークを設定に関するまとめ。
Ethernetインタフェースを設定する vi /etc/sysconfig/network-script/ifcfg-eth0 DEVICE=&amp;quot;eth0&amp;quot; HWADDR=XX:XX:XX:XX #Network Interface Card(NIC)のMACアドレス TYPE=Ethernet UUID=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx ONBOOT=&amp;quot;yes&amp;quot; MM_CONTROLLED=&amp;quot;yes&amp;quot; IPADDR=10.0.2.15 NETMASK=255.255.255.0 GATEWAY=192.168.1.1 DNS1=8.8.8.8 #googleのDNSを指定 ディフォルトゲートウェイを設定する service network restart route add default gw 10.0.2.2 # 設定確認 route Kernel IP routing table Destination Gateway Genmask Flags Metric Ref Use Iface 10.0.2.0 * 255.255.255.0 U 0 0 0 eth0 link-local * 255.255.0.0 U 1002 0 0 eth0 default 10.0.2.2 0.0.0.0 UG 0 0 0 eth0 参考サイト Linux（CentOS5）のネットワーク設定メモ – プログラマ 福重 伸太朗 ～基本へ帰ろう～ VirtualBox環境構築：CentOS – ネットワーク設定 2012-01-26 – 新人プログラマーのメモ帳 エレクトリック・ボディ・ビート: Cent OS6でresolv.</description></item><item><title>Calc、Baseの項目行を画面上で固定する</title><link>https://tomonorimatsumura.github.io/blog/p899/</link><pubDate>Tue, 05 Nov 2013 03:35:05 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p899/</guid><description>１．固定したい項目行の下の行を選択する
２．「ウィンドウ(W)」－「固定(F)」をクリック
参考サイト Calcの項目行を画面上で固定する: LibreOfficeで行こう！</description></item><item><title>Gitで常に除外したい設定を.gitconfig で設定する</title><link>https://tomonorimatsumura.github.io/blog/p889/</link><pubDate>Sun, 20 Oct 2013 11:11:30 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p889/</guid><description>参考サイト Git で常に除外したい設定を .gitconfig で設定する方法 | ウェブル Eclipse で Git を使う – アンドロイドプロジェクトのリポジトリ作成 – Android 開発入門</description></item><item><title>CentOSでサーバの時刻設定を行う</title><link>https://tomonorimatsumura.github.io/blog/p883/</link><pubDate>Sun, 06 Oct 2013 09:14:58 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p883/</guid><description>どうもディフォルトだとOSの時計が合ってないので自動で同期させるようにする。
NTPをインストールする 想定される環境だと既にインストール済み
rpm -qa | grep ntp fontpackages-filesystem-1.41-1.1.el6.noarch ntpdate-4.2.4p8-3.el6.centos.i686 ntp-4.2.4p8-3.el6.centos.i686 NTPを起動、自動起動設定する service ntpd start chkconfig ntpd on chkconfig --list ntpd #動作確認 ntpq -p Timezoneの設定をする rm -f /etc/localtime cp -p /usr/share/zoneinfo/Japan /etc/localtime 参考サイト サーバの時刻設定、NTPで自動設定・時刻補正 [Fedora, RedHat, CentOS] – Linux 【メモ】【CentOS】サーバマシンのタイムゾーン変更 | (っ´∀｀)っ ゃー | nullpopopo</description></item><item><title>LibreOfficeからMySQLに接続する</title><link>https://tomonorimatsumura.github.io/blog/p874/</link><pubDate>Fri, 04 Oct 2013 04:25:41 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p874/</guid><description>想定される環境 CentOS6.4 LibreOffice 4.1 JDBCドライバのインストール ### LibreOfficeにJDBCドライバを認識させる LibreOffice Calcを起動 ツール→オプション→LibreOffice→詳細→クラスパス [&amp;lt;img src=&amp;quot;http://13.112.229.114/wordpress/wp-content/uploads/2013/10/140507_libreoffice_2-300x270.jpg&amp;quot; alt=&amp;quot;140507_libreoffice_2&amp;quot; width=&amp;quot;300&amp;quot; height=&amp;quot;270&amp;quot; class=&amp;quot;alignnone size-medium wp-image-947&amp;quot; srcset=&amp;quot;http://13.112.229.114/wordpress/wp-content/uploads/2013/10/140507_libreoffice_2-300x270.jpg 300w, http://13.112.229.114/wordpress/wp-content/uploads/2013/10/140507_libreoffice_2.jpg 572w&amp;quot; sizes=&amp;quot;(max-width: 300px) 100vw, 300px&amp;quot; /&amp;gt;][1] [&amp;lt;img src=&amp;quot;http://13.112.229.114/wordpress/wp-content/uploads/2013/10/140507_libreoffice_11-300x189.jpg&amp;quot; alt=&amp;quot;140507_libreoffice_1&amp;quot; width=&amp;quot;300&amp;quot; height=&amp;quot;189&amp;quot; class=&amp;quot;alignnone size-medium wp-image-946&amp;quot; srcset=&amp;quot;http://13.112.229.114/wordpress/wp-content/uploads/2013/10/140507_libreoffice_11-300x189.jpg 300w, http://13.112.229.114/wordpress/wp-content/uploads/2013/10/140507_libreoffice_11.jpg 906w&amp;quot; sizes=&amp;quot;(max-width: 300px) 100vw, 300px&amp;quot; /&amp;gt;][2] /usr/share/java/mysql-connector-java.jarを追加 ### LibreOffice Baseでデータベース接続を確立する LibreOfficeのBaseを開く ファイル→新規作成→データベース 既存のデータベースに接続→JDBC データソースのURL JDBC:mysql://localhost:3306/databasename JDBCドライバクラス com.mysql.jdbc.Driver テストクラスでテスト ユーザー設定 次のステップは適宜 これで接続できるはず ### 参考サイト * [LibreOffice OpenOffice JDBC MySQL &amp;amp;#8211; 適当記録wiki &amp;amp;#8211; Seesaa Wiki（ウィキ）][3] * [MySQLとOpenOffice Baseをjdbcで繋ぐ &amp;amp;#8211; KRAKENBEAL RECORDS][4] * [suz-lab &amp;amp;#8211; blog: CentOSでTomcatからDataSourceを利用してRDS(MySQL)に接続][5] &amp;lt;/ul&amp;gt; [1]: http://13.</description></item><item><title>CentOS6.4にLibreOfficeをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p871/</link><pubDate>Tue, 01 Oct 2013 07:09:38 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p871/</guid><description>lenovoノートPCのVMWare Player上でゲストOSとして稼働しているCentOS6.4にLibreOfficeをインストールしたときのメモ
パッケージをダウンロードする [LibreOfficeのダウンロードページ][1]から必要なパッケージをダウンロード。
今回は
メイン・インストールパッケージ 言語パッケージ ヘルプパッケージ をダウンロード。
メインパッケージをインストールする tar zxvf LibreOffice_4.1.1_Linux_x86_rpm.tar.gz cd LibreOffice_4.1.1_Linux_x86_rpm.tar.gz/RPMS rpm -Uvh *.rpm
### 言語パッケージをインストールする ```:bash tar zxvf LibreOffice_4.1.1_Linux_x86_rpm_langpack_ja.tar.gz cd LibreOffice_4.1.1.2_Linux_x86_rpm_langpack_ja/RPMS rpm -Uvh *.rpm ### LibreOffice ヘルプパッケージをインストールする ```:bash tar zxvf LibreOffice_4.1.1.2_Linux_x86_rpm_helppack_ja cd LibreOffice_4.1.1.2_Linux_x86_rpm_helppack_ja/RPMS rpm -Uvh *.rpm
### 参考サイト * [CentOS6.2にLibreOfficeのインストール &amp;amp;laquo; MARU's Blog][2] &amp;lt;/ul&amp;gt; [1]: http://ja.libreoffice.org/download/ [2]: http://www.</description></item><item><title>CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド</title><link>https://tomonorimatsumura.github.io/blog/p867/</link><pubDate>Wed, 18 Sep 2013 13:51:59 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p867/</guid><description>CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド
CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド
■OS
CentOS 6.0
■拡張子
.rar
■インストール
UnRAR
■作業
CentOSで拡張子RARをUnRARをインストールし解凍
■CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド
下記コマンドを実行し「rpmforge-release-0.3.6-1.el5.rf.i386.rpm」をダウンロード
wget http://dag.wieers.com/packages/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm
「rpmforge-release-0.3.6-1.el5.rf.i386.rpm」をインストール
rpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm
「/etc/yum.repos.d/rpmforge.repo」を開く
vi /etc/yum.repos.d/rpmforge.repo
下記の内容に変更
enabled = 0
「UnRAR」をインストール
yum –enablerepo=rpmforge install unrar
拡張子「.rar」を解凍
unrar e test.rar
http://www.miuxmiu.com/archives/2011/08/02/centos_extension_rar_unrar_install_unzip_command.html</description></item><item><title>さくらのVPSにCentOS6.4 i386をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p861/</link><pubDate>Sun, 15 Sep 2013 16:03:34 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p861/</guid><description>VMWare Playerの実験をしようと思い、色々とやってみた。
CentOSのisoファイルをさくらのVPSへアップロードする sftpでイメージをアップロードする必要がある
CentOSをインストールする ネットワークの設定を行う /etc/resolv.conf、/etc/sysconfig/network-scripts/ifcfg-eth0は既に構築してあるCentOSサーバの設定を参考にする。設定ファイル自体には色々とゴタゴタ書く必要はない。
network managerをoffる。/etc/resolv.confを設定する。
/etc/sysconfig/network-scripts/ifcfg-eth0を設定する
iptablesの設定を行う
参考サイト CentOSのネットワーク設定を手動で行う方法 – bojovs blog はじめての自宅サーバ構築 – Fedora/CentOS – CentOS6 のインストール手順 NetworkManagerについて – 冬日記</description></item><item><title>Windows7でTigerVNCを使用する</title><link>https://tomonorimatsumura.github.io/blog/p859/</link><pubDate>Sun, 15 Sep 2013 07:49:49 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p859/</guid><description>以下に注意！
ポートフォワーディングが使えない 日本語入力は『**ctrl + space key』で切り替える。
参考サイト 緋色のスパイラルノート : Fedora16</description></item><item><title>CentOS6にChromiumをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p854/</link><pubDate>Tue, 03 Sep 2013 06:16:58 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p854/</guid><description>CentOSでのChromeのサポートが切れてしまったのでChromiumに乗り換える
想定される環境 CentOS6.4 32bit CentOS6.3以前ではChromiumが立ち上がらないので注意!!!
Chromium YUM リポジトリを有効にする wget http://people.centos.org/hughesjr/chromium/6/chromium-el6.repo -O /etc/yum.repos.d/chromium-el6.repo
### Chromiumをインストールする ```:bash yum install chromium ### 参考サイト * [CentOS 6.2 に Chrome をインストールする][1] &amp;lt;/ul&amp;gt;</description></item><item><title>EclipseでPerl::Tidyを使用する</title><link>https://tomonorimatsumura.github.io/blog/p832/</link><pubDate>Mon, 15 Jul 2013 13:47:40 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p832/</guid><description>Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。
開発者向けパッケージをインストールする これをインストールしないとPerlでモジュールがインストール出来ない
yum -y groupinstall &amp;quot;Development tools&amp;quot; # インストールされるものを確認する yum groupinfo &amp;quot;Development tools&amp;quot; libyaml-develをインストールする 最初にlibyaml-develをインストールしないと、cpan YAMLがインストール出来ない
yum install libyaml-devel yum -y install *YAML* Perl::Tidyをインストールする 想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。
yum install perl-CPAN perl -MCPAN -e shell # モジュールをアップデートしたりするときにyesコマンドを省略する cpan &amp;amp;gt; o conf prerequisites_policy follow cpan &amp;amp;gt; o conf commit # かならずCPANを最新のものにしておく cpan&amp;amp;gt; upgrade # CPAN YAMLをインストールする cpan&amp;amp;gt; install YAML cpan&amp;amp;gt; install Perl::Tidy Perl::Tidyのインストールが完了すれば、Eclipseの編集中のPerlファイル上で「Ctrl+Shift+F」でコードをフォーマットできるようになる。
参考サイト CPANのインストールからモジュールのインストールするまでの簡単な流れ – ヘッポコからフルスタックを目指す記録 perltidyでソースコード整形 – 半径5メートル Aptana(Eclipse)+EPIC+PerltidyでPerl開発環境を整えて自動コードフォーマットで楽をする | 三度の飯とエレクトロン [O] PerlのCPANモジュールをインストールする時にyesを自動選択するには [CPAN] Can&amp;rsquo;t test without successful make を解消するの巻 – TrippyBoyの愉快な日々</description></item><item><title>EclipseにEPIC | Eclipse Perl Integrarionをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p826/</link><pubDate>Mon, 15 Jul 2013 04:18:05 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p826/</guid><description>サーバ管理を円滑にすすめるために、Perlも扱える方が良いと思い、EclipseにEpicをインストールした。
EPICをインストールする 基本的にはEPICの公式サイトに掲載されているインストール手順に従う。
Eclipse→ヘルプ→新規ソフトウェアのインストール→作業対象(W):にURLを入力する。
現行バージョンの場合は**「http://e-p-i-c.sf.net/updates」**と入力 テストバージョン（先行配布版）の場合は**「http://e-p-i-c.sf.net/updates/testing」**と入力 参考サイト EPIC – Eclipse Perl Integration</description></item><item><title>.htaccessでディレクトリのファイル一覧を表示させる</title><link>https://tomonorimatsumura.github.io/blog/p822/</link><pubDate>Fri, 12 Jul 2013 15:17:47 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p822/</guid><description>セキュリティ上好ましくはないが、この機能を使いたい時もあるので。
以下の一文を.htaccessに書く。
Options +Indexes 参考サイト htaccessでディレクトリのファイル一覧を表示させる方法 : 週末プログラマの開発日記</description></item><item><title>iPhone、iPadのWi-fi接続設定</title><link>https://tomonorimatsumura.github.io/blog/p818/</link><pubDate>Wed, 19 Jun 2013 10:31:27 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p818/</guid><description>http://wayohoo.com/ios/beginners/buffalo-musen-lan-aoss-can-link.html</description></item><item><title>Chromeでホスト名ごとにズーム設定を記憶する機能を追加する</title><link>https://tomonorimatsumura.github.io/blog/p812/</link><pubDate>Thu, 02 May 2013 15:48:07 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p812/</guid><description>FireFoxで言うところのDefault FullZoom Levelみたいな拡張機能がないか探してたらあった。
AutoZoomをインストールする Chromeの「ツールバー右端の設定メニュー」→「設定(S)」→「拡張機能」→「他の拡張機能を見る」→GoogleウェブストアでAutoZoomを検索、インストール
参考サイト Google グループ | 要望：ズーム機能の固定表示</description></item><item><title>CentOS6にChromeをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p807/</link><pubDate>Thu, 02 May 2013 15:37:24 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p807/</guid><description>どうもCentOSとFireFoxが相性が悪いのでChromeに乗り換えてみる。
Google YUM リポジトリを有効にする vi /etc/yum.repos.d/google-chorme.repo # 64 bit 版の場合 [google-chrome] name=google-chrome - 64-bit baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64 enabled=1 gpgcheck=1 gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub # 32 bit 版の場合 [google-chrome] name=google-chrome - 32-bit baseurl=http://dl.google.com/linux/chrome/rpm/stable/i386 enabled=1 gpgcheck=1 gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub Chromeをインストールする インストール可能なパッケージを調べる
yum list &amp;quot;*chrome*&amp;quot; Loaded plugins: fastestmirror, refresh-packagekit Loading mirror speeds from cached hostfile * base: rsync.atworks.co.jp * epel: ftp.jaist.ac.jp * extras: rsync.atworks.co.jp * updates: rsync.atworks.co.jp google-chrome | 951 B 00:00 google-chrome/primary | 1.4 kB 00:00 google-chrome 3/3 Installed Packages xorg-x11-drv-openchrome.</description></item><item><title>さくらのスタンダードにRedmineをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p797/</link><pubDate>Sun, 31 Mar 2013 11:49:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p797/</guid><description>実験的にやってみる。
libyamlをインストールする 後々色々とエラーが出るので必ずインストールする！
cd ~/local/src wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz tar zxvf yaml-0.1.4.tar.gz cd yaml-0.1.4 ./configure --prefix=~/local make make install Rubyをインストールする Rubyは2.0をインストールする
cd $HOME/local/src wget http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz tar zxvf ruby-2.0.0-p353.tar.gz cd ruby-2.0.0-p353 ./configure --disable-install-doc --prefix=$HOME/local make make install .cshrcを変更する 新たにインストールしたRubyにパスを通す
vi $HOME/.cshrc # set pathに$HOME/local/binを追加 # .cshrcを反映させる source $HOME/.cshrc # Rubyのパスを調べる which ruby Redmineをインストールする cd $HOME/www wget http://www.redmine.org/releases/redmine-2.4.2.tar.gz tar zxvf redmine-2.4.2.tar.gz mv redmine-2.4.2 redmine gem update --system # gemをアップデートする。これを行わないとbundlerからgemパッケージがインストール出来ない gem install bundler --no-rdoc --no-ri cd /redmine-install-dir bundle install --without development test bundle exec rake generate_secret_token rake db:migrate RAILS_ENV=production Redmineの動作確認をする ruby /redmine-install-dir/script/rails server webrick -e production http://{yourhost}:3000に接続し、Redmine画面が表示されたら正常。</description></item><item><title>さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p787/</link><pubDate>Mon, 25 Mar 2013 01:42:01 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p787/</guid><description>VMWare Playerをインストールする https://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/5_0
さくらのVPSからVMWare Playerを使うにはバイバスを通す必要がある
http://communities.vmware.com/docs/DOC-8970
vmx.allowNested = TRUE
ローカルのCentOSでEpson LP-S2000を使う場合は、ドライバをインストールした後、一度電源を入れて認識させ、プリンタを削除してもう一度接続し直す。
VMWare Playerをアンインストールする /usr/bin/vmware-installer -u vmware-player 参考サイト VMware Communities: VMware Player connot run on this CPU VMware Communities: Running Nested VMs Uninstall Vmware Player</description></item><item><title>CentOS6で動画を閲覧する</title><link>https://tomonorimatsumura.github.io/blog/p782/</link><pubDate>Wed, 20 Mar 2013 13:49:05 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p782/</guid><description>TEDからダウンロードした動画をCentOS6でも観たいと思い「VLC media player(VideoLAN Client)」をインストールした。
VLC media playerのインストール準備 VLC media playerのインストールにはRemi、EPEL、RPMFusionがインストールされている必要がある。
yum localinstall --nogpgcheck http://download1.rpmfusion.org/free/el/updates/6/i386/rpmfusion-free-release-6-1.noarch.rpm yum localinstall --nogpgcheck http://download1.rpmfusion.org/nonfree/el/updates/6/i386/rpmfusion-nonfree-release-6-1.noarch.rpm VLC media playerをインストールする yum --enablerepo=remi-test info vlc # パッケージの確認 yum --enablerepo=remi-test install vlc 動画を再生する場合はCentOS6のデスクトップメニューから「アプリケーション」→「サウンドとビデオ」→「動画プレイヤー」からVLC media playerを起動させる。
サポートされないフォーマットのファイルはVLC media playerのインストラクションに従いプラグイン等をインストールする。
参考サイト VideoLAN – Official page for VLC media player, the Open Source video framework! Install VLC (Media Player) in RHEL/CentOS 6.3/5.6, Fedora 17-1</description></item><item><title>Redmineにテーマをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p778/</link><pubDate>Mon, 18 Mar 2013 12:20:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p778/</guid><description>現在のところ使い勝手が良いfarend fancyをインストールする。
https://github.com/farend/redmine_theme_farend_fancyへアクセス→Git-Read-OnlyのURLを参照し、「/redmine-install-dir/public/themes/」にgit cloneコマンドで配置する。</description></item><item><title>CentOS6のApacheでmod_cacheを設定する</title><link>https://tomonorimatsumura.github.io/blog/p770/</link><pubDate>Mon, 18 Mar 2013 11:50:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p770/</guid><description>Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。
mod_cacheのインストール確認を行う 想定される環境だとmod_cacheおよびmod_disk_cacheは既にインストール済み。
httpd -M | grep cache Syntax OK cache_module (shared) disk_cache_module (shared) mod_cahceの設定を行う 「/etc/httpd/conf.d/cache.conf」にモジュールの設定を書く。マニュアルによると「CacheDirLevelsの値 X CacheDirLengthの値」は「20」以下でなければならないので注意。
vi /etc/httpd/conf.d/cache.conf # 以下を書き込む # LoadModule cache_module modules/mod_cache.so # LoadModule disk_cache_module modules/mod_disk_cache.so &amp;amp;lt;IfModule mod_cache.c&amp;amp;gt; &amp;amp;lt;IfModule mod_disk_cache.c&amp;amp;gt; # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す CacheIgnoreCacheControl On # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする CacheIgnoreNoLastMod On # Set-Cookie ヘッダをキャッシュしない CacheIgnoreHeaders Set-Cookie # キャッシュデータの保存先 CacheRoot /var/cache/apache # キャッシュ対象とするパスの指定 CacheEnable disk / # キャッシュデータを保管するディレクトリの階層の深さ CacheDirLevels 5 # キャッシュデータを保管するディレクトリの文字数 CacheDirLength 3 &amp;amp;lt;/IfModule&amp;amp;gt; &amp;amp;lt;/IfModule&amp;amp;gt; # キャッシュ保管ディレクトリの権限を変更しておく mkdir /var/cache/apache chown apache:apache /var/cache/apache # Apacheを再起動する service httpd restart 参考サイト Apache の mod_cache で日記の高速化に挑戦してみた – まちゅダイアリー(2010-06-26) mod_disk_cache – Apache HTTP サーバ</description></item><item><title>CentOS6でApache、PHP、MySQLの初期設定を行う</title><link>https://tomonorimatsumura.github.io/blog/p758/</link><pubDate>Sat, 16 Mar 2013 16:27:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p758/</guid><description>記事がバラバラになっているのでまとめておく。
Apacheの自動機動設定を行う 想定される環境だと既にApacheはインストール済み。
service httpd restart chkconfig httpd on PHPをインストールする こちらのエントリーを参考にする
MySQL+phpMyAdminをインストールする こちらのエントリーを参考にする</description></item><item><title>CentOS6でmod_userdirを使用する</title><link>https://tomonorimatsumura.github.io/blog/p745/</link><pubDate>Tue, 12 Mar 2013 17:15:14 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p745/</guid><description>動作確認は「http://localhost/~{user}/」にアクセスする。
mod_userdirの設定をする vi /etc/httpd/conf.d/userdir.conf UserDir public_html # 「~/public_html」にファイルを置くことでApacheに認識される UserDir disabled root vi /etc/httpd/conf/httpd.conf # mod_userdirを有効にする &amp;amp;lt;IfModule mod_userdir.c&amp;amp;gt; UserDir public_html &amp;amp;lt;/IfModule&amp;amp;gt; # Directory /home/*/public_htmlを修正する &amp;amp;lt;Directory /home/*/public_html&amp;amp;gt; AllowOverride All Options IncludesNoExec ExecCGI FollowSymLinks &amp;amp;lt;Limit GET POST OPTIONS&amp;amp;gt; Order allow,deny Allow from all &amp;amp;lt;/Limit&amp;amp;gt; &amp;amp;lt;LimitExcept GET POST OPTIONS&amp;amp;gt; Order deny,allow Deny from all &amp;amp;lt;/LimitExcept&amp;amp;gt; &amp;amp;lt;/Directory&amp;amp;gt; SELinuxを無効にする しばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。
vi /etc/selinux/config # SELinuxを有効にする。 SELINUX=disabled reboot public_htmlの所有権を変更する 想定される環境だとpublic_htmlは700になっているので、/home/userを755に、pulbic_htmlを755に変更しておく。
参考サイト ユーザーディレクトリ作成(/~ユーザー名/) – CentOSで自宅サーバー構築 apacheでmod_userdir.c – BIGLOBEなんでも相談室 How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.</description></item><item><title>EclipseにAptanaをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p739/</link><pubDate>Tue, 12 Mar 2013 15:22:52 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p739/</guid><description>Eclipseでプロジェクトを扱うときに静的HTMLで書かれたサイトは「Webプロジェクト」として扱いたいのでAptana Studioをインストールする。
EclipseにAptana Studio 3プラグインをインストールする ダウンロードしてインストールタイプのEclipseプラグイン版がAptana StudioのHPにアップされているがEclipseのプラグインインストーラを使用する。
Eclipse→ヘルプ→新規ソフトウェアのインストール→作業対象(W):へ「http://download.aptana.com/studio3/plugin/install/」と入力 「Aptana Studio 3 Plugin」にチェックを入れインストールする 参考サイト Aptana Eclipse Webプロジェクト開発プラグイン Aptana Studio – System House ACT</description></item><item><title>CentOSで6.3でを起動時にNum Lockを有効にする</title><link>https://tomonorimatsumura.github.io/blog/p729/</link><pubDate>Sat, 09 Mar 2013 16:37:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p729/</guid><description>CentOSを立ち上げたときにいつもキーボードのNum Lockが有効になっておらず面倒なので対応する。
vi /etc/rc.d/rc.sysinit # 以下を末尾に追加する for tty in /dev/tty[1-9]*; do setleds -D +num &amp;amp;lt; $tty done 参考サイト centosでnumlockを起動時に有効にする Linuxシステムの起動スクリプト(inittab、rc.sysinit、rc)を解読 http://pkgs.org/centos-6-rhel-6/repoforge-x86_64/numlockx-1.1-1.el6.rf.x86_64.rpm.html</description></item><item><title>サーバの状態を確認する</title><link>https://tomonorimatsumura.github.io/blog/p700/</link><pubDate>Thu, 21 Feb 2013 03:52:56 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p700/</guid><description>cronでサーバのrebootが効いているのかどうか確認するためのコマンドは「w」
w 12:51:10 up 2 min, 1 user, load average: 0.15, 0.12, 0.05 USER TTY FROM LOGIN@ IDLE JCPU PCPU WHAT root pts/1 example.com. 12:49 0.00s 0.02s 0.00s w</description></item><item><title>FireFoxでズームをドメイン毎に指定する</title><link>https://tomonorimatsumura.github.io/blog/p689/</link><pubDate>Fri, 15 Feb 2013 07:06:00 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p689/</guid><description>RedmineやWordPressなど、ディフォルトのズームが100%だと文字が小さくて見にくいのでアドオンで対応する。
Default FullZoom Level 5.0をFireFoxインストールする FireFox→ツール→アドオン
「Default FullZoom Level」を検索し、インストールする。</description></item><item><title>CentOS6でVNCをポートフォワーディングで接続する</title><link>https://tomonorimatsumura.github.io/blog/p687/</link><pubDate>Thu, 14 Feb 2013 06:53:20 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p687/</guid><description>SSH接続ポート番号を指定する vncviwerコマンドではSSH接続ポート番号が指定出来ないみたいなので、「/etc/ssh/ssh_config」か「~/.ssh/config」でポート番号を指定しておく。またサーバ側の「/etc/ssh/sshd_config」のAllowTcpForwardingをyesにしておく。
ポートフォワーディングで接続確認をする ポートフォワーディングの設定がうまくいっていないとVNC Viewerが立ち上がらないので接続確認を行う。リモートのユーザーフォルダの.sshにローカルの公開鍵ファイルがないとポートフォワーディングがうまくいかないので注意
# ssh -L [ローカルホストポート]:[リモートホスト]:[リモートホストポート] [リモートホスト] -l [リモートホストのユーザ名] $ ssh -L 1234:192.168.1.22:5901 192.168.1.22 -l user VNC Viewerを起動する VNC SERVERの設定をポートフォワーディング用に設定する。
vi /etc/sysconfig/vncservers VNCSERVERS=&amp;quot;1:vncuser&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 2560x800 -localhost&amp;quot; ローカルマシーンで以下のコマンドで起動させる。
vncviewer -via {vncuser}@{hostname} localhost:1 参考サイト SSH ポートフォワーディングでVNCを使う [ubuntu] How do I VNC via SSH when both are not set to use the default port numbers?</description></item><item><title>CentOS6でsuをほぼ無効にする</title><link>https://tomonorimatsumura.github.io/blog/p679/</link><pubDate>Tue, 12 Feb 2013 17:36:11 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p679/</guid><description>SSHの設定をいじっているときに、一般ユーザーでログインしているのに、パスワードひとつでrootに昇格出来てしまい非常に驚いた。セキュリティー的に全くダメなのでこの設定を無効にし、wheelグループに属するユーザー以外にroot権限を持たせないようにする。
参考サイト http://d.hatena.ne.jp/Hossy/20091025/p1</description></item><item><title>EclipseにEgitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p674/</link><pubDate>Tue, 12 Feb 2013 08:07:33 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p674/</guid><description>少し前からEgitを使っているが、ユーザー毎のSSHの設定でかなりハマったのでメモ。
EclipseにEgitをインストールする WindowsでEclipseを使う場合はAptanaプラグインの使用時に注意する。EclipseのAptanaのGitドライバの関係で、Gitのコミットメッセージが文字化けする場合がある。
Eclipse→ヘルプ→新規ソフトウェアのインストール→作業対象(W):から**「すべての使用可能なサイト」**を選択 フィルター入力に**「Egit」**と入力 すべての選択肢にチェックを入れインストールする SSHの設定をする 2時間ほどハマった。ディフォルトだとEclipseが鍵ファイルをうまくみつけられないので.ssh/configに設定を書き込む
Host hoge # 接続名（なんでもよい） HostName {yourhostname} # 接続先のドメイン名やIPアドレス User {sshuser} # SSH接続ユーザー名 PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa # 鍵ファイルの場所
Eclipse側ではディフォルトで鍵ファイルを見つけに行く設定が **Eclipse**→**ウィンドウ**→**設定**→**一般**→**ネットワーク接続**→**SSH2** にある。適切に設定されているか確認する。 ### 参考サイト * [ssh 接続を簡単にする ~/.ssh/config | dogmap.jp][1] * [Git &amp;amp;#8211; rails開発してたらコミットコメントが文字化けた話 &amp;amp;#8211; Qiita](http://qiita.com/shin1988/items/90cd428b5a3b64560e8b)&amp;lt;/il&amp;gt; * [Ktouth Brand. on Web &amp;amp;#8211; 解決：Aptana(eclipse) + EGit のコミットログ文字化けと化けたログの修正方法](http://www.k-brand.gr.jp/log/002510)&amp;lt;/il&amp;gt; &amp;lt;/ul&amp;gt; [1]: http://dogmap.</description></item><item><title>IS06でテサリングをする</title><link>https://tomonorimatsumura.github.io/blog/p670/</link><pubDate>Mon, 11 Feb 2013 20:08:50 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p670/</guid><description>ADW.Launcherをインストールする</description></item><item><title>Redmineのパフォーマンスチューニング</title><link>https://tomonorimatsumura.github.io/blog/p667/</link><pubDate>Sat, 09 Feb 2013 10:59:14 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p667/</guid><description>Redmineが若干遅いのでチューニングを試みる。
avahi-daemonを停止する CentOSはディフォルトでavahi-daemonが起動するようになっているので無効にする。
# 起動設定を確認 chkconfig --list | grep avahi- avahi-daemon 0:off 1:off 2:off 3:on 4:on 5:on 6:off # 自動で起動しないようにする chkconfig avahi-daemon off # 起動設定を確認 chkconfig --list | grep avahi- avahi-daemon 0:off 1:off 2:off 3:off 4:off 5:off 6:off reboot 参考サイト Windows7でRedmineが異様に遅い – 3100 Fedora/RHEL/CentOS等でのavahi-daemonの停止 – 情報技術の四方山話</description></item><item><title>公開鍵秘密鍵を設定する</title><link>https://tomonorimatsumura.github.io/blog/p663/</link><pubDate>Sun, 03 Feb 2013 02:22:14 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p663/</guid><description>VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す
キーペアを作成する 接続先のサーバでキーペアを作成する。SSH接続時は .sshディレクトリ のアクセス権限は700、公開鍵、秘密鍵は600にしておかないとエラーになる。
ssh-keygen -t rsa mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys ログイン設定をする パスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する
vi /etc/ssh/sshd_config # 以下の行のコメントを外して保存 PubkeyAuthentication yes PasswordAuthentication no # SSH のサービスを再起動 /etc/init.d/sshd restart SSHの接続ポートを変更する ディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。
vi /etc/ssh/sshd_config Port {sshport_number} # 0～65535の間で設定 vi /etc/sysconfig/iptables # 以下を追加 -A INPUT -m state --state NEW -m tcp -p tcp --dport {sshport_number} -j ACCEPT # sshd、iptablesを再起動する service sshd restart /etc/rc.d/init.d/iptables restart ローカルに秘密鍵を保存する 何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う
# ローカルPCで操作する cd ~/.</description></item><item><title>CentOS6を日本語環境にする</title><link>https://tomonorimatsumura.github.io/blog/p656/</link><pubDate>Sat, 02 Feb 2013 11:24:18 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p656/</guid><description>VNC環境で日本語を使いたかったので
日本語関連のパッケージをグループインストールする yum -y groupinstall &amp;quot;Japanese Support&amp;quot; システムの文字セットを変更する vi /etc/sysconfig/i18n # 変更 LANG=&amp;quot;ja_JP.UTF-8&amp;quot; システムを再起動する reboot 日本語入力をONにする システム→設定→入力メソッド
『入力メソッドの機能を有効にする』にチェックを入れる
参考サイト CentOS 6 – 日本語環境にする ： Server World</description></item><item><title>CentOS6にFireFoxをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p653/</link><pubDate>Sat, 02 Feb 2013 11:16:38 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p653/</guid><description>VNC環境を整え、VNCサーバ上でもFireFoxが使えると便利だと思い試してみる。
FireFoxをインストールする yum install firefox FireFoxをアップデートする remiリポジトリがインストールされているのを確認したら
yum --enablerepo=remi update firefox FLASHプラグインをインストールする ## Adobe Repository 32-bit x86 ## rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux ## Adobe Repository 64-bit x86_64 ## rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux # Update Repositories yum check-update yum install flash-plugin nspluginwrapper alsa-plugins-pulseaudio libcurl 参考サイト CentOS 6.2に最新版のFirefoxとFlash Playerをインストール – なんじゃくにっき Adobe Flash Player 11.2 on Fedora 18/17, CentOS/RHEL 6.3/5.8</description></item><item><title>さくらのVPSでVNCを起動する</title><link>https://tomonorimatsumura.github.io/blog/p646/</link><pubDate>Sat, 02 Feb 2013 04:26:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p646/</guid><description>リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応このサイトの手順通りで大体は環境構築が可能だと思う。
1. 必要なパッケージのインストール サーバ 想定される環境だと、tigervnc-serverとデスクトップパッケージをインストールする必要がある。rpmからインストールする。
yum install tigervnc-server yum groupinstall &amp;quot;Desktop&amp;quot;; yum install -y gnome* # システムモニターなどが使えるようになる このコマンドは無効化も知れない yum groupinstall &amp;quot;Desktop&amp;quot; &amp;quot;Desktop Platform&amp;quot; &amp;quot;General Purpose Desktop&amp;quot; yum groupinstall &amp;quot;X Window System&amp;quot;; CentOSを日本語化するにはこちらを参考にする。
クライアント こちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。
yum install vnc VNCサーバの設定 vi /etc/sysconfig/vncservers # 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！) VNCSERVERS=&amp;quot;1:vncuser&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 800x600&amp;quot; 複数ユーザを設定する場合は
vi /etc/sysconfig/vncservers # 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！) VNCSERVERS=&amp;quot;1:vncuser1 2:vncuser2&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 800x600&amp;quot; VNCSERVERARGS[2]=&amp;quot;-geometry 800x600&amp;quot; VNCユーザの設定 ログインユーザーをVNCユーザーに切り替えてパスワードを変更する
su vncuser vncpasswd &amp;amp;lt;enter&amp;amp;gt; Password: ****** &amp;amp;lt;enter&amp;amp;gt; Verify: ***** &amp;amp;lt;enter&amp;amp;gt; パケットフィルタリングの設定 想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。</description></item><item><title>ローカルで作成したGitリポジトリをリモートへプッシュする</title><link>https://tomonorimatsumura.github.io/blog/p640/</link><pubDate>Sun, 27 Jan 2013 11:31:02 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p640/</guid><description>Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。
remote: error: refusing to update checked out branch: refs/heads/master remote: error: By default, updating the current branch in a non-bare repository remote: error: is denied, because it will make the index and work tree inconsistent remote: error: with what you pushed, and will require &amp;quot;git reset --hard&amp;quot; to match remote: error: the work tree to HEAD. remote: error: remote: error: You can set &amp;quot;receive.denyCurrentBranch&amp;quot; configuration variable to remote: error: &amp;quot;ignore&amp;quot; or &amp;quot;warn&amp;quot; in the remote repository to allow pushing into remote: error: its current branch; however, this is not recommended unless you remote: error: arranged to update its work tree to match what you pushed in some remote: error: other way.</description></item><item><title>シェルスクリプトのテストを書く</title><link>https://tomonorimatsumura.github.io/blog/p638/</link><pubDate>Sat, 26 Jan 2013 20:42:02 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p638/</guid><description>どうもシェルスクリプトのテストを書いちゃった方が作業が速い気がして来たのでshunit2を調べてテストを書いてみる事にした。スクリプト言語だとブラウザで確認した方が速かったが、シェルスクリプトは待ち時間も長いし、一回発動させるとteardownに使う時間ももったいない。
http://d.hatena.ne.jp/kaakaa_hoe/20120908
http://code.google.com/p/shunit2/</description></item><item><title>さくらのVPSで回線速度が遅くアクセスに時間がかかる</title><link>https://tomonorimatsumura.github.io/blog/p622/</link><pubDate>Fri, 25 Jan 2013 13:50:04 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p622/</guid><description>さくらの公式サイトによると、どうやら初期設定で変更をかける必要があるらしい。
ethtoolコマンドでtcp segmentation offloadをoffにする ethtool -K eth0 tso off ethtool -k eth0 Offload parameters for eth0: rx-checksumming: on tx-checksumming: on scatter-gather: on tcp-segmentation-offload: off # onからoffになった udp-fragmentation-offload: on generic-segmentation-offload: on generic-receive-offload: off large-receive-offload: off reboot時にも設定を有効にする vi /etc/udev/rules.d/50-eth_tso.rules # 以下の内容を記述 ACTION==&amp;quot;add&amp;quot;, SUBSYSTEM==&amp;quot;net&amp;quot;, KERNEL==&amp;quot;eth0&amp;quot;, RUN+=&amp;quot;/sbin/ethtool -K eth0 tso off&amp;quot; 参考サイト 1TSOが原因でさくらVPSへのウェブアクセスが異常に遅くなるトラブルに遭遇 – 橙工房 Atelier Laranjeiras [001387]さくらのVPSで「CentOS」を利用していますが、回線速度が遅くアクセスに時間がかかります。 | FAQ Search – さくらインターネット</description></item><item><title>CentOS6.3にVMware Playerをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p618/</link><pubDate>Tue, 22 Jan 2013 05:37:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p618/</guid><description>さくらのVPS上でWindows XPを動かそうと思い、いろいろと画策中。。。
http://dharry.hatenablog.com/entry/20090912/1252690650
http://www.howtoforge.com/vmware_server_centos5.0
http://morishige.jp/blog/archives/43</description></item><item><title>Gitメモ</title><link>https://tomonorimatsumura.github.io/blog/p612/</link><pubDate>Sun, 20 Jan 2013 18:56:08 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p612/</guid><description>git-revertでコミット履歴を消せるらしい。。。
http://www.kernel.org/pub/software/scm/git/docs/git-revert.html
参考サイト
http://labs.timedia.co.jp/2011/02/git-various-undo.html</description></item><item><title>Redmineでチケットが新規作成出来ない</title><link>https://tomonorimatsumura.github.io/blog/p605/</link><pubDate>Sun, 20 Jan 2013 14:51:08 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p605/</guid><description>Redmineでチケットを新たに作成しようと思ったらInternal Errorに遭遇した。調べてみるとファイルを添付したチケットを作成するときにInternal Errorがでるようだ。どうやら権限の設定がうまくいって無かったらしい。
Redmineインストールディレクトリの権限を変更する 標準だとrootになっているので、これをApacheに変更する
chown -R apache:apache /var/lib/redmine またPassengerの設定によっては「www-data」に変更する必要があるみたいだ。
参考サイト Apache上でRuby on Railsアプリケーションを動かす／Passenger(mod_rails for Apache)の利用 | Redmine.JP Uploading files/documents fails – Redmine Bug#575462: redmine + apache2 shows permission error to access /etc/redmine/default/session.yml, help, FAQ, forums, question, answer, advice, opinion and howto for Windows, Linux and Mac OS X</description></item><item><title>Redmineのバージョンを確認する</title><link>https://tomonorimatsumura.github.io/blog/p596/</link><pubDate>Sun, 20 Jan 2013 07:52:40 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p596/</guid><description>Redmineのバージョンを確認するには「ソースから確認する」方法と「管理画面から確認する」方法と2種類ある。
Redmineのバージョンをソースから確認する 「redmine_dir/lib/redmine/version.rb」にバージョンが記述されているファイルがある。
cd redmine_dir/lib/redmine/ cat version.rb require &amp;quot;rexml/document&amp;quot; module Redmine module VERSION #:nodoc: MAJOR = 2 MINOR = 2 TINY = 1 # Branch values: # * official release: nil # * stable branch: stable # * trunk: devel BRANCH = &amp;quot;stable&amp;quot; Redmineのバージョンを管理画面から確認する 管理者権限を持ったユーザーで「管理」→「情報」画面を開く。
参考サイト 使用中のRedmineのバージョンを確認する | Redmine.JP</description></item><item><title>CentOS6.3にFTPサーバをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p577/</link><pubDate>Wed, 09 Jan 2013 17:12:27 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p577/</guid><description>なんとなくやってみた。
vsftpdをインストールする 標準では入って無いのでインストールする
yum install vsftpd vsftpd.confを設定する 『/etc/vsftpd/vsftpd.conf』を編集する。他にも設定すべきところがあるが、動作確認のみしたいので。
anonymous_enable=YES vsftpdを起動する service vsftpd start クライアントのCentOSにFTPクライアントをインストールする yum -y install ftp FTPサーバへ接続する ftp -v ip FTPサーバへブラウザからアクセスする ftp://anonymous@url/ftp/pubにアクセスする。ファイルは/var/ftpにあるものが表示される。</description></item><item><title>RedmineのMy AccountでInternal Errorが出る</title><link>https://tomonorimatsumura.github.io/blog/p568/</link><pubDate>Tue, 08 Jan 2013 10:34:00 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p568/</guid><description>Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらInternal Errorが出た。
RedmineのGemFileを使用する 結局のところ、/path/to/redmineのGemFileに記述してあるライブラリ通りの設定でないとRedmineが正しく機動しない事が判明。RedmineのGemFile通りのライブラリを必ずインストールする事！
参考リンク http://assimane.blog.so-net.ne.jp/2011-01-03
http://www10.atwiki.jp/bambooflow/pages/273.html
http://blog.redmine.jp/articles/redmine-1_2-installation_centos/
http://blog.ruby.iijgio.com/2012/12/27/redmine220</description></item><item><title>CentOS6.3にEPELリポジトリを追加する</title><link>https://tomonorimatsumura.github.io/blog/p548/</link><pubDate>Sat, 05 Jan 2013 04:29:24 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p548/</guid><description>EPELリポジトリを追加する EPELの公式サイトのFAQにインストール方法があった。
# 32bit版64bit版共通 rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm EPELの設定を確認する 念のため、優先順位の設定を確認しておく。『/etc/yum.repos.d/epel.repo』を開いて、[epel]のenabled=をenabled=1にする。
cat /etc/yum.repos.d/epel.repo 参考サイト EPEL/ – FedoraProject CentOSにepel、remiリポジトリを追加する | ExiZ.org</description></item><item><title>CentOS6.3にRemiリポジトリをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p542/</link><pubDate>Sat, 05 Jan 2013 04:04:21 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p542/</guid><description>どうやらCentOSでPHP+MySQLのアップデートを行うにはRemiリポジトリが相性が良いらしい。
Remiをインストールする まずEPELリポジトリが入っているか確認し、入っていなければインストールする。Remiは個人でアップデートされているものらしいので、もしかしたらURLが変わるかもしれないしサイト自体が閉鎖される可能性があるが、現時点では以下のコマンドでインストール出来る。
rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm Remiの設定を確認する 念のため、優先順位の設定を確認しておく。『/etc/yum.repos.d/remi.repo』を開いて、[remi]のenabled=1をenabled=0に変更する。
cat /etc/yum.repos.d/remi.repo 参考サイト Les RPM de Remi CentOSにepel、remiリポジトリを追加する | ExiZ.org remi レポジトリを追加 – KENCOM.BIZ</description></item><item><title>Windows7にVMware Player + CentOS6.3をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p535/</link><pubDate>Thu, 03 Jan 2013 09:01:31 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p535/</guid><description>WindowsでのSSHやgitの設定が非常に手間なのでノートPCにCentOSをそのまま突っ込もうと思いVMware Playerを試す。
CentOS6.3のディスクイメージを入手する VMware Playerの仮想OSとして使用するCentOS6.3のディスクイメージを[ダウンロードサイト][1]から入手。ダウンロード先によって接続スピートがかなり異なるので速いところを選ぶ。今の所外付けのHDD内にダウンロード済みのCentOS6.3のディスクイメージがあるのでそちらを使う。
VMware Playerをインストールする [VMware Playerのサイト][2]からWindows用のインストールファイルを[ダウンロードして][3]通常通りインストールする。
仮想OSの設定ファイルを作成する VMware Playerはのみの対応なので、CentOSが日本語にならない。なので[EasyVMX!のサイト][4]で仮想OSの設定ファイルを作成する。
easyvmx 2.0をクリック 仮想OS名、割り当てHDD容量などを記入して「Create Virtual Machine」をクリック (仮想マシン名).zip というダウンロードリンクが表示されるので、クリックしてダウンロード。 CentOS6.3をインストールする 前の手順で作成したZIPファイルを仮想OSをインストールするフォルダに展開する。テキストエディタなどで(仮想OS名).vmxファイルを開いて編集。
ide1:0.deviceType = &amp;ldquo;cdrom-image&amp;rdquo; ide1:0.fileName = &amp;ldquo;(isoイメージのあるパス)\centosdvd.iso&amp;rdquo;
その後(仮想OS名).vmxをダブルクリック。後はOSの指示通りにインストール作業を進めて行く。 ### 参考サイト * [www.centos.org &amp;amp;#8211; The Community ENTerprise Operating System][5] * [VMWare Player メモ &amp;amp;#8211; MLEXP Wiki][6] * [VMware の仮想化によるインフラストラクチャの最適化][7] &amp;lt;/ul&amp;gt; [1]: http://isoredirect.centos.org/centos/6/isos/i386/ [2]: http://www.vmware.com/ [3]: http://www.vmware.com/support/product-support/player.html [4]: http://www.easyvmx.com/ [5]: http://www.centos.org/ [6]: http://www.</description></item><item><title>Apacheでサーバ情報の隠蔽を行う</title><link>https://tomonorimatsumura.github.io/blog/p521/</link><pubDate>Wed, 02 Jan 2013 10:09:03 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p521/</guid><description>Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「サーバ構築の実際がわかる Apache[実践]運用/管理」に書いてあったので調べてみた。
CentOS6.3にtelnetをインストールする 標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきパッケージでもないと思う。
yum install telnet``` ### HTTPレスポンスを利用したApacheのバージョン情報の確認をする telnetでヘッダフィールドレスポンスのみ確認できる ```:bash telnet example.com 80 HEAD / HTTP/1.1 &amp;amp;lt; return &amp;amp;gt; x2 HTTP/1.1 400 Bad Request Date: Wed, 02 Jan 2013 09:38:44 GMT Server: Apache/2.2.15 (CentOS) Connection: close Content-Type: text/html; charset=iso-8859-1``` どうやらサーバ情報が表示されてしまってるみたいだ ### ServerTokensを設定する CentOS6.3はディフォルトで**ServerTokens**が**OS**になっているので**ProductOnly**に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する**ServerSignature**も**Off**に指定しておく。 ```:bash vi /etc/httpd/conf/httpd.conf /ServerTokens # ServerTokensを検索 i ServerTokens ProductOnly &amp;amp;lt; Esc &amp;amp;gt;:w /ServerSignature # ServerSignatureを検索 i ServerSignature Off &amp;amp;lt; Esc &amp;amp;gt;:wq httpd -k restart # Apacheを再起動する 参考サイト Making HTTP requests via telnet – Tony’s Place viコマンド（vimコマンド）一覧（検索・置換）</description></item><item><title>cronを使うための準備</title><link>https://tomonorimatsumura.github.io/blog/p519/</link><pubDate>Wed, 02 Jan 2013 06:15:18 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p519/</guid><description>http://centlinuxer.blog37.fc2.com/blog-entry-36.html</description></item><item><title>WordPressをPC閲覧用とスマホ閲覧用に分ける</title><link>https://tomonorimatsumura.github.io/blog/p516/</link><pubDate>Wed, 02 Jan 2013 03:28:58 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p516/</guid><description>PC用のテンプレートからだとスマホからアクセスした時に表示が見にくいのでWordPressブログをもう一つ用意して同期する。
http://linuxserver.jp/%E3%82%B5%E3%83%BC%E3%83%90%E6%A7%8B%E7%AF%89/DB/MySQL/mysqldump%E3%81%A8cron%E3%81%A7%E3%81%AE%E8%87%AA%E5%8B%95%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97.php</description></item><item><title>CentOS6.3にWordPressをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p463/</link><pubDate>Mon, 31 Dec 2012 08:02:40 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p463/</guid><description>権限の設定でハマったのでメモ。
WordPressをダウンロード、解凍する 最新版はこちらから確認する。
cd /path/to/wordpressfolder wget http://ja.wordpress.org/wordpress-3.5-ja.zip unzip wordpress-3.5-ja.zip #wordpressと言うフォルダに展開される mv wordpress blogfolder データベースを作成する rootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する
mysql -u root -p #パスワードを入力 CREATE DATABASE wordpress-db; GRANT ALL ON wordpress-db.* TO wpuser@localhost IDENTIFIED BY 'パスワード'; WordPressの権限を書き換える CentOSでユーザを作成し、そのユーザに権限を与えるのかと思ったが、どうやらApacheに権限を与えるらしい。。。
chown -R apache:apache blogfolder WordPressの初期設定を行いブログを開設する 上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する
参考サイト ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</description></item><item><title>CentOS6.3でApache上でRedmineを実行する</title><link>https://tomonorimatsumura.github.io/blog/p459/</link><pubDate>Mon, 31 Dec 2012 05:24:12 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p459/</guid><description>こちらのサイトを参考にした。
Passengerのインストール Phusion Passengerをインストールする
gem install passenger --no-rdoc --no-ri PassengerのApache用モジュールのインストールと設定 service httpd start # Apacheを機動させておく passenger-install-apache2-module 『/etc/httpd/conf.d/passenger.conf』を作成し「passenger-install-apache2-module –snippet」で表示される設定を書き込む。
# Passengerの基本設定。 # passenger-install-apache2-module --snippet を実行して表示される設定を使用。 # 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。 # LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17 PassengerRuby /usr/local/bin/ruby Apacheの起動および自動起動の設定 /etc/init.d/httpd start chkconfig httpd on Apache上のPassengerでRedmineを実行するための設定 サブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。
ln -s /var/lib/redmine/public /var/www/html/redmine 『/etc/httpd/conf.d/passenger.conf』に以下の設定を追加。
RackBaseURI /redmine またRedmineインストールディレクトリの権限の設定も行う事。
chown -R apache:apache /var/lib/redmine 設定後、Apacheを再起動。
/etc/init.d/httpd configtest /etc/init.d/httpd graceful 参考サイト Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</description></item><item><title>さくらのスタンダードにgitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p444/</link><pubDate>Mon, 17 Dec 2012 09:12:47 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p444/</guid><description>ノートPCからさくらのVPSにSSHで繋ごうと思ったのだが、鍵認証の設定がうまくいかず、さくらのスタンダードでもgitを操作出来るようにした。
gitをインストールする $HOME/local以下にgitを入れる。Subversionもこのディレクトリ以下に入っているので。
cd $HOME/local/scr wget http://git-core.googlecode.com/files/git-1.8.0.tar.gz tar -xzvf git-1.8.0.tar.gz cd git-1.8.0 ./configure -prefix=$HOME/local gmake gmake install インストールの確認 $HOME/.cshrcでパスの設定をいじる必要があるが、ちょっと時間がないのでとりあえずは
/home/smokingarage/local/bin/git --version 参考サイト さくらのレンタルサーバ（スタンダード）にGitをインストール – テクスト讃歌</description></item><item><title>Subversionコマンドメモ</title><link>https://tomonorimatsumura.github.io/blog/p434/</link><pubDate>Thu, 13 Dec 2012 13:07:47 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p434/</guid><description>http://den2sn.hatenablog.com/entry/20100326/1269589662
どうもうまく行かない。。。。
svnadmin dump /home/smokingarage/var/svn/mvc | svndumpfilter include --drop-empty-revs --renumber-revs /home/smokingarage/var/svn/mvc/neriphp/trunk &amp;amp;gt; neri.dmp svnadmin load /home/smokingarage/var/svn/neriphp &amp;amp;lt; /home/smokingarage/neri.dmp</description></item><item><title>Redmineを使ってプロジェクトを管理する</title><link>https://tomonorimatsumura.github.io/blog/p429/</link><pubDate>Tue, 11 Dec 2012 05:20:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p429/</guid><description>Redmineのインストールが一応終わって正常動作を始めたのでさっそくプロジェクト管理をやってみる。メモでもつけようかと思ったけど、Redmineを使い始めるための初期設定 | Redmine.JPと言う素晴らしいサイトがあるので、とりあえず分からないところだけメモを取るようにする。</description></item><item><title>Windwos7で公開鍵秘密鍵を発行する</title><link>https://tomonorimatsumura.github.io/blog/p419/</link><pubDate>Sun, 09 Dec 2012 11:08:13 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p419/</guid><description>PuTTYでssh2プロトコルを使ってssh接続Putytyだとフォーマットの変換などが入り面倒なのでTera Termを使う。</description></item><item><title>PEARに関する覚書き</title><link>https://tomonorimatsumura.github.io/blog/p413/</link><pubDate>Sun, 09 Dec 2012 09:00:28 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p413/</guid><description># PEARの設定を表示する pear config-show Configuration (channel pear.php.net): ===================================== Auto-discover new Channels auto_discover &amp;amp;lt;not set&amp;amp;gt; Default Channel default_channel pear.php.net HTTP Proxy Server Address http_proxy &amp;amp;lt;not set&amp;amp;gt; PEAR server [DEPRECATED] master_server pear.php.net Default Channel Mirror preferred_mirror pear.php.net Remote Configuration File remote_config &amp;amp;lt;not set&amp;amp;gt; PEAR executables directory bin_dir /usr/bin PEAR documentation directory doc_dir /usr/share/pear/doc PHP extension directory ext_dir /usr/lib64/php/modules PEAR directory php_dir /usr/share/pear PEAR Installer cache directory cache_dir /var/cache/php-pear PEAR configuration file cfg_dir /etc/pear directory PEAR data directory data_dir /usr/share/pear/data PEAR Installer download download_dir /tmp/pear/download directory PHP CLI/CGI binary php_bin /usr/bin/php php.</description></item><item><title>さくらのVPSにJenkins + PHPUnitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p402/</link><pubDate>Sun, 09 Dec 2012 03:58:08 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p402/</guid><description>さくらのVPSにJenkins環境を整えるメモ。
Xdebugをインストールする PECLからインストールする
pecl install xdebug PHPUnitをインストールする /usr/share/pear/PHPUnitにインストールされる。インストールコマンドは良く変更されるのでPHPUnitのHPを良く確認する。
pear config-set auto_discover 1 pear install pear.phpunit.de/PHPUnit phpDocumentorをインストールする phpDocumentorの公式サイトを参考にする。/usr/share/pear/PhpDocumentorにインストールされる
pear channel-discover pear.phpdoc.org pear install phpdoc/phpDocumentor-alpha その他のライブラリをインストールする pear channel-discover pear.phpmd.org pear channel-discover pear.symfony-project.com pear channel-discover pear.symfony.com pear channel-discover pecl.php.net pear channel-discover pear.pdepend.org pear channel-discover pear.netpirates.net pear install --alldeps phpunit/phpcpd pear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ 参考サイト CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</description></item><item><title>CentOS6に最新バージョンのPHPをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p395/</link><pubDate>Sat, 08 Dec 2012 17:22:48 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p395/</guid><description>Apacheをインストールする # apache用のSSLモジュールもインストールしておく yum -y install httpd httpd-devel mod_ssl PHPをインストールする 一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。Remiリポジトリが追加されていない場合は事前に追加しておくこと。2013年1月現在はremi-testではなく、remiでも入る。remi-testだとどのバージョンのPHPがインストールされるかは不明。。またPECLコマンドを使用する場合、PEARがインストールされている必要があるので必ず入れておく。
# 必要なライブラリを入れる yum -y install libxml2-devel # 5.3系を入れる yum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap # 5.4系にバージョンアップする sudo yum update php* --enablerepo=remi-test インストールされているかチェック
php -v PHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies php.confを編集する 『/etc/httpd/conf.d/php.conf』を開き編集する
AddType application/x-httpd-php .php AddType application/x-httpd-php-source .phps http.</description></item><item><title>EclipseでPHPをリモートデバッグする</title><link>https://tomonorimatsumura.github.io/blog/p393/</link><pubDate>Sat, 08 Dec 2012 06:55:09 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p393/</guid><description>Eclipse + PDT + xdebug によるリモートデバッグ環境構築メモ: かわいいは製造可
[
サーバー設定メモ/eclipseでPHPのリモートデバッグ環境をつくる – トヤヲ.ネット]2</description></item><item><title>EclipseでRemote System Explore(RSE)を使用する</title><link>https://tomonorimatsumura.github.io/blog/p383/</link><pubDate>Fri, 07 Dec 2012 16:28:58 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p383/</guid><description>考えてみたらリモートで開発が出きると楽かなと思い、Eclipseでその手の方法がないのか調べたらあった。
https://sites.google.com/site/chobimemo/eclipse/cdt-rdt
http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B
EclipseにRemote System Explore(RSE)をインストールする Eclipse→ヘルプ→新規ソフトウェアのインストール→作業対象(W):から**「すべての使用可能なサイト」**を選択 フィルター入力に**「Remote System Explore」**と入力 「Remote System Explorer End-User Runtime」と「Remote System Explorer User Actions」にチェックを入れインストールする 参考サイト Eclipse 3.6(Helios)にRSEプラグインを導入しSSHを利用する – Walbrix Blog</description></item><item><title>さくらのスタンダードでsftpを使う</title><link>https://tomonorimatsumura.github.io/blog/p378/</link><pubDate>Fri, 07 Dec 2012 15:10:19 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p378/</guid><description>EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因はこれらしい。。。
.cshrcの設定を変更する ~/.cshrcを開いて以下を書き加える
if ( $?SSH_CLIENT &amp;amp;amp;&amp;amp;amp; ! $?SSH_TTY ) then setenv LANG C unsetenv LC_ALL else if ( $?prompt ) then 接続テスト
sftp -v user@domain 参考サイト WinSCPでscpとsftpがうまくいかないときのsshサーバの~/.cshrcの設定</description></item><item><title>CentOS6で端末をショートカットキーで起動させる</title><link>https://tomonorimatsumura.github.io/blog/p374/</link><pubDate>Fri, 07 Dec 2012 11:25:32 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p374/</guid><description>システム→設定→キーボード・ショートカットからデスクトップ→端末の起動の順。
ディフォルトは無効になっていたのでshift+ctrl+Sに設定した。</description></item><item><title>Eclipseで新規ソフトウェアのインストールでフリーズした時の対処法</title><link>https://tomonorimatsumura.github.io/blog/p372/</link><pubDate>Fri, 07 Dec 2012 11:18:04 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p372/</guid><description>新規ソフトウェアをインストールする時、フィルター機能を使うと、Eclipseがフリーズしてしまうことがある。
Eclipseのキャッシュを削除する まず現在立ち上げているEclipseがある場合は終了する。それから
eclipse -clean # シンボリックリンクを作成していない場合 ~/アプリケーション/eclipse/eclipse -clean これでシステムのキャッシュがクリアされるようなので、再び新規ソフトウェアのインストール機能が使えるようになる。
参考サイト 戯言Vestige – weblog of vivi -:Eclipseで起動時にフリーズした場合の解消法</description></item><item><title>CentOS6.3でFileZillaを使用する</title><link>https://tomonorimatsumura.github.io/blog/p306/</link><pubDate>Tue, 04 Dec 2012 01:32:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p306/</guid><description>FileZillaをインストールする 最初はgFTPをRPMからインストールしようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumからFileZillaをインストールすることにした。
yum --enablerepo=epel list install filezilla #パッケージがあるか確認 yum --enablerepo=epel install filezilla #インストール インストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。
FileZillaを設定する 基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。ポートは設定しなくても、FileZilla側が接続時に勝手に見つけてくれる感じだ。
また一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。
参考サイト CentOS6.2 FileZillaのインストール | SlackHack</description></item><item><title>CentOS6でSubversionからgitに移行する</title><link>https://tomonorimatsumura.github.io/blog/p290/</link><pubDate>Sun, 02 Dec 2012 11:59:34 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p290/</guid><description>一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは入門git
git-svnが利用できるか確認する まずgitとSubversionを連携させるためのツールがインストールされているか確認する
git svn --version **Can’t locate SVN/Core.pm in @INC…**とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。
yum install subversion-perl 簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると
移行の準備は整った。
Subversionリポジトリをインポートする さくらのレンタルサーバにあるリポジトリからローカルにリビジョン番号を指定してインポートしてみる。
cd /root/ダウンロード git svn clone -r {start_rev}:{end_rev} svn+ssh://{username}@{domain}.sakura.ne.jp/home/{username}/var/svn/{repo} インポートされたリポジトリの確認 cd git-repository git log 操作方法が分からないときはhを入力するとHELPが表示される
SUMMARY OF LESS COMMANDS Commands marked with * may be preceded by a number, N. Notes in parentheses indicate the behavior if N is given. h H Display this help. q :q Q :Q ZZ Exit. --------------------------------------------------------------------------- MOVING e ^E j ^N CR * Forward one line (or N lines).</description></item><item><title>EclipseでSVNのデータと比較すると文字化け</title><link>https://tomonorimatsumura.github.io/blog/p224/</link><pubDate>Sat, 01 Dec 2012 16:03:12 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p224/</guid><description>http://d.hatena.ne.jp/enokitech/20090501/1241142788
まっつんのブログ
まっつんのブログ
設定→一般→コンテンツ・タイプ の「テキスト」から、エンコード タイプを変更したいファイルの拡張子 を選択し、下の「デフォルト エンコード 」欄にUTF-8 と記入。</description></item><item><title>CentOS6にJenkinsをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p201/</link><pubDate>Fri, 30 Nov 2012 15:59:15 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p201/</guid><description>Javaをインストールする Javaがインストールされていない場合はインストールする。
rpm -qa java-1.7.0-openjdk yum -y install java-1.7.0-openjdk Jenkinsをインストールする 基本的には公式ページを参考にする。
http://pkg.jenkins-ci.org/redhat/
sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key yum install jenkins Jenkinsを起動する Jenkinsはポート8080がディフォルト。
httpd -k start /sbin/service jenkins start ブラウザからhttp://localhost:8080/へアクセス。
JenkinsとApacheを連携させる まずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。
cd /etc/httpd/conf.d vi mod_proxy.conf # 書き込み内容 ProxyPass /jenkins http://localhost:8080/jenkins ProxyPassReverse /jenkins http://localhost:8080/jenkins ProxyRequests Off Jenkinsの設定ファイルを書き換える
vi /etc/sysconfig/jenkins JENKINS_ARGS=&amp;quot;--prefix=/jenkins&amp;quot; #最終行を書き換え ApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる
httpd -k stop httpd -k start /sbin/service jenkins start 参考サイト RedHat Linux RPM packages for Jenkins Apache のリバースプロキシの設定方法 | WebOS Goodies jenkinsとapacheの連携 – Dev3TechHack</description></item><item><title>WordPressの引越し</title><link>https://tomonorimatsumura.github.io/blog/p199/</link><pubDate>Fri, 30 Nov 2012 13:05:11 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p199/</guid><description>WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。
新しいWordPressをインストールする ターミナルからインストール先のサーバに接続。
cd /path/to/wordpressfolder git clone https://github.com/WordPress/WordPress.git mv WordPress blogfolder WordPressの初期設定を行う WordPressのトップディレクトリにアクセスすると必要情報を入力するように促される。この時移行元のWordPressと移行先のWordPressでユーザー名、パスワード、メールアドレスを同一にしておくこと。ユーザー名、パスワード、メールアドレス等の変更が必要な場合は、移設完了後に行う。
データベースを移行する 移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!
移設元サーバ側 # 一覧でWordPress用のデータベースを確認する SHOW DATABASES; # 登録されているユーザを確認する SELECT user, host FROM mysql.user; # WordPress用データベースのユーザーを確認する SHOW GRANTS for &amp;quot;user&amp;quot;@&amp;quot;host&amp;quot;; # MySQLデータをダンプする mysqldump -u {user} --opt --password={xxxxxxxx} --add-drop-table {wp_database} wp_commentmeta wp_comments wp_links wp_postmeta wp_posts wp_terms wp_term_relationships wp_term_taxonomy wp_usermeta wp_users &amp;amp;gt; /tmp/wp_database.sql # ベースとなるURLを書き換える sed &amp;quot;s|http://{移設元サーバWordPressインストールディレクトリ}|http://{移設先サーバWordPressインストールディレクトリ}|g&amp;quot; /tmp/wp_database.sql &amp;amp;gt; /tmp/wp_database.sql2 移設先サーバ側 mysql -uroot -p MariaDB [(none)]&amp;amp;gt; create database wp_database default character set utf8; MariaDB [(none)]&amp;amp;gt; grant all on wp_user.</description></item><item><title>capybara-webkitについて</title><link>https://tomonorimatsumura.github.io/blog/p195/</link><pubDate>Wed, 28 Nov 2012 14:27:48 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p195/</guid><description>http://blog.uu59.org/2012-09-19-capybara-webkit-crawler.html
PHPでウェブブラウザを作る
http://chobie.hatenablog.com/entry/2012/03/18/220103</description></item><item><title>CentOS6.3にRedmine環境を構築する</title><link>https://tomonorimatsumura.github.io/blog/p190/</link><pubDate>Mon, 26 Nov 2012 17:13:25 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p190/</guid><description>Tracがどうも使いにくいのでRedmineに移行してみる実験をする。
CentOSパッケージの追加インストール まずはEPELが導入されているか確かめる。導入されてなければインストールする。
yumで追加インストール
# 開発パッケージを導入。こちらは使わないものもいくらか入る yum groupinstall &amp;amp;quot;Development Tools&amp;amp;quot; # 通信関係を入れたりアップデートする yum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel # MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！ yum install mysql-server mysql-devel # Apacheをアップデートする（一応やっておく） yum install httpd httpd-devel # ImageMagickをインストールアップデートする（多分入ってない） yum install ImageMagick ImageMagick-devel SELinuxを無効にする エディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。
vi /etc/sysconfig/selinux SELINUX=disabled reboot iptablesでHTTPを許可する CentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。
vi /etc/sysconfig/iptables # Firewall configuration written by system-config-firewall # Manual customization of this file is not recommended. *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT -A INPUT -p icmp -j ACCEPT -A INPUT -i lo -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT -A INPUT -j REJECT --reject-with icmp-host-prohibited -A FORWARD -j REJECT --reject-with icmp-host-prohibited COMMIT # iptablesを再起動する service iptables restart Ruby 1.</description></item><item><title>CentOS6に最新バージョンのMySQLとphpMyAdminをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p187/</link><pubDate>Sun, 25 Nov 2012 17:04:21 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p187/</guid><description>yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。
MySQL5.5系をインストールする 5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。事前にRemiリポジトリが追加されているか確認しておく事。
# MySQLを停止する /etc/rc.d/init.d/mysqld stop # MySQLを削除する yum erase mysql mysql-server mysql-devel # 5.5系をインストール yum --enablerepo=remi install mysql mysql-server mysql-devel MySQLの初期設定を行う MySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある
/etc/rc.d/init.d/mysqld start mysql_secure_installation このあと適宜ユーザー名やパスワードを設定する
MySQLのバージョンを確認する 一応ここでバージョンを確認しておく
mysql --version mysql Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1 my.confを設定する こちらのサイトを参考にしてみた。**『/etc/my.cnf』**を以下のように修正する
[mysqld] datadir=/var/lib/mysql socket=/var/lib/mysql/mysql.sock user=mysql # Disabling symbolic-links is recommended to prevent assorted security risks symbolic-links=0 character-set-server=utf8 [mysqld_safe] log-error=/var/log/mysqld.log pid-file=/var/run/mysqld/mysqld.pid [mysql] default-character-set=utf8 phpMyAdminをインストールする 基本的にはphpMyAdminの公式サイトからzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminはMySQLの初期設定が終わっていないと立ち上がらないので注意。
またダウンロードしたアーカイブをscpでサーバにアップする場合は
cd /path/to/phpMyAdmin-3.</description></item><item><title>CentOS6にPECL::ssh2をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p183/</link><pubDate>Sun, 25 Nov 2012 14:10:02 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p183/</guid><description>PECL::ssh2をインストールする インストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。
yum install php-devel php-pear libssh2 libssh2-devel pecl install ssh2 channel://pecl.php.net/ssh2-0.12 php.iniを開き、extension=ssh2.soを書き加える
PECL::ssh2を使ったPHPのサンプルコード &amp;amp;lt;?php $connection = ssh2_connect(&amp;quot;ssh.host&amp;quot;, 22); if (ssh2_auth_password($connection, &amp;quot;user&amp;quot;, &amp;quot;pass&amp;quot;)) { echo &amp;quot;Authentication Successful!\n&amp;quot;; } else { die(&amp;quot;Authentication Failed...&amp;quot;); } ssh2_scp_send($connection, &amp;quot;/remote/file&amp;quot;, &amp;quot;/local/file&amp;quot;, 0644); ?&amp;amp;gt; ファイル名はローカルとリモートで必ずフルパスで指定すること！
参考サイト Installing SSH2 Extension for PHP on CentOS 5 | Dynamic Hosting Blog</description></item><item><title>Windows XPの再インストールメモ</title><link>https://tomonorimatsumura.github.io/blog/p174/</link><pubDate>Sun, 18 Nov 2012 12:47:03 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p174/</guid><description>デスクトップにWindows XP環境を構築するときのメモ
データのバックアップ Subversionやgit等も使い、忘れずに行う。
LANドライバをインストール P5GC-MX/1333 CD-ROMから「Atheros L2 Ethernet Driver」をインストールする。これでインターネットに接続できるようになる。
サービスパックを適用する マクロソフトのサイトからWindows XP SP2をダウンロード、インストール SP3をダウンロード、インストール SP3はSP2が適応されてないとインストール出来ないので注意&amp;lt;/ol&amp;gt; オーディオドライバをインストール P5GC-MX/1333 CD-ROMから「Realteck Audio Driver」をインストールする
グラフィックカードドライバをインストール Autorun DriverのラベルのCDからインストールする
USBドライバをインストールする 「D:\Drivers\Chipset\Inf」のフォルダ内のsetup.exeを実行する。それ以外は宣伝用のソフトなのでいじらない。
後は適宜Lhaz等をインストールする。</description></item><item><title>CentOS6にgitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p165/</link><pubDate>Fri, 16 Nov 2012 15:45:38 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p165/</guid><description>gitを使う必要が出てきたのでインストール。
必要環境の確認 まずgitのサポートページで必要ライブラリを確認。どうやらcURLやopenSSLなどが必要らしい
yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gitをインストール gitのリポジトリサイトから最新版を入手してインストール
cd /usr/local/src wget http://git-core.googlecode.com/files/git-1.8.0.tar.gz tar -xzvf git-1.8.0.tar.gz cd git-1.8.0 ./configure --prefix=/usr/local/ make make install **Can’t locate ExtUtils/MakeMaker.pm in @INC…**って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール。通常は入って無いと思われるので最初に入れておいた方が無難。
yum install perl-ExtUtils-MakeMaker gitの確認 バージョンを確認してみる
git --version 参考サイト Git – Gitのインストール Git – Book</description></item><item><title>CentOS6にEclipse + Pleiades + PDTをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p157/</link><pubDate>Thu, 15 Nov 2012 06:33:56 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p157/</guid><description>Eclipseをインストールする http://www.eclipse.org/downloads/より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード 「~/ダウンロード」にダウンロードされるのでそのフォルダで解凍する Eclipse配置用ディレクトリを作成する。今回は「~/アプリケーション」以下にEclipseを配置する。 mvコマンドで「~/アプリケーション」へ移動させる```:bash cd ~/ダウンロード tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz mv eclipse ~/アプリケーション ### Pleiadesをインストールする pleiadesのZIPアーカイブは、フォルダなしで展開されるので、事前に展開するフォルダを作成しておく。 ```:bash mkdir ~/ダウンロード/pleiades unzip pleiades.zip -d ~/ダウンロード/pleiades/ cp -a ~/ダウンロード/pleiades/* ~/アプリケーション/eclipse/ 『**~/アプリケーション/eclipse/eclipse.ini**』の最終行に設定を記述する ```:text -javaagent:/home/{user}/アプリケーション/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar
*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。 ### シンボリックリンクを作成する デスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す ```:bash cd ~/デスクトップ/ ln -s ~/アプリケーション/eclipse/eclipse eclipse ln -s ~/アプリケーション/eclipse/eclipse /usr/local/bin これでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから**「eclipse」**と入力すればEclipseが立ち上がるようになる。 ### PDT(PHP Developing Tools)をインストールする &amp;lt;http://wiki.eclipse.org/PDT/Installation_3.1.x&amp;gt; 基本的には上記URLの通りに入れる ### 参考サイト * [Mac版 Eclipse4.2の日本語化手順 &amp;amp;#8211; いっぽんの猟銃のむこうに (DAIZOじいさんとGun)][1] * [PDT/Installation 3.</description></item><item><title>CentOSでシステム情報を表示する</title><link>https://tomonorimatsumura.github.io/blog/p143/</link><pubDate>Mon, 12 Nov 2012 14:23:27 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p143/</guid><description>uname &amp;lt;td&amp;gt; 説明 &amp;lt;/td&amp;gt; &amp;lt;th&amp;gt; 全てのシステム情報を表示 &amp;lt;/th&amp;gt; &amp;lt;th&amp;gt; ハードウェアタイプを表示 &amp;lt;/th&amp;gt; &amp;lt;th&amp;gt; ネットワーク上のホスト名を表示 &amp;lt;/th&amp;gt; &amp;lt;th&amp;gt; OSのリリース番号を表示 &amp;lt;/th&amp;gt; &amp;lt;th&amp;gt; システム名を表示（オプション無しと同じ） &amp;lt;/th&amp;gt; &amp;lt;th&amp;gt; プロセッサ名を表示 &amp;lt;/th&amp;gt; &amp;lt;th&amp;gt; ハードウェアプラットフォームか「Unkown」を表示 &amp;lt;/th&amp;gt; &amp;lt;th&amp;gt; OSを表示 &amp;lt;/th&amp;gt;</description></item><item><title>WordPressで改行する</title><link>https://tomonorimatsumura.github.io/blog/p140/</link><pubDate>Mon, 12 Nov 2012 12:06:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p140/</guid><description>「＆nbsp;（※＆は小文字）」を使うSEO的に良くないのでスタイルシートで調整する。</description></item><item><title>Windows7 + XAMPPでPerlを使う</title><link>https://tomonorimatsumura.github.io/blog/p118/</link><pubDate>Mon, 12 Nov 2012 11:31:50 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p118/</guid><description>EclipseにEPIC – Eclipse Perl Integrationをインストールする 「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」 EPICと入力しフィルタをかける 作業対象から「EPIC – Eclipse Perl Integration – http://e-p-i-c.sf.net/updates」を選択 チェックボックスにチェックを入れ次へをクリック 環境変数を通す 「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック 変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\www\php-5.2.9-Win32」など実行ファイルがある階層を入力。 変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。 Perlスクリプトを作成する ファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。
#!C:\xampp\perl\bin\perl.exe print &amp;quot;Content-type: text/html\n\n&amp;quot;; print &amp;quot;Hello World.&amp;quot;;</description></item><item><title>Linuxでの文字列の検索</title><link>https://tomonorimatsumura.github.io/blog/p116/</link><pubDate>Sun, 11 Nov 2012 18:17:03 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p116/</guid><description>cd /path/to/target/dir find . | xargs grep &amp;quot;seach&amp;quot;</description></item><item><title>CentOS6にGIMPをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p97/</link><pubDate>Fri, 09 Nov 2012 12:14:31 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p97/</guid><description>そろそろGIMPを覚えようと思いインストール。ちなみにGIMPとは「The GNU Image Manipulation Program」の略。
GIMPをインストールする yum install gimp gimp -vでバージョンが確認出来る。
[root@localhost ~]# gimp -v GNU Image Manipulation Program ver.2.6.9&amp;amp;lt;/samp&amp;amp;gt;&amp;amp;lt;/samp&amp;amp;gt;GEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2) GLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5) GTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9) Pango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1) Fontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0) 出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。
しかしPhotoshopと使い勝手が違うので若干操作しにくい。。。</description></item><item><title>CentOSにFastCGIをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p43/</link><pubDate>Sun, 28 Oct 2012 10:54:31 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p43/</guid><description>どうやらRubyをCentOSで動かすにはFastCGIと言って、動作をキャッシュするような仕組みをインストール刷る必要があるらしい。
FastCGIをインストールする cd /usr/local/src/ wget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz tar xzfz mod_fastcgi-2.4.6.tar.gz cd mod_fastcgi-2.4.6 cp Makefile.AP2 Makefile make top_dir=/usr/lib/httpd make top_dir=/usr/lib/httpd install makeコマンドで認識刷るファイルはMakefileと言う名前のみなので、mod_fastcig-2.4.6フォルダ内のMakefile.AP2をMakefileにコピーして変更する。
参考サイト FastCGIのインストールと設定</description></item><item><title>Apacheでmod_status.soを有効にする</title><link>https://tomonorimatsumura.github.io/blog/p31/</link><pubDate>Sun, 28 Oct 2012 04:35:33 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p31/</guid><description>インストールしたmod_fastcgiが動いているかどうか確認しようとして</description></item><item><title>CentOS6でApacheの設定</title><link>https://tomonorimatsumura.github.io/blog/p27/</link><pubDate>Sat, 27 Oct 2012 12:18:42 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p27/</guid><description>httpd: Could not reliably determine the server’s fully qualified domain name, using 127.0.0.1 for ServerName
エラーに対する処理
http://blog.dacelo.info/apache/entry-713.html
http://d.hatena.ne.jp/geek_it/20090824/1251131134
mod_fasitcgiのインストール手順
Makefileのディレクトリの設定とかいじる必要がある。
http://blog.riywo.com/2011/01/08/170354
http://d.hatena.ne.jp/hedachi/20090722/1248257509</description></item><item><title>CentOS6.3にRuby1.9をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p13/</link><pubDate>Thu, 25 Oct 2012 10:37:11 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p13/</guid><description>そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。
このサイトを参考にRPM（Ruby Package Manager）を使用する方法でインストールする。
http://morizyun.github.com/blog/rvm-install-centos-ruby-rails/
libyamlのインストール Rubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。
まずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように**./configure –prefix=/usr/local**を指定。
cd /usr/local/src wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz tar zxvf yaml-0.1.4.tar.gz cd yaml-0.1.4 ./configure --prefix=/usr/local make sudo make install rubyのインストール Rubyをインストール。最新版はここから確認出来る。
cd /usr/local/src wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz tar zxvf ruby-1.9.3-p392.tar.gz cd ruby-1.9.3-p392 ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib make sudo make install``` #### rubygemsのインストール Ruby1.9より標準で組み込まれているのでそれより以前のバージョンを使うときのみ手動でインストールする。 #### Railsのインストール ```:bash gem install rails``` 結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。 #### Passenger のインストール RailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。 ```:bash gem install passenger passenger-install-apache2-module``` このプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル ```:bash cd /usr/local/src wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz tar zxvf ruby-1.</description></item><item><title>さくらのVPSでSSHの初期設定を行う</title><link>https://tomonorimatsumura.github.io/blog/p5/</link><pubDate>Thu, 04 Oct 2012 08:51:41 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p5/</guid><description>秘密鍵および公開鍵の作成 ローカルのCentOSから
ssh-keygen -t rsa これで、/root/.sshに、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。
さくらVPSに公開キーをアップ VPSコントロールパネルを呼び出しリモートコンソールを機動し
https://secure.sakura.ad.jp/vpscontrol/main/
touch ~/.ssh/authorized_keys chmod 600 ~/.ssh/authorized_keys ローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする。
ローカルもしくはサーバにknown_hostsがある場合は削除しておく。</description></item><item><title>Windows XP sp3でのEclipse + PHPUnitに関する覚書</title><link>https://tomonorimatsumura.github.io/blog/p335/</link><pubDate>Sun, 08 Jul 2012 10:29:23 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p335/</guid><description>ショートカットキーの設定 -Confort Mouse 4500のドライバをインストール
-Confort Mouse 4500のプログラムの設定にEclipseを追加
-Eclipseでショートカットキーを設定
-「このファイルに関するテストの実行」にショートカットキーを割り当てる
php.iniの書き換え php.iniをしっかりと書き換える必要がある
「PHP統合開発環境PDT2」などを参考にする
MakeGoodのインストール Eclipse→ヘルプ→新規ソフトウェアのインストール→作業対象(W):へ「http://eclipse.piece-framework.com/」と入力 「MakeGood」にチェックを入れインストールする パスを設定する http://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f1
プロジェクトにもパスを設定する
http://d.hatena.ne.jp/Kenji_s/20110722/1311314734
ショートカットキーの設定 -Confort Mouse 4500のドライバをインストール
-Confort Mouse 4500のプログラムの設定にEclipseを追加
-Eclipseでショートカットキーを設定
-このファイルに関するテストの実行にショートカットキーを割り当てる
参考サイト PHPUnitによる単体テスト環境構築(Eclipse) – TATSUNET EclipsePDT+PHPUnit+XDebug+MakeGoodでphpのTDD – あたご型護衛艦日記 Eclipse/PDT から PHPUnit/CIUnit のテストを自動実行する – A Day in Serenity @ kenjis</description></item><item><title>さくらのレンタルサーバーにTracをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p235/</link><pubDate>Tue, 03 Jul 2012 08:59:07 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p235/</guid><description>えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。
今回入れたのはPython2.7.3
インストール準備 まずはフォルダ構成を確認。
/home/[username]
□/local
-/lib
-/src
□/tmp
□/var
-/svn/repos
-/trac/project
□/www
使ったツールは
-Windows XP
-Poderosa
-FFFTP(フォルダやファイルの確認用)
vartualenvのインストール こちらのサイトを参考にvartualenvのファイルを置く場所をさくらサーバーに作る。
mkdir -p ~/local/src pipを使えるようにするために、varualenvをインストールする。
このページから最新版をダウンロードしてデスクトップにでも置く。これをFFFTPで「~/local/src」フォルダにアップする。
そして
cd ~/local/src tar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar cd ~/local python /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7 この時点で~/local/bin以下にpythonやpipが作成される。
Subversionのインストール こちらのサイトを参考にインストール
cd ~/local/src wget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz wget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz tar zxvf subversion-1.6.16.tar.gz tar zxvf subversion-deps-1.6.16.tar.gz cd subversion-1.6.16 ./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local make make install make swig-py make install-swig-py makeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する
ln -s ~/local/include/python2.7 ~/local/include/python ln -s ~/local/lib/python2.</description></item><item><title>スマホサイトに関する覚書き DOCTYPE宣言</title><link>https://tomonorimatsumura.github.io/blog/p232/</link><pubDate>Sat, 26 Nov 2011 12:09:48 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p232/</guid><description>スマホサイトを作るにあたり、覚書きみたいなもの。
[html]
[/html]
ヤフーのiPhone版サイトがこんな感じなので、これに順ずるものにしておくのが無難か？</description></item><item><title>XAMPPにPerl::Criticをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p229/</link><pubDate>Mon, 14 Nov 2011 11:43:31 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p229/</guid><description>前投稿からの続き
【ＸＡＭＰＰにPerltidyをインストールする】
http://ameblo.jp/smackmybitchup/entry-11078527558.html
環境
Windows XP ver3
XAMPP 1.7.3
Perltidyをインストールできたので勢いに任せてPerl::Criticもインストール
http://perlcritic.com/
まず、普通に
C:\xampp\perl\binから
【cpan Perl::Critic】
エラー。どうやらPPIと言うライブラリが必要らしい。*1
そこで
【cpan force PPI】
で、結局Perl::Criticの通常インストールもテストエラーに終わるので
【cpan force Perl::Critic】
*1
【 たまには呪文をとなえてみるか：仕事版 / おじいさんなので、Perl::Critic入れてみた】
http://cast-a-spell.at.webry.info/200806/article_1.html</description></item><item><title>ＸＡＭＰＰ ver 1.7.3にPHPUnitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p220/</link><pubDate>Sun, 06 Nov 2011 06:28:03 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p220/</guid><description>http://sinsengumi.net/blog/2010/09/xampp-1-7-3%E3%81%ABphpunit-3-5%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</description></item><item><title>ＸＡＭＰＰにPerltidyをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p226/</link><pubDate>Wed, 02 Nov 2011 09:38:17 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p226/</guid><description>Perlを始めるにあたり、どうやらPerltidyなるものが必要らしいと言う事でインストールしてみた。
http://perltidy.sourceforge.net/
環境は
Win XP
Xampp 1.7.3
いきなり『cpan Perl::Tidy』を入力すると、YAMLが入ってないよって怒られるので、まずはYAMLをインストールする。
XAMPPを起動 XAMPPのshellを起動 『cd　C:\xampp\perl\bin』を入力 『ｃpan YAML』を入力　→　『C:\xampp\perl\site\lib』にインストールされる 『cpan Perl::Tidy』を入力　→　『C:\xampp\perl\bin』にインストールされる どうやら
C:\xampp\perl\bin.cpan\build
内に、Perl::Tidyのインストールに失敗した解凍済みファイルが残っていると失敗する。よってYAMLが入ってないのにcpanコマンド叩いた人は、中のファイルを削除しておくとGood!</description></item><item><title>作業メモ</title><link>https://tomonorimatsumura.github.io/blog/p238/</link><pubDate>Fri, 28 Oct 2011 15:32:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p238/</guid><description>tableHandlerAbstract
データベース接続クラスを切り分ける
ModelAbstract
setCache →　saveCacheか他の名前　creatCache()
PathFramework
try – catch　にする</description></item></channel></rss>