<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>さくらのスタンダード on Mainroad</title><link>https://tomonorimatsumura.github.io/blog/categories/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AE%E3%82%B9%E3%82%BF%E3%83%B3%E3%83%80%E3%83%BC%E3%83%89/</link><description>Recent content in さくらのスタンダード on Mainroad</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 31 Mar 2013 11:49:29 +0000</lastBuildDate><atom:link href="https://tomonorimatsumura.github.io/blog/categories/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AE%E3%82%B9%E3%82%BF%E3%83%B3%E3%83%80%E3%83%BC%E3%83%89/index.xml" rel="self" type="application/rss+xml"/><item><title>さくらのスタンダードにRedmineをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p797/</link><pubDate>Sun, 31 Mar 2013 11:49:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p797/</guid><description>実験的にやってみる。
libyamlをインストールする 後々色々とエラーが出るので必ずインストールする！
cd ~/local/src wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz tar zxvf yaml-0.1.4.tar.gz cd yaml-0.1.4 ./configure --prefix=~/local make make install Rubyをインストールする Rubyは2.0をインストールする
cd $HOME/local/src wget http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz tar zxvf ruby-2.0.0-p353.tar.gz cd ruby-2.0.0-p353 ./configure --disable-install-doc --prefix=$HOME/local make make install .cshrcを変更する 新たにインストールしたRubyにパスを通す
vi $HOME/.cshrc # set pathに$HOME/local/binを追加 # .cshrcを反映させる source $HOME/.cshrc # Rubyのパスを調べる which ruby Redmineをインストールする cd $HOME/www wget http://www.redmine.org/releases/redmine-2.4.2.tar.gz tar zxvf redmine-2.4.2.tar.gz mv redmine-2.4.2 redmine gem update --system # gemをアップデートする。これを行わないとbundlerからgemパッケージがインストール出来ない gem install bundler --no-rdoc --no-ri cd /redmine-install-dir bundle install --without development test bundle exec rake generate_secret_token rake db:migrate RAILS_ENV=production Redmineの動作確認をする ruby /redmine-install-dir/script/rails server webrick -e production http://{yourhost}:3000に接続し、Redmine画面が表示されたら正常。</description></item><item><title>さくらのスタンダードにgitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p444/</link><pubDate>Mon, 17 Dec 2012 09:12:47 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p444/</guid><description>ノートPCからさくらのVPSにSSHで繋ごうと思ったのだが、鍵認証の設定がうまくいかず、さくらのスタンダードでもgitを操作出来るようにした。
gitをインストールする $HOME/local以下にgitを入れる。Subversionもこのディレクトリ以下に入っているので。
cd $HOME/local/scr wget http://git-core.googlecode.com/files/git-1.8.0.tar.gz tar -xzvf git-1.8.0.tar.gz cd git-1.8.0 ./configure -prefix=$HOME/local gmake gmake install インストールの確認 $HOME/.cshrcでパスの設定をいじる必要があるが、ちょっと時間がないのでとりあえずは
/home/smokingarage/local/bin/git --version 参考サイト さくらのレンタルサーバ（スタンダード）にGitをインストール – テクスト讃歌</description></item><item><title>さくらのスタンダードでsftpを使う</title><link>https://tomonorimatsumura.github.io/blog/p378/</link><pubDate>Fri, 07 Dec 2012 15:10:19 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p378/</guid><description>EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因はこれらしい。。。
.cshrcの設定を変更する ~/.cshrcを開いて以下を書き加える
if ( $?SSH_CLIENT &amp;amp;amp;&amp;amp;amp; ! $?SSH_TTY ) then setenv LANG C unsetenv LC_ALL else if ( $?prompt ) then 接続テスト
sftp -v user@domain 参考サイト WinSCPでscpとsftpがうまくいかないときのsshサーバの~/.cshrcの設定</description></item></channel></rss>