<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Redmine on Mainroad</title><link>https://tomonorimatsumura.github.io/blog/categories/redmine/</link><description>Recent content in Redmine on Mainroad</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Thu, 14 Sep 2017 12:30:57 +0000</lastBuildDate><atom:link href="https://tomonorimatsumura.github.io/blog/categories/redmine/index.xml" rel="self" type="application/rss+xml"/><item><title>CentOS7でRedmineをバックアップ、リストアする</title><link>https://tomonorimatsumura.github.io/blog/p1312/</link><pubDate>Thu, 14 Sep 2017 12:30:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1312/</guid><description>Redmineをバックアップをする # 作業用ディレクトリへcdする cd /tmp # Gitリポジトリをアーカイブする tar cfv git.tar /var/git/ # Redmineメディアファイルをアーカイブする tar cfv files.tar /var/lib/redmine/files/ # PostgeSQLデータベースをダンプする pg_dump -h localhost -U redmine redmine &amp;amp;gt; redmine.psql # アーカイブデータ、データベースダンプデータをアーカイブする tar cfv redmine.bk.tar * # アーカイブスデータを公開ディレクトリへ移動させる mv redmine.bk.tar /var/www/html/ Redmineをリストアする # 作業用ディレクトリへcdする cd /tmp # Redmineバックアップアーカイブスデータを取得する curl -O http://example.com/redmine.bk.tar # アーカイブスデータを解凍する tar xfv redmine.bk.tar # Gitリポジトリを配置する cd /tmp/redmine mv git /var/ # メディアファイルを配置する cd /tmp/redmine/ mv files/ /var/lib/redmine/ # PostgreSQLデータベースをリストアする systemctl stop postgresql.</description></item><item><title>RedmineとGitの連携についてのメモ</title><link>https://tomonorimatsumura.github.io/blog/p985/</link><pubDate>Thu, 28 May 2015 13:06:32 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p985/</guid><description> コミットメッセージにチケット番号を付与する時は半角スペースで区切る。 コミットメッセージに作業時間を記録することが出来る EclipseでGitのコミットの取り消しが出来る場合がある。 参考サイト バージョン管理システムとの連携 — Redmine.JP Redmine 1.1 新機能紹介: コミットメッセージによる作業時間の記録 | Redmine.JP Blog</description></item><item><title>Redmine2.4をCentOS6.4にインストールする</title><link>https://tomonorimatsumura.github.io/blog/p914/</link><pubDate>Wed, 01 Jan 2014 17:42:18 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p914/</guid><description>Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。
SELinuxを無効にする vi /etc/sysconfig/selinux SELINUX=disabled reboot iptablesでHTTPを許可する vi /etc/sysconfig/iptables # Firewall configuration written by system-config-firewall # Manual customization of this file is not recommended. *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT -A INPUT -p icmp -j ACCEPT -A INPUT -i lo -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT # Redmineの動作確認用に3000番を開けておく -A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT -A INPUT -j REJECT --reject-with icmp-host-prohibited -A FORWARD -j REJECT --reject-with icmp-host-prohibited COMMIT # iptablesを再起動する service iptables restart CentOSパッケージの追加インストール yumで追加インストール</description></item><item><title>さくらのスタンダードにRedmineをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p797/</link><pubDate>Sun, 31 Mar 2013 11:49:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p797/</guid><description>実験的にやってみる。
libyamlをインストールする 後々色々とエラーが出るので必ずインストールする！
cd ~/local/src wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz tar zxvf yaml-0.1.4.tar.gz cd yaml-0.1.4 ./configure --prefix=~/local make make install Rubyをインストールする Rubyは2.0をインストールする
cd $HOME/local/src wget http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz tar zxvf ruby-2.0.0-p353.tar.gz cd ruby-2.0.0-p353 ./configure --disable-install-doc --prefix=$HOME/local make make install .cshrcを変更する 新たにインストールしたRubyにパスを通す
vi $HOME/.cshrc # set pathに$HOME/local/binを追加 # .cshrcを反映させる source $HOME/.cshrc # Rubyのパスを調べる which ruby Redmineをインストールする cd $HOME/www wget http://www.redmine.org/releases/redmine-2.4.2.tar.gz tar zxvf redmine-2.4.2.tar.gz mv redmine-2.4.2 redmine gem update --system # gemをアップデートする。これを行わないとbundlerからgemパッケージがインストール出来ない gem install bundler --no-rdoc --no-ri cd /redmine-install-dir bundle install --without development test bundle exec rake generate_secret_token rake db:migrate RAILS_ENV=production Redmineの動作確認をする ruby /redmine-install-dir/script/rails server webrick -e production http://{yourhost}:3000に接続し、Redmine画面が表示されたら正常。</description></item><item><title>Redmineにテーマをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p778/</link><pubDate>Mon, 18 Mar 2013 12:20:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p778/</guid><description>現在のところ使い勝手が良いfarend fancyをインストールする。
https://github.com/farend/redmine_theme_farend_fancyへアクセス→Git-Read-OnlyのURLを参照し、「/redmine-install-dir/public/themes/」にgit cloneコマンドで配置する。</description></item><item><title>Redmineのパフォーマンスチューニング</title><link>https://tomonorimatsumura.github.io/blog/p667/</link><pubDate>Sat, 09 Feb 2013 10:59:14 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p667/</guid><description>Redmineが若干遅いのでチューニングを試みる。
avahi-daemonを停止する CentOSはディフォルトでavahi-daemonが起動するようになっているので無効にする。
# 起動設定を確認 chkconfig --list | grep avahi- avahi-daemon 0:off 1:off 2:off 3:on 4:on 5:on 6:off # 自動で起動しないようにする chkconfig avahi-daemon off # 起動設定を確認 chkconfig --list | grep avahi- avahi-daemon 0:off 1:off 2:off 3:off 4:off 5:off 6:off reboot 参考サイト Windows7でRedmineが異様に遅い – 3100 Fedora/RHEL/CentOS等でのavahi-daemonの停止 – 情報技術の四方山話</description></item><item><title>Redmineでチケットが新規作成出来ない</title><link>https://tomonorimatsumura.github.io/blog/p605/</link><pubDate>Sun, 20 Jan 2013 14:51:08 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p605/</guid><description>Redmineでチケットを新たに作成しようと思ったらInternal Errorに遭遇した。調べてみるとファイルを添付したチケットを作成するときにInternal Errorがでるようだ。どうやら権限の設定がうまくいって無かったらしい。
Redmineインストールディレクトリの権限を変更する 標準だとrootになっているので、これをApacheに変更する
chown -R apache:apache /var/lib/redmine またPassengerの設定によっては「www-data」に変更する必要があるみたいだ。
参考サイト Apache上でRuby on Railsアプリケーションを動かす／Passenger(mod_rails for Apache)の利用 | Redmine.JP Uploading files/documents fails – Redmine Bug#575462: redmine + apache2 shows permission error to access /etc/redmine/default/session.yml, help, FAQ, forums, question, answer, advice, opinion and howto for Windows, Linux and Mac OS X</description></item><item><title>Redmineのバージョンを確認する</title><link>https://tomonorimatsumura.github.io/blog/p596/</link><pubDate>Sun, 20 Jan 2013 07:52:40 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p596/</guid><description>Redmineのバージョンを確認するには「ソースから確認する」方法と「管理画面から確認する」方法と2種類ある。
Redmineのバージョンをソースから確認する 「redmine_dir/lib/redmine/version.rb」にバージョンが記述されているファイルがある。
cd redmine_dir/lib/redmine/ cat version.rb require &amp;quot;rexml/document&amp;quot; module Redmine module VERSION #:nodoc: MAJOR = 2 MINOR = 2 TINY = 1 # Branch values: # * official release: nil # * stable branch: stable # * trunk: devel BRANCH = &amp;quot;stable&amp;quot; Redmineのバージョンを管理画面から確認する 管理者権限を持ったユーザーで「管理」→「情報」画面を開く。
参考サイト 使用中のRedmineのバージョンを確認する | Redmine.JP</description></item><item><title>RedmineのMy AccountでInternal Errorが出る</title><link>https://tomonorimatsumura.github.io/blog/p568/</link><pubDate>Tue, 08 Jan 2013 10:34:00 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p568/</guid><description>Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらInternal Errorが出た。
RedmineのGemFileを使用する 結局のところ、/path/to/redmineのGemFileに記述してあるライブラリ通りの設定でないとRedmineが正しく機動しない事が判明。RedmineのGemFile通りのライブラリを必ずインストールする事！
参考リンク http://assimane.blog.so-net.ne.jp/2011-01-03
http://www10.atwiki.jp/bambooflow/pages/273.html
http://blog.redmine.jp/articles/redmine-1_2-installation_centos/
http://blog.ruby.iijgio.com/2012/12/27/redmine220</description></item><item><title>CentOS6.3でApache上でRedmineを実行する</title><link>https://tomonorimatsumura.github.io/blog/p459/</link><pubDate>Mon, 31 Dec 2012 05:24:12 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p459/</guid><description>こちらのサイトを参考にした。
Passengerのインストール Phusion Passengerをインストールする
gem install passenger --no-rdoc --no-ri PassengerのApache用モジュールのインストールと設定 service httpd start # Apacheを機動させておく passenger-install-apache2-module 『/etc/httpd/conf.d/passenger.conf』を作成し「passenger-install-apache2-module –snippet」で表示される設定を書き込む。
# Passengerの基本設定。 # passenger-install-apache2-module --snippet を実行して表示される設定を使用。 # 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。 # LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17 PassengerRuby /usr/local/bin/ruby Apacheの起動および自動起動の設定 /etc/init.d/httpd start chkconfig httpd on Apache上のPassengerでRedmineを実行するための設定 サブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。
ln -s /var/lib/redmine/public /var/www/html/redmine 『/etc/httpd/conf.d/passenger.conf』に以下の設定を追加。
RackBaseURI /redmine またRedmineインストールディレクトリの権限の設定も行う事。
chown -R apache:apache /var/lib/redmine 設定後、Apacheを再起動。
/etc/init.d/httpd configtest /etc/init.d/httpd graceful 参考サイト Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</description></item><item><title>Redmineを使ってプロジェクトを管理する</title><link>https://tomonorimatsumura.github.io/blog/p429/</link><pubDate>Tue, 11 Dec 2012 05:20:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p429/</guid><description>Redmineのインストールが一応終わって正常動作を始めたのでさっそくプロジェクト管理をやってみる。メモでもつけようかと思ったけど、Redmineを使い始めるための初期設定 | Redmine.JPと言う素晴らしいサイトがあるので、とりあえず分からないところだけメモを取るようにする。</description></item><item><title>CentOS6.3にRedmine環境を構築する</title><link>https://tomonorimatsumura.github.io/blog/p190/</link><pubDate>Mon, 26 Nov 2012 17:13:25 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p190/</guid><description>Tracがどうも使いにくいのでRedmineに移行してみる実験をする。
CentOSパッケージの追加インストール まずはEPELが導入されているか確かめる。導入されてなければインストールする。
yumで追加インストール
# 開発パッケージを導入。こちらは使わないものもいくらか入る yum groupinstall &amp;amp;quot;Development Tools&amp;amp;quot; # 通信関係を入れたりアップデートする yum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel # MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！ yum install mysql-server mysql-devel # Apacheをアップデートする（一応やっておく） yum install httpd httpd-devel # ImageMagickをインストールアップデートする（多分入ってない） yum install ImageMagick ImageMagick-devel SELinuxを無効にする エディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。
vi /etc/sysconfig/selinux SELINUX=disabled reboot iptablesでHTTPを許可する CentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。
vi /etc/sysconfig/iptables # Firewall configuration written by system-config-firewall # Manual customization of this file is not recommended. *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT -A INPUT -p icmp -j ACCEPT -A INPUT -i lo -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT -A INPUT -j REJECT --reject-with icmp-host-prohibited -A FORWARD -j REJECT --reject-with icmp-host-prohibited COMMIT # iptablesを再起動する service iptables restart Ruby 1.</description></item></channel></rss>