<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CentOS7 on Mainroad</title><link>https://tomonorimatsumura.github.io/blog/categories/centos7/</link><description>Recent content in CentOS7 on Mainroad</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 14 Sep 2017 13:29:22 +0000</lastBuildDate><atom:link href="https://tomonorimatsumura.github.io/blog/categories/centos7/index.xml" rel="self" type="application/rss+xml"/><item><title>CentOS7でJenkinsをバックアップ、リストアする</title><link>https://tomonorimatsumura.github.io/blog/p1320/</link><pubDate>Thu, 14 Sep 2017 13:29:22 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1320/</guid><description>Jenkinsバックアップデータを作成する # Jenkins稼働サーバで systemctl stop jenkins git clone https://github.com/sue445/jenkins-backup-script.git bash jenkins-backup.sh /path/to/jenkins archives.tar.gz Jenkinsをリストアする # Jenkinsを停止する systemctl stop jenkins # 稼働中のJenkinsのデータを消去する rm -rf /var/cache/jenkins/* rm -rf /path/to/jenkins/jobs/ rm -rf /path/to/jenkins/plugins/ rm -rf /path/to/jenkins/users/ rm -rf /path/to/jenkins/secrets/ # バックアップデータをリストアする tar xfvz archives.tar.gz cd jenkins-backup/ mv -f * /path/to/jenkins chown -R jenkins:jenkins /path/to/jenkins # Jenkinsを再起動する systemctl start jenkins 参考サイト バックアップ Jenkinsのバックアップ方法 – Qiita GitHub – sue445/jenkins-backup-script: archive jenkins setting and plugins リストア cpコマンド で確認なしに上書き（Linux） – 創屋ぷれす Redmineチケット Jenkinsのバックアップとリストアについて調べる</description></item><item><title>CentOS7へJenkinsをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1317/</link><pubDate>Thu, 14 Sep 2017 12:51:12 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1317/</guid><description>Jenkinsをインストールする # Javaをインストールする yum install java # yumリポジトリにjenkinsのリポジトリを追加する wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key # Jenkinsをインストールする yum install jenkins # Jenkinsを起動する systemctl start jenkins # Jenkinsが利用するポートを解放する firewall-cmd --zone=public --permanent --add-port=8080/tcp firewall-cmd --reload # システムのロケールを変更する localectl set-locale LANG=ja_JP.utf8 source /etc/locale.conf 参考サイト CentOS7へのJenkinsのインストール手順 – Qiita [CentOS]CentOS7でのロケール(locale)の確認及び変更 | Zero Configuration Jenkinsの文字コードを確認・設定する方法 – Qiita</description></item><item><title>CentOS7でRedmineをバックアップ、リストアする</title><link>https://tomonorimatsumura.github.io/blog/p1312/</link><pubDate>Thu, 14 Sep 2017 12:30:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1312/</guid><description>Redmineをバックアップをする # 作業用ディレクトリへcdする cd /tmp # Gitリポジトリをアーカイブする tar cfv git.tar /var/git/ # Redmineメディアファイルをアーカイブする tar cfv files.tar /var/lib/redmine/files/ # PostgeSQLデータベースをダンプする pg_dump -h localhost -U redmine redmine &amp;amp;gt; redmine.psql # アーカイブデータ、データベースダンプデータをアーカイブする tar cfv redmine.bk.tar * # アーカイブスデータを公開ディレクトリへ移動させる mv redmine.bk.tar /var/www/html/ Redmineをリストアする # 作業用ディレクトリへcdする cd /tmp # Redmineバックアップアーカイブスデータを取得する curl -O http://example.com/redmine.bk.tar # アーカイブスデータを解凍する tar xfv redmine.bk.tar # Gitリポジトリを配置する cd /tmp/redmine mv git /var/ # メディアファイルを配置する cd /tmp/redmine/ mv files/ /var/lib/redmine/ # PostgreSQLデータベースをリストアする systemctl stop postgresql.</description></item><item><title>HP Compaq 8100 Elite Small に nVIDIA GeForce GT520 1GB LowProfile を装着し CentOS7をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1309/</link><pubDate>Mon, 03 Jul 2017 15:09:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1309/</guid><description>CentOS7を設定する # フォントを大きくする setfont sun12x22 # インターネットへ接続する nmtui # GNOME デスクトップをインストールする yum groupinstall &amp;quot;GNOME Desktop&amp;quot; # nVIDIAグラフィックカードドライバーのインストールrpmをインストールする rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm echo $(nvidia-detect) yum install kmod-nvidia.x86_64 # ターゲットユニットを設定する systemctl get-default systemctl set-default graphical.target # 再起動する reboot 参考サイト Please Help with NVIDIA Driver installation on Centos 7 – CentOS</description></item><item><title>Lenovo G580にCentOS7をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1239/</link><pubDate>Sun, 05 Mar 2017 16:20:48 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1239/</guid><description>Bootメディアを作成する SDカードを利用する。CentOSのサイトより Everything ISO イメージをダウンロードしSDカードへコピーする。SDカードはNTFS形式でフォーマットしないと4GB以上のデータがSDカードにコピー出来ないので注意する。
G580はDVDドライブからしかブート出来無い。
# mkfsをインストールする yum install epel-release yum install ntfsprogs # SDカードをNTFS形式でフォーマットする mkfs -t ntfs -F /dev/sdb Bootメディアを起動する G580を立ち上げてすぐに「F12」を押す。「Boot Menu」からブートメディアを選択する。
Minimal イメージからインストールする場合の手順 Bootメディアより一通りインストール手順を踏んだ後デスクトップ環境を構築する。
# ネットワークへ接続する nmtui # もしくは nmcli device # 有効なNICを調べる nmcli connection up enp3s0 # 再起動時にNICが自動でネットワークへ接続するように設定を変更する vi /etc/sysconfig/network-scripts/ifcfg-enp3s0 ONBOOT=&amp;quot;yes&amp;quot; # yesへ変更する # システムをアップデートする yum update # デスクトップ環境をインストールする yum groupinstall &amp;quot;GNOME Desktop&amp;quot; # 常にグラフィカルモードにて起動するように設定を変更する systemctl get-default systemctl set-default graphical.target # デスクトップを立ち上げる startx マウスパッドの設定を行う デスクトップから『アプリケーション』→『システムツール』→『設定』→『マウスとタッチパッド』を開き必要項目を設定する。</description></item><item><title>Seleniumでコマンドラインでページソースを取得する</title><link>https://tomonorimatsumura.github.io/blog/p1223/</link><pubDate>Tue, 14 Feb 2017 10:48:26 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1223/</guid><description>Selenium、Pythonの設定方法は『CentOS7にSeleniuimをインストールする』を参考にする。
スクリプトの書き方 import sys import os import codecs from pyvirtualdisplay import Display from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities display = Display(visible=0, size=(1024, 768)) display.start() args = sys.argv url = args[1] save_dir = args[2] file_name = args[3] firefox_capabilities = DesiredCapabilities.FIREFOX firefox_capabilities[&amp;quot;marionette&amp;quot;] = True firefox_capabilities[&amp;quot;binary&amp;quot;] = &amp;quot;/usr/bin/firefox&amp;quot; driver = webdriver.Firefox(capabilities=firefox_capabilities) driver.get(url) html = driver.page_source completeName = os.path.join(save_dir, file_name) file_object = codecs.open(completeName, &amp;quot;w&amp;quot;, &amp;quot;utf-8&amp;quot;) file_object.write(html) file_object.close() print driver.title driver.close() スクリプトを実行する # python script_file url file_dir file_name python get_page_title_by_cli.</description></item><item><title>Seleniumでコマンドラインでページタイトルを取得する</title><link>https://tomonorimatsumura.github.io/blog/p1216/</link><pubDate>Tue, 14 Feb 2017 10:11:31 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1216/</guid><description>Selenium、Pythonの設定方法は『CentOS7にSeleniuimをインストールする』を参考にする
スクリプトの書き方 import sys from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from pyvirtualdisplay import Display display = Display(visible=0, size=(1024, 768)) display.start() args = sys.argv url = args[1] firefox_capabilities = DesiredCapabilities.FIREFOX firefox_capabilities[&amp;quot;marionette&amp;quot;] = True firefox_capabilities[&amp;quot;binary&amp;quot;] = &amp;quot;/usr/bin/firefox&amp;quot; driver = webdriver.Firefox(capabilities=firefox_capabilities) driver.get(url) print driver.title print url driver.close() スクリプトを実行する python get_page_title_by_cli.py http://yahoo.co.jp # 実行結果 Yahoo! JAPAN http://yahoo.co.jp</description></item><item><title>CentOS7にSeleniuimをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1201/</link><pubDate>Sun, 18 Dec 2016 14:52:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1201/</guid><description>Pipをインストールする yum install epel-release yum install python-pip pip install --upgrade pip Xvfbをインストールする ブラウザを立ち上げずにSeleniumを操作するのに必要なライブラリをインストールする
yum -y install xorg-x11-server-Xvfb pip install pyvirtualdisplay SeleniumとFirefoxをインストールする SeleniumからFirefoxを操作するにはGeckodriverをインストールする。他のブラウザを利用する時でも何らかのドライバをインストールする必要がありそうだ。
curl -O -L https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz tar fzxv geckodriver-v0.11.1-linux64.tar.gz mv geckodriver /usr/local/bin/ pip install selenium yum install firefox テストスクリプト例 CLI環境でスクリプトを実行する場合は必ずVirtualDisplayを経由させる。geckodriverがエラーで立ち上がらない。
from selenium import webdriver from selenium.webdriver.common.keys import Keys from selenium.webdriver.common.desired_capabilities import DesiredCapabilities from pyvirtualdisplay import Display display = Display(visible=0, size=(1024, 768)) display.start() firefox_capabilities = DesiredCapabilities.FIREFOX firefox_capabilities[&amp;quot;marionette&amp;quot;] = True firefox_capabilities[&amp;quot;binary&amp;quot;] = &amp;quot;/usr/bin/firefox&amp;quot; driver = webdriver.</description></item><item><title>CentOS7にVirtualBox + vagrantをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1174/</link><pubDate>Sun, 06 Mar 2016 11:34:43 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1174/</guid><description>VirtualBoxをインストールする こちらのサイトを参考にした。
yum istall dkms cd /etc/yum.repos.d/ sudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo yum update yum list | grep VirtualBox yum install VirtualBox-xxxx Vagrantをインストールする インストールしておく。
# Vagrantをインストールする rpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm # Guest Additions を自動インストールする vagrant plugin install vagrant-vbguest BIOSの設定を変更する PCを立ち上げてF10でBIOSの設定画面を表示させ仮想化技術を有効にする
Vagrantfileの設定を変更する 開発用途では使用しないUSB2.0を無効にする。またエラーメッセージを広いやすくするためにメッセージを表示する設定にする
vagrant pull &amp;amp;lt;box-image&amp;amp;gt; vagrant init &amp;amp;lt;box-name&amp;amp;gt; vi Vagrantfile -*- mode: ruby -*- # vi: set ft=ruby : # All Vagrant configuration is done below. The &amp;quot;2&amp;quot; in Vagrant.configure # configures the configuration version (we support older styles for # backwards compatibility).</description></item><item><title>さくらのVPSにVirtualBox + vagrantをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1168/</link><pubDate>Sun, 06 Mar 2016 11:32:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1168/</guid><description>Docker、Vagrant等仮想化技術が非常に大切だと感じるこの頃｡｡｡
想定環境 さくらのVPS 2GB CentOS7 VirtualBoxをインストールする こちらのサイトを参考にした。
yum istall dkms cd /etc/yum.repos.d/ sudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo yum update yum list | grep VirtualBox yum install VirtualBox-xxxx Vagrantをインストールする 公式サイトよりrmpをダウンロードしインストーるする
rpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm</description></item><item><title>CentOS7でAnsibleを利用する</title><link>https://tomonorimatsumura.github.io/blog/p1156/</link><pubDate>Wed, 27 Jan 2016 08:15:14 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1156/</guid><description>Ansibleを管理ホストへインストールする Ansibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。
yum install epel-release yum install ansible Ansibleを設定する vi /etc/ansible/ansible.cfg ################################# [defaults] host_key_checking=false 対象ホストへSSH接続する もし接続エラーが出る場合は「-vvv」オプションを追加して接続したり「rm -rf /root/.ansible/tmp/*」などでキャッシュをクリアしたりする。
# 対象ホストを設定する vi /etc/ansible/hosts # This is the default ansible &amp;quot;hosts&amp;quot; file. # # It should live in /etc/ansible/hosts # # - Comments begin with the &amp;quot;#&amp;quot; character # - Blank lines are ignored # - Groups of hosts are delimited by [header] elements # - You can enter hostnames or ip addresses # - A hostname/ip can be a member of multiple groups example.</description></item><item><title>CentOS7へRuby2.3とRails4をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1134/</link><pubDate>Mon, 18 Jan 2016 14:22:30 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1134/</guid><description>Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。
Rubyをインストールする CentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかはspecファイルを確認する。Rubyのビルドに必要なパッケージも確認出来る。
Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib
BuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel
# EPELをインストールする rpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm rpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7 # 必要なパッケージをインストールする yum --enablerepo=epel -y install gdbm-devel libdb4-devel libffi-devel libyaml libyaml-devel ncurses-devel openssl-devel readline-devel tcl-devel # Rubyをインストールする #RPMを作成する mkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS} cd /root/rpmbuild/SOURCES curl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz cd /root/rpmbuild/SPECS curl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec rpmbuild -bb /root/rpmbuild/SPECS/ruby.spec # Rubyをインストールする rpm -Uvh /root/rpmbuild/RPMS/ruby-2.</description></item><item><title>CentOS7へownCloudをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1122/</link><pubDate>Tue, 12 Jan 2016 06:48:12 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1122/</guid><description>リポジトリを追加する RPMForge、EPEL、Remiをリポジトリへ追加する
# RPMForge rpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm rpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt # EPEL rpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm rpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7 # remi rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm rpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi PHPをインストールする # gd-lastをインストール yum -y --enablerepo=remi install gd-last # MariaDBをインストールする yum -y install mariadb* yum -y --enablerepo=remi-php56 install php \ php-cli \ php-common \ php-gd \ php-ldap \ php-mbstring \ php-pdo \ php-process \ php-xml \ php-mysqlnd # memcached(分散型メモリキャッシュシステム)をPHPで使えるようにする yum install memcached-devel yum -y install php-pecl-memcache PHPを設定する # php.</description></item><item><title>CentOS7へNVIDIAグラフィックスドライバをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1117/</link><pubDate>Sat, 02 Jan 2016 11:47:00 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1117/</guid><description>CentOS7をアップデートするとグラフィックスドライバをカーネルに対して再構築しないといけないので手順をまとめておく
NVIDIAグラフィックスドライバーを入手する NVIDIAのサイトよりダウンロードしておく
ドライバをインストール、カーネルを再構築する yum update reboot # 最新バージョンのカーネルを選択し起動させる # もしGNOMEが立ち上がらない場合はCtl + Alt + F2でログインする systemctl disable gdm reboot # グラフィックスドライバをインストールする bash NVIDIA-Linux-x86_64-352.30.run # ユーザーアカウントのダウンロードディレクトリなどにファイルがある場合 # CentOSのターミナルから日本語が読み込めないし打ち込めない場合 bash `find /home/tomonori -name &amp;quot;NVIDIA*&amp;quot;` # シンボリックリンクを作成する前にサービスを起動する systemctl enable gdm.service # エラーが出たらオプションを-「f」に変更 ln -s &amp;quot;/usr/lib/systemd/system/gdm.service&amp;quot; &amp;quot;/etc/systemd/system/display-manager.service&amp;quot; reboot 参考サイト NVIDIA GeForce Driver Installation on CentOS 7 Linux 64-bit</description></item><item><title>CentOS7で動画を閲覧する</title><link>https://tomonorimatsumura.github.io/blog/p1113/</link><pubDate>Sat, 02 Jan 2016 10:08:19 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1113/</guid><description>VLC media playerのインストール準備 yum install epel-release yum localinstall --nogpgcheck http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm yum clean all yum update VLC media playerをインストールする yum install vlc 参考サイト Install VLC Media Player on CentOS 7 / RHEL 7 / Fedora 20</description></item><item><title>CentOS7でWindows Zipアーカイブを解凍する</title><link>https://tomonorimatsumura.github.io/blog/p1096/</link><pubDate>Tue, 01 Dec 2015 16:15:05 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1096/</guid><description>Windowsで作成したzipアーカイブは通常のCentOS7だと解凍出来ないのでPerlを使う
Archive::Zipをインストールする CPAN経由だとパスが通らないのでyumを使う
yum install perl-Archive-Zip zipアーカイブを解凍する アーカイブを解凍するためのPerlスクリプトを作成する
vi unzip-sjis.pl ################################## #!/usr/bin/perl use strict; use warnings; use Archive::Zip; use Encode; if (@ARGV != 1) { die &amp;quot;usage: $0 ZIPFILE\n&amp;quot;; } my $zipfile = shift; if (! -e $zipfile) { die &amp;quot;$zipfile don&amp;quot;t exist\n&amp;quot;; } my $zip=Archive::Zip-&amp;amp;gt;new($zipfile); my @items = $zip-&amp;amp;gt;memberNames(); my $utf8name; foreach (@items) { my $utf8name = $_; Encode::from_to($utf8name, &amp;quot;cp932&amp;quot;, &amp;quot;utf-8&amp;quot;); print &amp;quot;extract : $utf8name\n&amp;quot;; $zip-&amp;amp;gt;extractMember($_, $utf8name); } ##################### # ファイルを解凍する .</description></item><item><title>CentOS7でmod_encodingを利用する</title><link>https://tomonorimatsumura.github.io/blog/p1093/</link><pubDate>Tue, 01 Dec 2015 14:37:59 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1093/</guid><description>想定される環境
OS: CentOS7
Apache: 2.4系
mod_encodingをインストールする # httpd-develインストール yum -y install httpd-devel # mod_encodingをダウンロード wget http://webdav.todo.gr.jp/download/mod_encoding-20021209.tar.gz # Apache2版mod_encodingダウンロード wget http://webdav.todo.gr.jp/download/experimental/mod_encoding.c.apache2.20040616 # Apache2版mod_encodingに差し替え tar zxvf mod_encoding-20021209.tar.gz /bin/mv mod_encoding.c.apache2.20040616 mod_encoding-20021209/mod_encoding.c # iconv-hookライブラリインストール cd mod_encoding-20021209/lib ./configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install # ※Namazuの検索文字列の文字化け対処 cd .. # mod_encodingパッチダウンロード wget http://www.aconus.com/~oyaji/faq/mod_encoding.c-apache2.2-20060520.patch　# mod_encodingパッチ施工 patch -p0 &amp;amp;lt; mod_encoding.c-apache2.2-20060520.patch # Makefile作成 # Apache2.4はapxsのパスが「/usr/bin/apxs」なので注意! ./configure --with-apxs=/usr/bin/apxs --with-iconv-hook # Makefile編集 vi Makefile ############################## LIBS = -liconv_hook ↓ LIBS = -L/usr/local/lib -liconv_hook install-exec-local: $(APXS) -i mod_encoding.</description></item><item><title>CentOS7でSSHを秘密鍵公開鍵を使って設定する</title><link>https://tomonorimatsumura.github.io/blog/p1084/</link><pubDate>Tue, 17 Nov 2015 13:59:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1084/</guid><description>キーペアを作成する 接続元の端末でキーペアを作成する。作成した公開鍵を接続サーバの接続アカウントに置く。SSH接続時は .sshディレクトリ のアクセス権限は700、公開鍵、秘密鍵は600にしておかないとエラーになる。
# 接続元端末で ssh-keygen -t rsa # 接続先で mkdir ~/.ssh vi ~/.ssh/authorized_keys # 公開鍵を書き込む chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys ログイン設定をする パスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する
vi /etc/ssh/sshd_config # 以下の行のコメントを外して保存 PubkeyAuthentication yes PasswordAuthentication no PermitRootLogin no # SSH のサービスを再起動 systemctl restart sshd.service SSHの接続ポートを変更する ディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。
vi /etc/ssh/sshd_config Port XXXXX # 0～65535の間で設定 # Firewallの設定を行う firewall-cmd --permanent --add-port=XXXXX/tcp firewall-cmd --reload # SSHの設定を反映する systemctl restart sshd.service 参考サイト</description></item><item><title>CentOS7でmod_userdirを使用する</title><link>https://tomonorimatsumura.github.io/blog/p1075/</link><pubDate>Mon, 16 Nov 2015 15:38:58 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1075/</guid><description>mod_userdirの設定をする vi /etc/httpd/conf.d/userdir.conf # # UserDir: The name of the directory that is appended onto a user&amp;quot;s home # directory if a ~user request is received. # # The path to the end user account &amp;quot;public_html&amp;quot; directory must be # accessible to the webserver userid. This usually means that ~userid # must have permissions of 711, ~userid/public_html must have permissions # of 755, and documents contained therein must be world-readable. # Otherwise, the client will only receive a &amp;quot;403 Forbidden&amp;quot; message.</description></item><item><title>CentOS7にFTPサーバを構築する</title><link>https://tomonorimatsumura.github.io/blog/p1067/</link><pubDate>Sun, 08 Nov 2015 10:41:11 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1067/</guid><description>vsftpdを導入する # vsftpdをyumでインストールする yum install vsftpd # サービスの自動設定を行う systemctl start vsftpd systemctl enable vsftpd systemctl status vsftpd.service # 確認 systemctl is-enabled vsftpd.service # 確認 # アクセス制限の設定を行う # パケットフィルタリングの設定を行う firewall-cmd --permanent --add-service=ftp firewall-cmd --reload vsftpdの動作設定を行う chrootを設定するのみ chroot_local_user=YES allow_writeable_chroot=YES 詳細設定 # 匿名ログイン禁止 anonymous_enable=NO # アスキーモードでの転送を許可 ascii_upload_enable=YES ascii_download_enable=YES # chroot有効 chroot_local_user=YES chroot_list_enable=YES # chroot リストファイル指定 chroot_list_file=/etc/vsftpd/chroot_list # ディレクトリごと一括での転送有効 ls_recurse_enable=YES # IPv4をリスンする listen=YES # IPv6 はリスンしない listen_ipv6=NO # 最終行へ追記 # ルートディレクトリ指定 (指定しない場合はホームディレクトリがルートディレクトリとなる) local_root=public_html # ローカルタイムを使う use_localtime=YES # seccomp filter をオフにする ( ログインに失敗する場合はオフにする ) seccomp_sandbox=NO # ユーザ個別設定ファイルの配置設定 user_config_dir=/etc/vsftpd/vsftpd_user_conf # 通常だとユーザーのホームディレクトリ以外にはchroot設定は行えない # ホームディレクトリ以外でもchroot設定が有効になるようにする allow_writeable_chroot=YES # ユーザーのchrootディレクトリを設定する mkdir /etc/vsftpd/vsftpd_user_conf vi /etc/vsftpd/vsftpd_user_conf/ftp-user local_root=/var/ftp chowm -R ftp-user:ftp-user /var/ftp # とりあえず作成する vi /etc/vsftpd/chroot_list ftp-user 参考サイト [CentOS 7 : Vsftpd : インストール ： Server World](http://CentOS 7 : Vsftpd : インストール ： Server World) [Linux] chroot_list と user_list による権限管理｜vsftpd -スグラボ- vsftpdでchrootの設定を行うには。 – 春木屋 vsftpdを設定した – Qiita [CentOS][vsftpd]ログインユーザ毎に個別の設定ファイルを適用する | ごった煮 – tips about programming and building a serve Ubuntu日本語フォーラム / vsftpdでアップロードを可能にしつつchrootをする方法について</description></item><item><title>CentOS7へFilezillaをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1065/</link><pubDate>Sun, 08 Nov 2015 04:03:13 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1065/</guid><description>FileZillaをインストールする yum -y install epel-release yum -y install filezilla 参考サイト How to Install FileZilla on CentOS 7 – e Learning</description></item><item><title>さくらのVPSにインストールしたCentOS7でVNCを利用する</title><link>https://tomonorimatsumura.github.io/blog/p1038/</link><pubDate>Thu, 29 Oct 2015 17:09:54 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1038/</guid><description>1. 必要なパッケージのインストール yum install tigervnc-server yum groupinstall &amp;quot;GNOME Desktop&amp;quot; yum install vnc VNCサーバの設定 cp /lib/systemd/system/vncserver@.service \ /etc/systemd/system/vncserver@:1.service vi /etc/systemd/system/vncserver@:1.service #&amp;amp;lt;USER&amp;amp;gt;をVNC USERに書き換える ExecStart=/sbin/runuser -l vncuser -c &amp;quot;/usr/bin/vncserver %i&amp;quot; PIDFile=/home/vncuser/.vnc/%H%i.pid # systemdに設定ファイルを再度読込みをさせる。 systemctl daemon-reload VNCユーザの設定 ログインユーザーをVNCユーザーに切り替えてパスワードを変更する
su vncuser vncpasswd &amp;amp;lt;enter&amp;amp;gt; Password: ****** &amp;amp;lt;enter&amp;amp;gt; Verify: ***** &amp;amp;lt;enter&amp;amp;gt; ファイアウォールの設定 firewall-cmd --permanent --add-service vnc-server systemctl restart firewalld.service VNCサービスの起動 systemctl start vncserver@:1.service # VNCサービスの自動起動設定を行う systemctl enable vncserver@:1.service クライアントからVNCを使う F8でフルスクリーンモードの切り替え設定が可能になる
vncviewer yourhost:1 参考サイト [CentOS]CentOS7最小限のインストールからのGnomeデスクトップ環境構築 | Zero Configuration</description></item><item><title>CentOS7でGnome Terminalにショートカットキーを設定する</title><link>https://tomonorimatsumura.github.io/blog/p1030/</link><pubDate>Thu, 29 Oct 2015 13:39:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1030/</guid><description>ショートカットキーを設定する [アプリケーション]–[システムツール]–[設定]–[キーボード]–[ショートカット]–**[独自のショートカット]を選択。[＋]**ボタンを押して
名前：「端末」 コマンド：「gnome-terminal」 と入力して、ショートカットキーを設定する。
参考サイト 「Goblous.com」 – 情報メモサイト</description></item><item><title>CentOS7にPHP5.6をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1022/</link><pubDate>Tue, 15 Sep 2015 16:57:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1022/</guid><description>CentOS7にyumでPHPをインストールしようとしたがバージョンが5.4と古かったのでremiで5.6をインストールする。
remiリポジトリをインストール、設定する # remiリポジトリの公開鍵を取り込む rpm --import https://raw.githubusercontent.com/remicollet/remirepo/master/remi-release/RPM-GPG-KEY-remi # yum-config-manager コマンドのインストールと remiリポジトリの追加 yum install yum-utils http://remi.kazukioishi.net/enterprise/remi-release-7.rpm # remi-php56 リポジトリを有効化 yum-config-manager --enable remi-php56 # remiの設定を変更 / PHPのアップデートには常にremiを使うようにする # yumプラグインのインストール yum install yum-plugin-priorities /etc/yum.repos.d/remi.repo [remi] name=Remi&amp;quot;s RPM repository for Enterprise Linux 7 - $basearch #baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/ mirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror enabled=0 gpgcheck=1 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi priority=100 ## ↑この行を追加 ## # PHP と拡張モジュールなどをインストール #### php-mysqlnd / PDOを扱うのに必要 #### php-mbstring / utf-8 のセキュリティを確保するのに必要 #### php-intl / Unicode に関する処理などに必要 #### php-gmp / 桁の大きい整数を扱う場合に必要 # 古いPHPをアンインストールしておく yum remove php* yum --enablerepo=remi,epel install php56-php php56-php-mbstring php56-php-pdo php56-php-mysqlnd php56-php-intl php56-php-gmp # シンボリックリンクを変更する ln -s /opt/remi/php56/root/etc/php.</description></item><item><title>CentOS7にffmpegをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1018/</link><pubDate>Tue, 11 Aug 2015 04:47:03 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1018/</guid><description>壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS7にて動画編集が出来ないかどうか画策してみる。
事前準備 yum groupinstall &amp;quot;Development Tools&amp;quot; &amp;quot;Development Libraries&amp;quot; yasmをインストールする x264のビルドに必要になる
cd /usr/local/src wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz tar zvxf yasm-1.3.0.tar.gz cd yasm-1.3.0 ./configure make make install x264をインストールする ffmpeg のビルドに必要になる。
cd /usr/local/src git clone git://git.videolan.org/x264 cd x264 ./configure --enable-shared make make install fdk-aacをインストールする fdk-aac を使うなら入れる必要がある。ソースをfdk-aacのサイトからダウンロード
cd /usr/local/src tar xzf fdk-aac-0.1.3.tar.gz cd fdk-aac-0.1.3 ./configure make make install ffmpegをインストールする cd /usr/local/src git clone git://source.ffmpeg.org/ffmpeg.git ffmpeg cd ffmpeg # 時間がかなりかかる（30分程度？） ./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264 make make install # ショートカット作成 ln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg 設定ファイルを変更する vi /etc/ld.</description></item><item><title>Windows7にVirtualBoxをインストールしCentOS7をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1003/</link><pubDate>Tue, 11 Aug 2015 03:47:53 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1003/</guid><description>ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。
Windows7にVirtualBoxをインストールする※注意 VirtualBoxの公式サイトより最新のものをダウンロードしインストールする。既にVirtualBoxがインストールされている場合は必ず最新バージョンのVirtualBoxを利用する。
CentOS7を取得する ゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトよりEverything ISOをダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。
VirtualBoxにCentOS7をインストールする 『ソフトウェアの選択(S)』を選択し、左の ベース環境 から 『GNOME Desktop』 を選択
『ネットワークとホスト名(N)』を選択し、ネットワーク接続を『オン』にする。
VirtualBox上でネットワークの設定を行う Wi-fiを使わない場合はNATで良い。
『VirtualBox』→『設定』→『ネットワーク』の順に開き、『アダプター 1』の割り当ての項目を『ブリッジアダプター』に設定する。
また『名前』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。
iPhone6をUSB接続でつないだ場合→『Apple Mobile Device Ethernet』 dynabookのwi-fiで接続する場合→『Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC』 VirtualBox Guest AdditionsをCentOS7にインストールする 初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『VirtualBox Guest Additions』をインストールする。
ゲストOSであるCentOS7上で
# あらかじめVirtualBox Guest Additionのインストールに # 必要なライブラリやヘッダファイルをインストールする yum install epel-release yum install dkms yum groupinstall &amp;quot;Development Tools&amp;quot; yum install kernel-devel yum update
ゲストOSが立ち上がってる状態で
『VirtualBox』→『デバイス』→『Guest AdditionsのCDイメージを挿入』をクリック。あとは自動的に「VirtualBox Guest Addtions」がインストールされる。</description></item></channel></rss>