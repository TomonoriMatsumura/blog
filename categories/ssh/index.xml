<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SSH on Mainroad</title><link>https://tomonorimatsumura.github.io/blog/categories/ssh/</link><description>Recent content in SSH on Mainroad</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 17 Nov 2015 13:59:06 +0000</lastBuildDate><atom:link href="https://tomonorimatsumura.github.io/blog/categories/ssh/index.xml" rel="self" type="application/rss+xml"/><item><title>CentOS7でSSHを秘密鍵公開鍵を使って設定する</title><link>https://tomonorimatsumura.github.io/blog/p1084/</link><pubDate>Tue, 17 Nov 2015 13:59:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1084/</guid><description>キーペアを作成する 接続元の端末でキーペアを作成する。作成した公開鍵を接続サーバの接続アカウントに置く。SSH接続時は .sshディレクトリ のアクセス権限は700、公開鍵、秘密鍵は600にしておかないとエラーになる。
# 接続元端末で ssh-keygen -t rsa # 接続先で mkdir ~/.ssh vi ~/.ssh/authorized_keys # 公開鍵を書き込む chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys ログイン設定をする パスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する
vi /etc/ssh/sshd_config # 以下の行のコメントを外して保存 PubkeyAuthentication yes PasswordAuthentication no PermitRootLogin no # SSH のサービスを再起動 systemctl restart sshd.service SSHの接続ポートを変更する ディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。
vi /etc/ssh/sshd_config Port XXXXX # 0～65535の間で設定 # Firewallの設定を行う firewall-cmd --permanent --add-port=XXXXX/tcp firewall-cmd --reload # SSHの設定を反映する systemctl restart sshd.service 参考サイト</description></item><item><title>awkでSSHアクセス履歴を調べる</title><link>https://tomonorimatsumura.github.io/blog/p1080/</link><pubDate>Tue, 17 Nov 2015 13:18:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1080/</guid><description>SSHのアクセスログを定期的に調べる必要がある。
ログインが成功したアクセスを調べる # アクセスが成功したログインを全て表示する grep &amp;quot;Accepted&amp;quot; /var/log/secure* # もしくは grep &amp;quot;Accepted&amp;quot; /var/log/secure* | awk &amp;quot;{split($1, arr, &amp;quot;:&amp;quot;); print arr[2] $2 &amp;quot; &amp;quot; $3 &amp;quot; &amp;quot; $9 &amp;quot; &amp;quot; $11}&amp;quot; # 順にホワイトリストを当ててみて不正アクセスが無いか確認する # 188.251.* はauのテザリング端末 # 221.1.36.239は自宅のインターネットプロバイダ # 133.xxx.xxx.xxxは契約しているVPSサーバ grep &amp;quot;Accepted&amp;quot; /var/log/secure* | awk &amp;quot;{print $9 &amp;quot; &amp;quot; $11}&amp;quot; | awk &amp;quot;{sub(&amp;quot;/182.251.*/&amp;quot;, &amp;quot;&amp;quot;); print $0;}&amp;quot; | awk &amp;quot;{sub(&amp;quot;222.1.36.239&amp;quot;, &amp;quot;&amp;quot;); print $0;}&amp;quot; | awk &amp;quot;{sub(&amp;quot;133.xxx.xxx.xxx&amp;quot;, &amp;quot;&amp;quot;); print $0;}&amp;quot; ログインが失敗したアクセスを調べる grep -E &amp;quot;Failed|Invalid&amp;quot; /var/log/secure* 参考サイト アクセスログ解析（ssh編） | tkd55 blog</description></item><item><title>CentOS6でVNCをポートフォワーディングで接続する</title><link>https://tomonorimatsumura.github.io/blog/p687/</link><pubDate>Thu, 14 Feb 2013 06:53:20 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p687/</guid><description>SSH接続ポート番号を指定する vncviwerコマンドではSSH接続ポート番号が指定出来ないみたいなので、「/etc/ssh/ssh_config」か「~/.ssh/config」でポート番号を指定しておく。またサーバ側の「/etc/ssh/sshd_config」のAllowTcpForwardingをyesにしておく。
ポートフォワーディングで接続確認をする ポートフォワーディングの設定がうまくいっていないとVNC Viewerが立ち上がらないので接続確認を行う。リモートのユーザーフォルダの.sshにローカルの公開鍵ファイルがないとポートフォワーディングがうまくいかないので注意
# ssh -L [ローカルホストポート]:[リモートホスト]:[リモートホストポート] [リモートホスト] -l [リモートホストのユーザ名] $ ssh -L 1234:192.168.1.22:5901 192.168.1.22 -l user VNC Viewerを起動する VNC SERVERの設定をポートフォワーディング用に設定する。
vi /etc/sysconfig/vncservers VNCSERVERS=&amp;quot;1:vncuser&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 2560x800 -localhost&amp;quot; ローカルマシーンで以下のコマンドで起動させる。
vncviewer -via {vncuser}@{hostname} localhost:1 参考サイト SSH ポートフォワーディングでVNCを使う [ubuntu] How do I VNC via SSH when both are not set to use the default port numbers?</description></item><item><title>公開鍵秘密鍵を設定する</title><link>https://tomonorimatsumura.github.io/blog/p663/</link><pubDate>Sun, 03 Feb 2013 02:22:14 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p663/</guid><description>VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す
キーペアを作成する 接続先のサーバでキーペアを作成する。SSH接続時は .sshディレクトリ のアクセス権限は700、公開鍵、秘密鍵は600にしておかないとエラーになる。
ssh-keygen -t rsa mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys ログイン設定をする パスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する
vi /etc/ssh/sshd_config # 以下の行のコメントを外して保存 PubkeyAuthentication yes PasswordAuthentication no # SSH のサービスを再起動 /etc/init.d/sshd restart SSHの接続ポートを変更する ディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。
vi /etc/ssh/sshd_config Port {sshport_number} # 0～65535の間で設定 vi /etc/sysconfig/iptables # 以下を追加 -A INPUT -m state --state NEW -m tcp -p tcp --dport {sshport_number} -j ACCEPT # sshd、iptablesを再起動する service sshd restart /etc/rc.d/init.d/iptables restart ローカルに秘密鍵を保存する 何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う
# ローカルPCで操作する cd ~/.</description></item><item><title>Windwos7で公開鍵秘密鍵を発行する</title><link>https://tomonorimatsumura.github.io/blog/p419/</link><pubDate>Sun, 09 Dec 2012 11:08:13 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p419/</guid><description>PuTTYでssh2プロトコルを使ってssh接続Putytyだとフォーマットの変換などが入り面倒なのでTera Termを使う。</description></item><item><title>さくらのスタンダードでsftpを使う</title><link>https://tomonorimatsumura.github.io/blog/p378/</link><pubDate>Fri, 07 Dec 2012 15:10:19 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p378/</guid><description>EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因はこれらしい。。。
.cshrcの設定を変更する ~/.cshrcを開いて以下を書き加える
if ( $?SSH_CLIENT &amp;amp;amp;&amp;amp;amp; ! $?SSH_TTY ) then setenv LANG C unsetenv LC_ALL else if ( $?prompt ) then 接続テスト
sftp -v user@domain 参考サイト WinSCPでscpとsftpがうまくいかないときのsshサーバの~/.cshrcの設定</description></item><item><title>CentOS6にPECL::ssh2をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p183/</link><pubDate>Sun, 25 Nov 2012 14:10:02 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p183/</guid><description>PECL::ssh2をインストールする インストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。
yum install php-devel php-pear libssh2 libssh2-devel pecl install ssh2 channel://pecl.php.net/ssh2-0.12 php.iniを開き、extension=ssh2.soを書き加える
PECL::ssh2を使ったPHPのサンプルコード &amp;amp;lt;?php $connection = ssh2_connect(&amp;quot;ssh.host&amp;quot;, 22); if (ssh2_auth_password($connection, &amp;quot;user&amp;quot;, &amp;quot;pass&amp;quot;)) { echo &amp;quot;Authentication Successful!\n&amp;quot;; } else { die(&amp;quot;Authentication Failed...&amp;quot;); } ssh2_scp_send($connection, &amp;quot;/remote/file&amp;quot;, &amp;quot;/local/file&amp;quot;, 0644); ?&amp;amp;gt; ファイル名はローカルとリモートで必ずフルパスで指定すること！
参考サイト Installing SSH2 Extension for PHP on CentOS 5 | Dynamic Hosting Blog</description></item><item><title>さくらのVPSでSSHの初期設定を行う</title><link>https://tomonorimatsumura.github.io/blog/p5/</link><pubDate>Thu, 04 Oct 2012 08:51:41 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p5/</guid><description>秘密鍵および公開鍵の作成 ローカルのCentOSから
ssh-keygen -t rsa これで、/root/.sshに、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。
さくらVPSに公開キーをアップ VPSコントロールパネルを呼び出しリモートコンソールを機動し
https://secure.sakura.ad.jp/vpscontrol/main/
touch ~/.ssh/authorized_keys chmod 600 ~/.ssh/authorized_keys ローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする。
ローカルもしくはサーバにknown_hostsがある場合は削除しておく。</description></item></channel></rss>