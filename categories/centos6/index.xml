<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CentOS6 on Mainroad</title><link>https://tomonorimatsumura.github.io/blog/categories/centos6/</link><description>Recent content in CentOS6 on Mainroad</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sat, 28 Jan 2017 13:33:06 +0000</lastBuildDate><atom:link href="https://tomonorimatsumura.github.io/blog/categories/centos6/index.xml" rel="self" type="application/rss+xml"/><item><title>CentOS7でSeleniumをDockerコンテナで利用する</title><link>https://tomonorimatsumura.github.io/blog/p1206/</link><pubDate>Sat, 28 Jan 2017 13:33:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1206/</guid><description>DockerをインストールしFirefoxコンテナを立ち上げる yum install docker systemctl start docker sytemctl enable docker docker run -d -p 4444:4444 selenium/standalone-firefox:latest Python Seleniumをインストールする yum install epel-release yum install python-pip pip install --upgrade pip pip install selenium DockerコンテナのIPアドレスを取得する 接続先のDockerコンテナのIPアドレスを指定しないとコンテナに接続出来ない。テストスクリプトにIPアドレスを記述するために取得する。
docker ps | awk &amp;quot;NR&amp;amp;gt;1&amp;amp;&amp;amp;$0=$1&amp;quot; | xargs -n 1 docker inspect -f &amp;quot;{{.Name}} {{.NetworkSettings.IPAddress }}&amp;quot; テストスクリプト例 from selenium import webdriver from selenium.webdriver.common.desired_capabilities import DesiredCapabilities firefox_capabilities = DesiredCapabilities.FIREFOX driver = webdriver.Remote( command_executor=&amp;quot;http://127.17.0.2:4444/wd/hub&amp;quot;, desired_capabilities=firefox_capabilities) driver.get(&amp;quot;http://yahoo.co.jp&amp;quot;) print driver.title driver.close() 参考サイト CentOS7 で Docker を使ってみる – CUBE SUGAR CONTAINER 稼働中のdockerコンテナのIPアドレス一覧を取得する – くんすとの備忘録 2.</description></item><item><title>CentOSで外付けHDDにカレントディレクトリを移動する</title><link>https://tomonorimatsumura.github.io/blog/p965/</link><pubDate>Wed, 17 Dec 2014 20:05:38 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p965/</guid><description>コマンド cd /media 参考サイト DVD-ROMのイメージ(ISO)ファイルをマウントしてデータを参照 | Linuxサーバ管理 | OSS Fan</description></item><item><title>CentOSでサーバの時刻設定を行う</title><link>https://tomonorimatsumura.github.io/blog/p883/</link><pubDate>Sun, 06 Oct 2013 09:14:58 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p883/</guid><description>どうもディフォルトだとOSの時計が合ってないので自動で同期させるようにする。
NTPをインストールする 想定される環境だと既にインストール済み
rpm -qa | grep ntp fontpackages-filesystem-1.41-1.1.el6.noarch ntpdate-4.2.4p8-3.el6.centos.i686 ntp-4.2.4p8-3.el6.centos.i686 NTPを起動、自動起動設定する service ntpd start chkconfig ntpd on chkconfig --list ntpd #動作確認 ntpq -p Timezoneの設定をする rm -f /etc/localtime cp -p /usr/share/zoneinfo/Japan /etc/localtime 参考サイト サーバの時刻設定、NTPで自動設定・時刻補正 [Fedora, RedHat, CentOS] – Linux 【メモ】【CentOS】サーバマシンのタイムゾーン変更 | (っ´∀｀)っ ゃー | nullpopopo</description></item><item><title>さくらのVPSにCentOS6.4 i386をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p861/</link><pubDate>Sun, 15 Sep 2013 16:03:34 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p861/</guid><description>VMWare Playerの実験をしようと思い、色々とやってみた。
CentOSのisoファイルをさくらのVPSへアップロードする sftpでイメージをアップロードする必要がある
CentOSをインストールする ネットワークの設定を行う /etc/resolv.conf、/etc/sysconfig/network-scripts/ifcfg-eth0は既に構築してあるCentOSサーバの設定を参考にする。設定ファイル自体には色々とゴタゴタ書く必要はない。
network managerをoffる。/etc/resolv.confを設定する。
/etc/sysconfig/network-scripts/ifcfg-eth0を設定する
iptablesの設定を行う
参考サイト CentOSのネットワーク設定を手動で行う方法 – bojovs blog はじめての自宅サーバ構築 – Fedora/CentOS – CentOS6 のインストール手順 NetworkManagerについて – 冬日記</description></item><item><title>CentOS6にChromeをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p807/</link><pubDate>Thu, 02 May 2013 15:37:24 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p807/</guid><description>どうもCentOSとFireFoxが相性が悪いのでChromeに乗り換えてみる。
Google YUM リポジトリを有効にする vi /etc/yum.repos.d/google-chorme.repo # 64 bit 版の場合 [google-chrome] name=google-chrome - 64-bit baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64 enabled=1 gpgcheck=1 gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub # 32 bit 版の場合 [google-chrome] name=google-chrome - 32-bit baseurl=http://dl.google.com/linux/chrome/rpm/stable/i386 enabled=1 gpgcheck=1 gpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub Chromeをインストールする インストール可能なパッケージを調べる
yum list &amp;quot;*chrome*&amp;quot; Loaded plugins: fastestmirror, refresh-packagekit Loading mirror speeds from cached hostfile * base: rsync.atworks.co.jp * epel: ftp.jaist.ac.jp * extras: rsync.atworks.co.jp * updates: rsync.atworks.co.jp google-chrome | 951 B 00:00 google-chrome/primary | 1.4 kB 00:00 google-chrome 3/3 Installed Packages xorg-x11-drv-openchrome.</description></item><item><title>さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p787/</link><pubDate>Mon, 25 Mar 2013 01:42:01 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p787/</guid><description>VMWare Playerをインストールする https://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/5_0
さくらのVPSからVMWare Playerを使うにはバイバスを通す必要がある
http://communities.vmware.com/docs/DOC-8970
vmx.allowNested = TRUE
ローカルのCentOSでEpson LP-S2000を使う場合は、ドライバをインストールした後、一度電源を入れて認識させ、プリンタを削除してもう一度接続し直す。
VMWare Playerをアンインストールする /usr/bin/vmware-installer -u vmware-player 参考サイト VMware Communities: VMware Player connot run on this CPU VMware Communities: Running Nested VMs Uninstall Vmware Player</description></item><item><title>CentOS6で動画を閲覧する</title><link>https://tomonorimatsumura.github.io/blog/p782/</link><pubDate>Wed, 20 Mar 2013 13:49:05 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p782/</guid><description>TEDからダウンロードした動画をCentOS6でも観たいと思い「VLC media player(VideoLAN Client)」をインストールした。
VLC media playerのインストール準備 VLC media playerのインストールにはRemi、EPEL、RPMFusionがインストールされている必要がある。
yum localinstall --nogpgcheck http://download1.rpmfusion.org/free/el/updates/6/i386/rpmfusion-free-release-6-1.noarch.rpm yum localinstall --nogpgcheck http://download1.rpmfusion.org/nonfree/el/updates/6/i386/rpmfusion-nonfree-release-6-1.noarch.rpm VLC media playerをインストールする yum --enablerepo=remi-test info vlc # パッケージの確認 yum --enablerepo=remi-test install vlc 動画を再生する場合はCentOS6のデスクトップメニューから「アプリケーション」→「サウンドとビデオ」→「動画プレイヤー」からVLC media playerを起動させる。
サポートされないフォーマットのファイルはVLC media playerのインストラクションに従いプラグイン等をインストールする。
参考サイト VideoLAN – Official page for VLC media player, the Open Source video framework! Install VLC (Media Player) in RHEL/CentOS 6.3/5.6, Fedora 17-1</description></item><item><title>CentOS6のApacheでmod_cacheを設定する</title><link>https://tomonorimatsumura.github.io/blog/p770/</link><pubDate>Mon, 18 Mar 2013 11:50:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p770/</guid><description>Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。
mod_cacheのインストール確認を行う 想定される環境だとmod_cacheおよびmod_disk_cacheは既にインストール済み。
httpd -M | grep cache Syntax OK cache_module (shared) disk_cache_module (shared) mod_cahceの設定を行う 「/etc/httpd/conf.d/cache.conf」にモジュールの設定を書く。マニュアルによると「CacheDirLevelsの値 X CacheDirLengthの値」は「20」以下でなければならないので注意。
vi /etc/httpd/conf.d/cache.conf # 以下を書き込む # LoadModule cache_module modules/mod_cache.so # LoadModule disk_cache_module modules/mod_disk_cache.so &amp;amp;lt;IfModule mod_cache.c&amp;amp;gt; &amp;amp;lt;IfModule mod_disk_cache.c&amp;amp;gt; # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す CacheIgnoreCacheControl On # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする CacheIgnoreNoLastMod On # Set-Cookie ヘッダをキャッシュしない CacheIgnoreHeaders Set-Cookie # キャッシュデータの保存先 CacheRoot /var/cache/apache # キャッシュ対象とするパスの指定 CacheEnable disk / # キャッシュデータを保管するディレクトリの階層の深さ CacheDirLevels 5 # キャッシュデータを保管するディレクトリの文字数 CacheDirLength 3 &amp;amp;lt;/IfModule&amp;amp;gt; &amp;amp;lt;/IfModule&amp;amp;gt; # キャッシュ保管ディレクトリの権限を変更しておく mkdir /var/cache/apache chown apache:apache /var/cache/apache # Apacheを再起動する service httpd restart 参考サイト Apache の mod_cache で日記の高速化に挑戦してみた – まちゅダイアリー(2010-06-26) mod_disk_cache – Apache HTTP サーバ</description></item><item><title>CentOS6でApache、PHP、MySQLの初期設定を行う</title><link>https://tomonorimatsumura.github.io/blog/p758/</link><pubDate>Sat, 16 Mar 2013 16:27:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p758/</guid><description>記事がバラバラになっているのでまとめておく。
Apacheの自動機動設定を行う 想定される環境だと既にApacheはインストール済み。
service httpd restart chkconfig httpd on PHPをインストールする こちらのエントリーを参考にする
MySQL+phpMyAdminをインストールする こちらのエントリーを参考にする</description></item><item><title>CentOSで6.3でを起動時にNum Lockを有効にする</title><link>https://tomonorimatsumura.github.io/blog/p729/</link><pubDate>Sat, 09 Mar 2013 16:37:57 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p729/</guid><description>CentOSを立ち上げたときにいつもキーボードのNum Lockが有効になっておらず面倒なので対応する。
vi /etc/rc.d/rc.sysinit # 以下を末尾に追加する for tty in /dev/tty[1-9]*; do setleds -D +num &amp;amp;lt; $tty done 参考サイト centosでnumlockを起動時に有効にする Linuxシステムの起動スクリプト(inittab、rc.sysinit、rc)を解読 http://pkgs.org/centos-6-rhel-6/repoforge-x86_64/numlockx-1.1-1.el6.rf.x86_64.rpm.html</description></item><item><title>CentOS6でVNCをポートフォワーディングで接続する</title><link>https://tomonorimatsumura.github.io/blog/p687/</link><pubDate>Thu, 14 Feb 2013 06:53:20 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p687/</guid><description>SSH接続ポート番号を指定する vncviwerコマンドではSSH接続ポート番号が指定出来ないみたいなので、「/etc/ssh/ssh_config」か「~/.ssh/config」でポート番号を指定しておく。またサーバ側の「/etc/ssh/sshd_config」のAllowTcpForwardingをyesにしておく。
ポートフォワーディングで接続確認をする ポートフォワーディングの設定がうまくいっていないとVNC Viewerが立ち上がらないので接続確認を行う。リモートのユーザーフォルダの.sshにローカルの公開鍵ファイルがないとポートフォワーディングがうまくいかないので注意
# ssh -L [ローカルホストポート]:[リモートホスト]:[リモートホストポート] [リモートホスト] -l [リモートホストのユーザ名] $ ssh -L 1234:192.168.1.22:5901 192.168.1.22 -l user VNC Viewerを起動する VNC SERVERの設定をポートフォワーディング用に設定する。
vi /etc/sysconfig/vncservers VNCSERVERS=&amp;quot;1:vncuser&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 2560x800 -localhost&amp;quot; ローカルマシーンで以下のコマンドで起動させる。
vncviewer -via {vncuser}@{hostname} localhost:1 参考サイト SSH ポートフォワーディングでVNCを使う [ubuntu] How do I VNC via SSH when both are not set to use the default port numbers?</description></item><item><title>CentOS6でsuをほぼ無効にする</title><link>https://tomonorimatsumura.github.io/blog/p679/</link><pubDate>Tue, 12 Feb 2013 17:36:11 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p679/</guid><description>SSHの設定をいじっているときに、一般ユーザーでログインしているのに、パスワードひとつでrootに昇格出来てしまい非常に驚いた。セキュリティー的に全くダメなのでこの設定を無効にし、wheelグループに属するユーザー以外にroot権限を持たせないようにする。
参考サイト http://d.hatena.ne.jp/Hossy/20091025/p1</description></item><item><title>Redmineのパフォーマンスチューニング</title><link>https://tomonorimatsumura.github.io/blog/p667/</link><pubDate>Sat, 09 Feb 2013 10:59:14 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p667/</guid><description>Redmineが若干遅いのでチューニングを試みる。
avahi-daemonを停止する CentOSはディフォルトでavahi-daemonが起動するようになっているので無効にする。
# 起動設定を確認 chkconfig --list | grep avahi- avahi-daemon 0:off 1:off 2:off 3:on 4:on 5:on 6:off # 自動で起動しないようにする chkconfig avahi-daemon off # 起動設定を確認 chkconfig --list | grep avahi- avahi-daemon 0:off 1:off 2:off 3:off 4:off 5:off 6:off reboot 参考サイト Windows7でRedmineが異様に遅い – 3100 Fedora/RHEL/CentOS等でのavahi-daemonの停止 – 情報技術の四方山話</description></item><item><title>公開鍵秘密鍵を設定する</title><link>https://tomonorimatsumura.github.io/blog/p663/</link><pubDate>Sun, 03 Feb 2013 02:22:14 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p663/</guid><description>VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す
キーペアを作成する 接続先のサーバでキーペアを作成する。SSH接続時は .sshディレクトリ のアクセス権限は700、公開鍵、秘密鍵は600にしておかないとエラーになる。
ssh-keygen -t rsa mv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys chmod 700 ~/.ssh chmod 600 ~/.ssh/authorized_keys ログイン設定をする パスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する
vi /etc/ssh/sshd_config # 以下の行のコメントを外して保存 PubkeyAuthentication yes PasswordAuthentication no # SSH のサービスを再起動 /etc/init.d/sshd restart SSHの接続ポートを変更する ディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。
vi /etc/ssh/sshd_config Port {sshport_number} # 0～65535の間で設定 vi /etc/sysconfig/iptables # 以下を追加 -A INPUT -m state --state NEW -m tcp -p tcp --dport {sshport_number} -j ACCEPT # sshd、iptablesを再起動する service sshd restart /etc/rc.d/init.d/iptables restart ローカルに秘密鍵を保存する 何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う
# ローカルPCで操作する cd ~/.</description></item><item><title>CentOS6を日本語環境にする</title><link>https://tomonorimatsumura.github.io/blog/p656/</link><pubDate>Sat, 02 Feb 2013 11:24:18 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p656/</guid><description>VNC環境で日本語を使いたかったので
日本語関連のパッケージをグループインストールする yum -y groupinstall &amp;quot;Japanese Support&amp;quot; システムの文字セットを変更する vi /etc/sysconfig/i18n # 変更 LANG=&amp;quot;ja_JP.UTF-8&amp;quot; システムを再起動する reboot 日本語入力をONにする システム→設定→入力メソッド
『入力メソッドの機能を有効にする』にチェックを入れる
参考サイト CentOS 6 – 日本語環境にする ： Server World</description></item><item><title>CentOS6にFireFoxをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p653/</link><pubDate>Sat, 02 Feb 2013 11:16:38 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p653/</guid><description>VNC環境を整え、VNCサーバ上でもFireFoxが使えると便利だと思い試してみる。
FireFoxをインストールする yum install firefox FireFoxをアップデートする remiリポジトリがインストールされているのを確認したら
yum --enablerepo=remi update firefox FLASHプラグインをインストールする ## Adobe Repository 32-bit x86 ## rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux ## Adobe Repository 64-bit x86_64 ## rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux # Update Repositories yum check-update yum install flash-plugin nspluginwrapper alsa-plugins-pulseaudio libcurl 参考サイト CentOS 6.2に最新版のFirefoxとFlash Playerをインストール – なんじゃくにっき Adobe Flash Player 11.2 on Fedora 18/17, CentOS/RHEL 6.3/5.8</description></item><item><title>さくらのVPSでVNCを起動する</title><link>https://tomonorimatsumura.github.io/blog/p646/</link><pubDate>Sat, 02 Feb 2013 04:26:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p646/</guid><description>リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応このサイトの手順通りで大体は環境構築が可能だと思う。
1. 必要なパッケージのインストール サーバ 想定される環境だと、tigervnc-serverとデスクトップパッケージをインストールする必要がある。rpmからインストールする。
yum install tigervnc-server yum groupinstall &amp;quot;Desktop&amp;quot;; yum install -y gnome* # システムモニターなどが使えるようになる このコマンドは無効化も知れない yum groupinstall &amp;quot;Desktop&amp;quot; &amp;quot;Desktop Platform&amp;quot; &amp;quot;General Purpose Desktop&amp;quot; yum groupinstall &amp;quot;X Window System&amp;quot;; CentOSを日本語化するにはこちらを参考にする。
クライアント こちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。
yum install vnc VNCサーバの設定 vi /etc/sysconfig/vncservers # 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！) VNCSERVERS=&amp;quot;1:vncuser&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 800x600&amp;quot; 複数ユーザを設定する場合は
vi /etc/sysconfig/vncservers # 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！) VNCSERVERS=&amp;quot;1:vncuser1 2:vncuser2&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 800x600&amp;quot; VNCSERVERARGS[2]=&amp;quot;-geometry 800x600&amp;quot; VNCユーザの設定 ログインユーザーをVNCユーザーに切り替えてパスワードを変更する
su vncuser vncpasswd &amp;amp;lt;enter&amp;amp;gt; Password: ****** &amp;amp;lt;enter&amp;amp;gt; Verify: ***** &amp;amp;lt;enter&amp;amp;gt; パケットフィルタリングの設定 想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。</description></item><item><title>さくらのVPSで回線速度が遅くアクセスに時間がかかる</title><link>https://tomonorimatsumura.github.io/blog/p622/</link><pubDate>Fri, 25 Jan 2013 13:50:04 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p622/</guid><description>さくらの公式サイトによると、どうやら初期設定で変更をかける必要があるらしい。
ethtoolコマンドでtcp segmentation offloadをoffにする ethtool -K eth0 tso off ethtool -k eth0 Offload parameters for eth0: rx-checksumming: on tx-checksumming: on scatter-gather: on tcp-segmentation-offload: off # onからoffになった udp-fragmentation-offload: on generic-segmentation-offload: on generic-receive-offload: off large-receive-offload: off reboot時にも設定を有効にする vi /etc/udev/rules.d/50-eth_tso.rules # 以下の内容を記述 ACTION==&amp;quot;add&amp;quot;, SUBSYSTEM==&amp;quot;net&amp;quot;, KERNEL==&amp;quot;eth0&amp;quot;, RUN+=&amp;quot;/sbin/ethtool -K eth0 tso off&amp;quot; 参考サイト 1TSOが原因でさくらVPSへのウェブアクセスが異常に遅くなるトラブルに遭遇 – 橙工房 Atelier Laranjeiras [001387]さくらのVPSで「CentOS」を利用していますが、回線速度が遅くアクセスに時間がかかります。 | FAQ Search – さくらインターネット</description></item><item><title>CentOS6.3にVMware Playerをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p618/</link><pubDate>Tue, 22 Jan 2013 05:37:29 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p618/</guid><description>さくらのVPS上でWindows XPを動かそうと思い、いろいろと画策中。。。
http://dharry.hatenablog.com/entry/20090912/1252690650
http://www.howtoforge.com/vmware_server_centos5.0
http://morishige.jp/blog/archives/43</description></item><item><title>CentOS6.3にFTPサーバをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p577/</link><pubDate>Wed, 09 Jan 2013 17:12:27 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p577/</guid><description>なんとなくやってみた。
vsftpdをインストールする 標準では入って無いのでインストールする
yum install vsftpd vsftpd.confを設定する 『/etc/vsftpd/vsftpd.conf』を編集する。他にも設定すべきところがあるが、動作確認のみしたいので。
anonymous_enable=YES vsftpdを起動する service vsftpd start クライアントのCentOSにFTPクライアントをインストールする yum -y install ftp FTPサーバへ接続する ftp -v ip FTPサーバへブラウザからアクセスする ftp://anonymous@url/ftp/pubにアクセスする。ファイルは/var/ftpにあるものが表示される。</description></item><item><title>CentOS6.3にEPELリポジトリを追加する</title><link>https://tomonorimatsumura.github.io/blog/p548/</link><pubDate>Sat, 05 Jan 2013 04:29:24 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p548/</guid><description>EPELリポジトリを追加する EPELの公式サイトのFAQにインストール方法があった。
# 32bit版64bit版共通 rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm EPELの設定を確認する 念のため、優先順位の設定を確認しておく。『/etc/yum.repos.d/epel.repo』を開いて、[epel]のenabled=をenabled=1にする。
cat /etc/yum.repos.d/epel.repo 参考サイト EPEL/ – FedoraProject CentOSにepel、remiリポジトリを追加する | ExiZ.org</description></item><item><title>CentOS6.3にRemiリポジトリをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p542/</link><pubDate>Sat, 05 Jan 2013 04:04:21 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p542/</guid><description>どうやらCentOSでPHP+MySQLのアップデートを行うにはRemiリポジトリが相性が良いらしい。
Remiをインストールする まずEPELリポジトリが入っているか確認し、入っていなければインストールする。Remiは個人でアップデートされているものらしいので、もしかしたらURLが変わるかもしれないしサイト自体が閉鎖される可能性があるが、現時点では以下のコマンドでインストール出来る。
rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm Remiの設定を確認する 念のため、優先順位の設定を確認しておく。『/etc/yum.repos.d/remi.repo』を開いて、[remi]のenabled=1をenabled=0に変更する。
cat /etc/yum.repos.d/remi.repo 参考サイト Les RPM de Remi CentOSにepel、remiリポジトリを追加する | ExiZ.org remi レポジトリを追加 – KENCOM.BIZ</description></item><item><title>cronを使うための準備</title><link>https://tomonorimatsumura.github.io/blog/p519/</link><pubDate>Wed, 02 Jan 2013 06:15:18 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p519/</guid><description>http://centlinuxer.blog37.fc2.com/blog-entry-36.html</description></item><item><title>WordPressをPC閲覧用とスマホ閲覧用に分ける</title><link>https://tomonorimatsumura.github.io/blog/p516/</link><pubDate>Wed, 02 Jan 2013 03:28:58 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p516/</guid><description>PC用のテンプレートからだとスマホからアクセスした時に表示が見にくいのでWordPressブログをもう一つ用意して同期する。
http://linuxserver.jp/%E3%82%B5%E3%83%BC%E3%83%90%E6%A7%8B%E7%AF%89/DB/MySQL/mysqldump%E3%81%A8cron%E3%81%A7%E3%81%AE%E8%87%AA%E5%8B%95%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97.php</description></item><item><title>CentOS6.3にWordPressをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p463/</link><pubDate>Mon, 31 Dec 2012 08:02:40 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p463/</guid><description>権限の設定でハマったのでメモ。
WordPressをダウンロード、解凍する 最新版はこちらから確認する。
cd /path/to/wordpressfolder wget http://ja.wordpress.org/wordpress-3.5-ja.zip unzip wordpress-3.5-ja.zip #wordpressと言うフォルダに展開される mv wordpress blogfolder データベースを作成する rootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する
mysql -u root -p #パスワードを入力 CREATE DATABASE wordpress-db; GRANT ALL ON wordpress-db.* TO wpuser@localhost IDENTIFIED BY 'パスワード'; WordPressの権限を書き換える CentOSでユーザを作成し、そのユーザに権限を与えるのかと思ったが、どうやらApacheに権限を与えるらしい。。。
chown -R apache:apache blogfolder WordPressの初期設定を行いブログを開設する 上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する
参考サイト ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</description></item><item><title>さくらのVPSにJenkins + PHPUnitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p402/</link><pubDate>Sun, 09 Dec 2012 03:58:08 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p402/</guid><description>さくらのVPSにJenkins環境を整えるメモ。
Xdebugをインストールする PECLからインストールする
pecl install xdebug PHPUnitをインストールする /usr/share/pear/PHPUnitにインストールされる。インストールコマンドは良く変更されるのでPHPUnitのHPを良く確認する。
pear config-set auto_discover 1 pear install pear.phpunit.de/PHPUnit phpDocumentorをインストールする phpDocumentorの公式サイトを参考にする。/usr/share/pear/PhpDocumentorにインストールされる
pear channel-discover pear.phpdoc.org pear install phpdoc/phpDocumentor-alpha その他のライブラリをインストールする pear channel-discover pear.phpmd.org pear channel-discover pear.symfony-project.com pear channel-discover pear.symfony.com pear channel-discover pecl.php.net pear channel-discover pear.pdepend.org pear channel-discover pear.netpirates.net pear install --alldeps phpunit/phpcpd pear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ 参考サイト CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</description></item><item><title>CentOS6に最新バージョンのPHPをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p395/</link><pubDate>Sat, 08 Dec 2012 17:22:48 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p395/</guid><description>Apacheをインストールする # apache用のSSLモジュールもインストールしておく yum -y install httpd httpd-devel mod_ssl PHPをインストールする 一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。Remiリポジトリが追加されていない場合は事前に追加しておくこと。2013年1月現在はremi-testではなく、remiでも入る。remi-testだとどのバージョンのPHPがインストールされるかは不明。。またPECLコマンドを使用する場合、PEARがインストールされている必要があるので必ず入れておく。
# 必要なライブラリを入れる yum -y install libxml2-devel # 5.3系を入れる yum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap # 5.4系にバージョンアップする sudo yum update php* --enablerepo=remi-test インストールされているかチェック
php -v PHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) Copyright (c) 1997-2012 The PHP Group Zend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies php.confを編集する 『/etc/httpd/conf.d/php.conf』を開き編集する
AddType application/x-httpd-php .php AddType application/x-httpd-php-source .phps http.</description></item><item><title>CentOS6で端末をショートカットキーで起動させる</title><link>https://tomonorimatsumura.github.io/blog/p374/</link><pubDate>Fri, 07 Dec 2012 11:25:32 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p374/</guid><description>システム→設定→キーボード・ショートカットからデスクトップ→端末の起動の順。
ディフォルトは無効になっていたのでshift+ctrl+Sに設定した。</description></item><item><title>CentOS6.3でFileZillaを使用する</title><link>https://tomonorimatsumura.github.io/blog/p306/</link><pubDate>Tue, 04 Dec 2012 01:32:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p306/</guid><description>FileZillaをインストールする 最初はgFTPをRPMからインストールしようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumからFileZillaをインストールすることにした。
yum --enablerepo=epel list install filezilla #パッケージがあるか確認 yum --enablerepo=epel install filezilla #インストール インストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。
FileZillaを設定する 基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。ポートは設定しなくても、FileZilla側が接続時に勝手に見つけてくれる感じだ。
また一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。
参考サイト CentOS6.2 FileZillaのインストール | SlackHack</description></item><item><title>CentOS6でSubversionからgitに移行する</title><link>https://tomonorimatsumura.github.io/blog/p290/</link><pubDate>Sun, 02 Dec 2012 11:59:34 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p290/</guid><description>一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは入門git
git-svnが利用できるか確認する まずgitとSubversionを連携させるためのツールがインストールされているか確認する
git svn --version **Can’t locate SVN/Core.pm in @INC…**とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。
yum install subversion-perl 簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると
移行の準備は整った。
Subversionリポジトリをインポートする さくらのレンタルサーバにあるリポジトリからローカルにリビジョン番号を指定してインポートしてみる。
cd /root/ダウンロード git svn clone -r {start_rev}:{end_rev} svn+ssh://{username}@{domain}.sakura.ne.jp/home/{username}/var/svn/{repo} インポートされたリポジトリの確認 cd git-repository git log 操作方法が分からないときはhを入力するとHELPが表示される
SUMMARY OF LESS COMMANDS Commands marked with * may be preceded by a number, N. Notes in parentheses indicate the behavior if N is given. h H Display this help. q :q Q :Q ZZ Exit. --------------------------------------------------------------------------- MOVING e ^E j ^N CR * Forward one line (or N lines).</description></item><item><title>CentOS6にJenkinsをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p201/</link><pubDate>Fri, 30 Nov 2012 15:59:15 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p201/</guid><description>Javaをインストールする Javaがインストールされていない場合はインストールする。
rpm -qa java-1.7.0-openjdk yum -y install java-1.7.0-openjdk Jenkinsをインストールする 基本的には公式ページを参考にする。
http://pkg.jenkins-ci.org/redhat/
sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo sudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key yum install jenkins Jenkinsを起動する Jenkinsはポート8080がディフォルト。
httpd -k start /sbin/service jenkins start ブラウザからhttp://localhost:8080/へアクセス。
JenkinsとApacheを連携させる まずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。
cd /etc/httpd/conf.d vi mod_proxy.conf # 書き込み内容 ProxyPass /jenkins http://localhost:8080/jenkins ProxyPassReverse /jenkins http://localhost:8080/jenkins ProxyRequests Off Jenkinsの設定ファイルを書き換える
vi /etc/sysconfig/jenkins JENKINS_ARGS=&amp;quot;--prefix=/jenkins&amp;quot; #最終行を書き換え ApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる
httpd -k stop httpd -k start /sbin/service jenkins start 参考サイト RedHat Linux RPM packages for Jenkins Apache のリバースプロキシの設定方法 | WebOS Goodies jenkinsとapacheの連携 – Dev3TechHack</description></item><item><title>CentOS6.3にRedmine環境を構築する</title><link>https://tomonorimatsumura.github.io/blog/p190/</link><pubDate>Mon, 26 Nov 2012 17:13:25 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p190/</guid><description>Tracがどうも使いにくいのでRedmineに移行してみる実験をする。
CentOSパッケージの追加インストール まずはEPELが導入されているか確かめる。導入されてなければインストールする。
yumで追加インストール
# 開発パッケージを導入。こちらは使わないものもいくらか入る yum groupinstall &amp;amp;quot;Development Tools&amp;amp;quot; # 通信関係を入れたりアップデートする yum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel # MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！ yum install mysql-server mysql-devel # Apacheをアップデートする（一応やっておく） yum install httpd httpd-devel # ImageMagickをインストールアップデートする（多分入ってない） yum install ImageMagick ImageMagick-devel SELinuxを無効にする エディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。
vi /etc/sysconfig/selinux SELINUX=disabled reboot iptablesでHTTPを許可する CentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。
vi /etc/sysconfig/iptables # Firewall configuration written by system-config-firewall # Manual customization of this file is not recommended. *filter :INPUT ACCEPT [0:0] :FORWARD ACCEPT [0:0] :OUTPUT ACCEPT [0:0] -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT -A INPUT -p icmp -j ACCEPT -A INPUT -i lo -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT -A INPUT -j REJECT --reject-with icmp-host-prohibited -A FORWARD -j REJECT --reject-with icmp-host-prohibited COMMIT # iptablesを再起動する service iptables restart Ruby 1.</description></item><item><title>CentOS6に最新バージョンのMySQLとphpMyAdminをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p187/</link><pubDate>Sun, 25 Nov 2012 17:04:21 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p187/</guid><description>yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。
MySQL5.5系をインストールする 5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。事前にRemiリポジトリが追加されているか確認しておく事。
# MySQLを停止する /etc/rc.d/init.d/mysqld stop # MySQLを削除する yum erase mysql mysql-server mysql-devel # 5.5系をインストール yum --enablerepo=remi install mysql mysql-server mysql-devel MySQLの初期設定を行う MySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある
/etc/rc.d/init.d/mysqld start mysql_secure_installation このあと適宜ユーザー名やパスワードを設定する
MySQLのバージョンを確認する 一応ここでバージョンを確認しておく
mysql --version mysql Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1 my.confを設定する こちらのサイトを参考にしてみた。**『/etc/my.cnf』**を以下のように修正する
[mysqld] datadir=/var/lib/mysql socket=/var/lib/mysql/mysql.sock user=mysql # Disabling symbolic-links is recommended to prevent assorted security risks symbolic-links=0 character-set-server=utf8 [mysqld_safe] log-error=/var/log/mysqld.log pid-file=/var/run/mysqld/mysqld.pid [mysql] default-character-set=utf8 phpMyAdminをインストールする 基本的にはphpMyAdminの公式サイトからzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminはMySQLの初期設定が終わっていないと立ち上がらないので注意。
またダウンロードしたアーカイブをscpでサーバにアップする場合は
cd /path/to/phpMyAdmin-3.</description></item><item><title>CentOS6にPECL::ssh2をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p183/</link><pubDate>Sun, 25 Nov 2012 14:10:02 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p183/</guid><description>PECL::ssh2をインストールする インストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。
yum install php-devel php-pear libssh2 libssh2-devel pecl install ssh2 channel://pecl.php.net/ssh2-0.12 php.iniを開き、extension=ssh2.soを書き加える
PECL::ssh2を使ったPHPのサンプルコード &amp;amp;lt;?php $connection = ssh2_connect(&amp;quot;ssh.host&amp;quot;, 22); if (ssh2_auth_password($connection, &amp;quot;user&amp;quot;, &amp;quot;pass&amp;quot;)) { echo &amp;quot;Authentication Successful!\n&amp;quot;; } else { die(&amp;quot;Authentication Failed...&amp;quot;); } ssh2_scp_send($connection, &amp;quot;/remote/file&amp;quot;, &amp;quot;/local/file&amp;quot;, 0644); ?&amp;amp;gt; ファイル名はローカルとリモートで必ずフルパスで指定すること！
参考サイト Installing SSH2 Extension for PHP on CentOS 5 | Dynamic Hosting Blog</description></item><item><title>CentOS6にgitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p165/</link><pubDate>Fri, 16 Nov 2012 15:45:38 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p165/</guid><description>gitを使う必要が出てきたのでインストール。
必要環境の確認 まずgitのサポートページで必要ライブラリを確認。どうやらcURLやopenSSLなどが必要らしい
yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel gitをインストール gitのリポジトリサイトから最新版を入手してインストール
cd /usr/local/src wget http://git-core.googlecode.com/files/git-1.8.0.tar.gz tar -xzvf git-1.8.0.tar.gz cd git-1.8.0 ./configure --prefix=/usr/local/ make make install **Can’t locate ExtUtils/MakeMaker.pm in @INC…**って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール。通常は入って無いと思われるので最初に入れておいた方が無難。
yum install perl-ExtUtils-MakeMaker gitの確認 バージョンを確認してみる
git --version 参考サイト Git – Gitのインストール Git – Book</description></item><item><title>CentOS6にEclipse + Pleiades + PDTをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p157/</link><pubDate>Thu, 15 Nov 2012 06:33:56 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p157/</guid><description>Eclipseをインストールする http://www.eclipse.org/downloads/より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード 「~/ダウンロード」にダウンロードされるのでそのフォルダで解凍する Eclipse配置用ディレクトリを作成する。今回は「~/アプリケーション」以下にEclipseを配置する。 mvコマンドで「~/アプリケーション」へ移動させる```:bash cd ~/ダウンロード tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz mv eclipse ~/アプリケーション ### Pleiadesをインストールする pleiadesのZIPアーカイブは、フォルダなしで展開されるので、事前に展開するフォルダを作成しておく。 ```:bash mkdir ~/ダウンロード/pleiades unzip pleiades.zip -d ~/ダウンロード/pleiades/ cp -a ~/ダウンロード/pleiades/* ~/アプリケーション/eclipse/ 『**~/アプリケーション/eclipse/eclipse.ini**』の最終行に設定を記述する ```:text -javaagent:/home/{user}/アプリケーション/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar
*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。 ### シンボリックリンクを作成する デスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す ```:bash cd ~/デスクトップ/ ln -s ~/アプリケーション/eclipse/eclipse eclipse ln -s ~/アプリケーション/eclipse/eclipse /usr/local/bin これでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから**「eclipse」**と入力すればEclipseが立ち上がるようになる。 ### PDT(PHP Developing Tools)をインストールする &amp;lt;http://wiki.eclipse.org/PDT/Installation_3.1.x&amp;gt; 基本的には上記URLの通りに入れる ### 参考サイト * [Mac版 Eclipse4.2の日本語化手順 &amp;amp;#8211; いっぽんの猟銃のむこうに (DAIZOじいさんとGun)][1] * [PDT/Installation 3.</description></item><item><title>CentOS6にGIMPをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p97/</link><pubDate>Fri, 09 Nov 2012 12:14:31 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p97/</guid><description>そろそろGIMPを覚えようと思いインストール。ちなみにGIMPとは「The GNU Image Manipulation Program」の略。
GIMPをインストールする yum install gimp gimp -vでバージョンが確認出来る。
[root@localhost ~]# gimp -v GNU Image Manipulation Program ver.2.6.9&amp;amp;lt;/samp&amp;amp;gt;&amp;amp;lt;/samp&amp;amp;gt;GEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2) GLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5) GTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9) Pango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1) Fontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0) 出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。
しかしPhotoshopと使い勝手が違うので若干操作しにくい。。。</description></item><item><title>CentOSにFastCGIをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p43/</link><pubDate>Sun, 28 Oct 2012 10:54:31 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p43/</guid><description>どうやらRubyをCentOSで動かすにはFastCGIと言って、動作をキャッシュするような仕組みをインストール刷る必要があるらしい。
FastCGIをインストールする cd /usr/local/src/ wget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz tar xzfz mod_fastcgi-2.4.6.tar.gz cd mod_fastcgi-2.4.6 cp Makefile.AP2 Makefile make top_dir=/usr/lib/httpd make top_dir=/usr/lib/httpd install makeコマンドで認識刷るファイルはMakefileと言う名前のみなので、mod_fastcig-2.4.6フォルダ内のMakefile.AP2をMakefileにコピーして変更する。
参考サイト FastCGIのインストールと設定</description></item><item><title>CentOS6でApacheの設定</title><link>https://tomonorimatsumura.github.io/blog/p27/</link><pubDate>Sat, 27 Oct 2012 12:18:42 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p27/</guid><description>httpd: Could not reliably determine the server’s fully qualified domain name, using 127.0.0.1 for ServerName
エラーに対する処理
http://blog.dacelo.info/apache/entry-713.html
http://d.hatena.ne.jp/geek_it/20090824/1251131134
mod_fasitcgiのインストール手順
Makefileのディレクトリの設定とかいじる必要がある。
http://blog.riywo.com/2011/01/08/170354
http://d.hatena.ne.jp/hedachi/20090722/1248257509</description></item><item><title>CentOS6.3にRuby1.9をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p13/</link><pubDate>Thu, 25 Oct 2012 10:37:11 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p13/</guid><description>そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。
このサイトを参考にRPM（Ruby Package Manager）を使用する方法でインストールする。
http://morizyun.github.com/blog/rvm-install-centos-ruby-rails/
libyamlのインストール Rubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。
まずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように**./configure –prefix=/usr/local**を指定。
cd /usr/local/src wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz tar zxvf yaml-0.1.4.tar.gz cd yaml-0.1.4 ./configure --prefix=/usr/local make sudo make install rubyのインストール Rubyをインストール。最新版はここから確認出来る。
cd /usr/local/src wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz tar zxvf ruby-1.9.3-p392.tar.gz cd ruby-1.9.3-p392 ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib make sudo make install``` #### rubygemsのインストール Ruby1.9より標準で組み込まれているのでそれより以前のバージョンを使うときのみ手動でインストールする。 #### Railsのインストール ```:bash gem install rails``` 結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。 #### Passenger のインストール RailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。 ```:bash gem install passenger passenger-install-apache2-module``` このプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル ```:bash cd /usr/local/src wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz tar zxvf ruby-1.</description></item></channel></rss>