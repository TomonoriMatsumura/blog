<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>さくらのVPS on Mainroad</title><link>https://tomonorimatsumura.github.io/blog/categories/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps/</link><description>Recent content in さくらのVPS on Mainroad</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 19 Mar 2017 09:11:45 +0000</lastBuildDate><atom:link href="https://tomonorimatsumura.github.io/blog/categories/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps/index.xml" rel="self" type="application/rss+xml"/><item><title>さくらのVPSにFreeBSD 9.3をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1250/</link><pubDate>Sun, 19 Mar 2017 09:11:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1250/</guid><description>ISOイメージをVPSへアップロードする クライアントマシーン（CentOS7）にlsftpをインストールする。
yum install lftp FreeBSDのアーカイブスから取得出来る。
lftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/ #接続後ISOイメージをダウンロード cd release/ISO-IMAGES/9.3 get FreeBSD-9.3-RELEASE-amd64-dvd1.iso さくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。
FreeBSDをインストールする インストーラーを起動する さくらのVPSコントロールパネルよりウェブコンソールを立ち上げてしばらく待つとインストーラーのウェルカム画面が表示される。
キーボードを選択する 『Japanse 106』を選択する
ホストを設定する さくらのVPSコントロールパネルより『ネットワーク情報』→『標準ホスト名』を入力する
オプションを設定する 必要なものにチェックを入れる。『doc』と『games』は必要ないと思われる。
ディスクパーティションを行う 難しい設定は良く分からないのでシステムに任せる。
Checksum Valificationが処理される
Archive Extractionが処理される
rootパスワードを設定する
NICの設定を行う IPv4のみ設定する。IPv6は特に設定しなくてもシステム的に問題ないと思われる。またDHCPは設定しないようにする。
DHCPは設定しない
ウェブコンソールを参照しながら入力する
IP Adress: 『ネットワーク情報』→『IPv4』→『アドレス』 Subnet Mask: 『ネットワーク情報』→『IPv4』→『ネットマスク』 Default Router: 『ネットワーク情報』→『IPv4』→『ゲートウェイ』
IPv6は設定しない
リゾルバーを設定する。
ウェブコンソールを参照しながら入力する
Search: 何も入力しない IPv4 DNS #1: 『ネットワーク情報』→『IPv4』→『プライマリDNS』 IPv4 DNS #2: 『ネットワーク情報』→『IPv4』→『セカンダリDNS』</description></item><item><title>さくらのVPSにVirtualBox + vagrantをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p1168/</link><pubDate>Sun, 06 Mar 2016 11:32:06 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p1168/</guid><description>Docker、Vagrant等仮想化技術が非常に大切だと感じるこの頃｡｡｡
想定環境 さくらのVPS 2GB CentOS7 VirtualBoxをインストールする こちらのサイトを参考にした。
yum istall dkms cd /etc/yum.repos.d/ sudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo yum update yum list | grep VirtualBox yum install VirtualBox-xxxx Vagrantをインストールする 公式サイトよりrmpをダウンロードしインストーるする
rpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm</description></item><item><title>さくらのVPSにCentOS6.4 i386をインストールする</title><link>https://tomonorimatsumura.github.io/blog/p861/</link><pubDate>Sun, 15 Sep 2013 16:03:34 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p861/</guid><description>VMWare Playerの実験をしようと思い、色々とやってみた。
CentOSのisoファイルをさくらのVPSへアップロードする sftpでイメージをアップロードする必要がある
CentOSをインストールする ネットワークの設定を行う /etc/resolv.conf、/etc/sysconfig/network-scripts/ifcfg-eth0は既に構築してあるCentOSサーバの設定を参考にする。設定ファイル自体には色々とゴタゴタ書く必要はない。
network managerをoffる。/etc/resolv.confを設定する。
/etc/sysconfig/network-scripts/ifcfg-eth0を設定する
iptablesの設定を行う
参考サイト CentOSのネットワーク設定を手動で行う方法 – bojovs blog はじめての自宅サーバ構築 – Fedora/CentOS – CentOS6 のインストール手順 NetworkManagerについて – 冬日記</description></item><item><title>さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p787/</link><pubDate>Mon, 25 Mar 2013 01:42:01 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p787/</guid><description>VMWare Playerをインストールする https://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/5_0
さくらのVPSからVMWare Playerを使うにはバイバスを通す必要がある
http://communities.vmware.com/docs/DOC-8970
vmx.allowNested = TRUE
ローカルのCentOSでEpson LP-S2000を使う場合は、ドライバをインストールした後、一度電源を入れて認識させ、プリンタを削除してもう一度接続し直す。
VMWare Playerをアンインストールする /usr/bin/vmware-installer -u vmware-player 参考サイト VMware Communities: VMware Player connot run on this CPU VMware Communities: Running Nested VMs Uninstall Vmware Player</description></item><item><title>さくらのVPSでVNCを起動する</title><link>https://tomonorimatsumura.github.io/blog/p646/</link><pubDate>Sat, 02 Feb 2013 04:26:45 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p646/</guid><description>リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応このサイトの手順通りで大体は環境構築が可能だと思う。
1. 必要なパッケージのインストール サーバ 想定される環境だと、tigervnc-serverとデスクトップパッケージをインストールする必要がある。rpmからインストールする。
yum install tigervnc-server yum groupinstall &amp;quot;Desktop&amp;quot;; yum install -y gnome* # システムモニターなどが使えるようになる このコマンドは無効化も知れない yum groupinstall &amp;quot;Desktop&amp;quot; &amp;quot;Desktop Platform&amp;quot; &amp;quot;General Purpose Desktop&amp;quot; yum groupinstall &amp;quot;X Window System&amp;quot;; CentOSを日本語化するにはこちらを参考にする。
クライアント こちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。
yum install vnc VNCサーバの設定 vi /etc/sysconfig/vncservers # 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！) VNCSERVERS=&amp;quot;1:vncuser&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 800x600&amp;quot; 複数ユーザを設定する場合は
vi /etc/sysconfig/vncservers # 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！) VNCSERVERS=&amp;quot;1:vncuser1 2:vncuser2&amp;quot; VNCSERVERARGS[1]=&amp;quot;-geometry 800x600&amp;quot; VNCSERVERARGS[2]=&amp;quot;-geometry 800x600&amp;quot; VNCユーザの設定 ログインユーザーをVNCユーザーに切り替えてパスワードを変更する
su vncuser vncpasswd &amp;amp;lt;enter&amp;amp;gt; Password: ****** &amp;amp;lt;enter&amp;amp;gt; Verify: ***** &amp;amp;lt;enter&amp;amp;gt; パケットフィルタリングの設定 想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。</description></item><item><title>さくらのVPSで回線速度が遅くアクセスに時間がかかる</title><link>https://tomonorimatsumura.github.io/blog/p622/</link><pubDate>Fri, 25 Jan 2013 13:50:04 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p622/</guid><description>さくらの公式サイトによると、どうやら初期設定で変更をかける必要があるらしい。
ethtoolコマンドでtcp segmentation offloadをoffにする ethtool -K eth0 tso off ethtool -k eth0 Offload parameters for eth0: rx-checksumming: on tx-checksumming: on scatter-gather: on tcp-segmentation-offload: off # onからoffになった udp-fragmentation-offload: on generic-segmentation-offload: on generic-receive-offload: off large-receive-offload: off reboot時にも設定を有効にする vi /etc/udev/rules.d/50-eth_tso.rules # 以下の内容を記述 ACTION==&amp;quot;add&amp;quot;, SUBSYSTEM==&amp;quot;net&amp;quot;, KERNEL==&amp;quot;eth0&amp;quot;, RUN+=&amp;quot;/sbin/ethtool -K eth0 tso off&amp;quot; 参考サイト 1TSOが原因でさくらVPSへのウェブアクセスが異常に遅くなるトラブルに遭遇 – 橙工房 Atelier Laranjeiras [001387]さくらのVPSで「CentOS」を利用していますが、回線速度が遅くアクセスに時間がかかります。 | FAQ Search – さくらインターネット</description></item><item><title>さくらのVPSにJenkins + PHPUnitをインストールする</title><link>https://tomonorimatsumura.github.io/blog/p402/</link><pubDate>Sun, 09 Dec 2012 03:58:08 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p402/</guid><description>さくらのVPSにJenkins環境を整えるメモ。
Xdebugをインストールする PECLからインストールする
pecl install xdebug PHPUnitをインストールする /usr/share/pear/PHPUnitにインストールされる。インストールコマンドは良く変更されるのでPHPUnitのHPを良く確認する。
pear config-set auto_discover 1 pear install pear.phpunit.de/PHPUnit phpDocumentorをインストールする phpDocumentorの公式サイトを参考にする。/usr/share/pear/PhpDocumentorにインストールされる
pear channel-discover pear.phpdoc.org pear install phpdoc/phpDocumentor-alpha その他のライブラリをインストールする pear channel-discover pear.phpmd.org pear channel-discover pear.symfony-project.com pear channel-discover pear.symfony.com pear channel-discover pecl.php.net pear channel-discover pear.pdepend.org pear channel-discover pear.netpirates.net pear install --alldeps phpunit/phpcpd pear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ 参考サイト CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</description></item><item><title>さくらのVPSでSSHの初期設定を行う</title><link>https://tomonorimatsumura.github.io/blog/p5/</link><pubDate>Thu, 04 Oct 2012 08:51:41 +0000</pubDate><guid>https://tomonorimatsumura.github.io/blog/p5/</guid><description>秘密鍵および公開鍵の作成 ローカルのCentOSから
ssh-keygen -t rsa これで、/root/.sshに、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。
さくらVPSに公開キーをアップ VPSコントロールパネルを呼び出しリモートコンソールを機動し
https://secure.sakura.ad.jp/vpscontrol/main/
touch ~/.ssh/authorized_keys chmod 600 ~/.ssh/authorized_keys ローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする。
ローカルもしくはサーバにknown_hostsがある場合は削除しておく。</description></item></channel></rss>